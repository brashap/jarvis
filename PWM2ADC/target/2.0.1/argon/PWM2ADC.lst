
c:/Users/IoTPa/Documents/jarvis/PWM2ADC/target/2.0.1/argon/PWM2ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .module_info  00000018  000d4000  000d4000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .dynalib      00000004  000d4018  000d4018  00004018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000030a0  000d4020  000d4020  00004020  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .backup       00000004  2003f400  000d70c0  0000f400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .data         0000006c  2003e5cc  000d70c4  0001e5cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          000001b8  2003e638  2003e638  0002e638  2**2
                  ALLOC
  6 .module_info_suffix 00000028  000d7130  000d7130  00027130  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .module_info_crc 00000004  000d7158  000d7158  00027158  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .debug_info   000f5827  00000000  00000000  0002715c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00010fb2  00000000  00000000  0011c983  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00020f28  00000000  00000000  0012d935  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00002078  00000000  00000000  0014e85d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00005f28  00000000  00000000  001508d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00032e59  00000000  00000000  001567fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0002a9e4  00000000  00000000  00189656  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00100694  00000000  00000000  001b403a  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00005984  00000000  00000000  002b46d0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

000d4020 <module_user_pre_init>:
/**
 * Initializes this user module. Returns the start of the heap.
 */
void* module_user_pre_init() {

    if ( (&link_global_data_start!=&link_global_data_initial_values) && (link_global_data_size != 0))
   d4020:	4809      	ldr	r0, [pc, #36]	; (d4048 <module_user_pre_init+0x28>)
   d4022:	490a      	ldr	r1, [pc, #40]	; (d404c <module_user_pre_init+0x2c>)
   d4024:	4288      	cmp	r0, r1
void* module_user_pre_init() {
   d4026:	b508      	push	{r3, lr}
    if ( (&link_global_data_start!=&link_global_data_initial_values) && (link_global_data_size != 0))
   d4028:	d005      	beq.n	d4036 <module_user_pre_init+0x16>
   d402a:	4a09      	ldr	r2, [pc, #36]	; (d4050 <module_user_pre_init+0x30>)
   d402c:	4282      	cmp	r2, r0
   d402e:	d002      	beq.n	d4036 <module_user_pre_init+0x16>
    {
        memcpy(&link_global_data_start, &link_global_data_initial_values, link_global_data_size);
   d4030:	1a12      	subs	r2, r2, r0
   d4032:	f002 fe47 	bl	d6cc4 <memcpy>
    }

    memset(&link_bss_location, 0, link_bss_size );
   d4036:	4807      	ldr	r0, [pc, #28]	; (d4054 <module_user_pre_init+0x34>)
   d4038:	4a07      	ldr	r2, [pc, #28]	; (d4058 <module_user_pre_init+0x38>)
   d403a:	2100      	movs	r1, #0
   d403c:	1a12      	subs	r2, r2, r0
   d403e:	f002 fe4f 	bl	d6ce0 <memset>
    return &link_global_data_start;
}
   d4042:	4801      	ldr	r0, [pc, #4]	; (d4048 <module_user_pre_init+0x28>)
   d4044:	bd08      	pop	{r3, pc}
   d4046:	bf00      	nop
   d4048:	2003e5cc 	.word	0x2003e5cc
   d404c:	000d70c4 	.word	0x000d70c4
   d4050:	2003e638 	.word	0x2003e638
   d4054:	2003e638 	.word	0x2003e638
   d4058:	2003e7f0 	.word	0x2003e7f0

000d405c <module_user_init>:
extern constructor_ptr_t link_constructors_location[];
extern constructor_ptr_t link_constructors_end;
#define link_constructors_size   ((unsigned long)&link_constructors_end  -  (unsigned long)&link_constructors_location )

void module_user_init()
{
   d405c:	b570      	push	{r4, r5, r6, lr}
    module_user_init_hook();

    // invoke constructors
    int ctor_num;
    for (ctor_num=0; ctor_num < link_constructors_size/sizeof(constructor_ptr_t); ctor_num++ )
   d405e:	4e07      	ldr	r6, [pc, #28]	; (d407c <module_user_init+0x20>)
   d4060:	4c07      	ldr	r4, [pc, #28]	; (d4080 <module_user_init+0x24>)
    module_user_init_hook();
   d4062:	f000 fbf9 	bl	d4858 <module_user_init_hook>
    for (ctor_num=0; ctor_num < link_constructors_size/sizeof(constructor_ptr_t); ctor_num++ )
   d4066:	1ba4      	subs	r4, r4, r6
   d4068:	08a4      	lsrs	r4, r4, #2
   d406a:	2500      	movs	r5, #0
   d406c:	42a5      	cmp	r5, r4
   d406e:	d100      	bne.n	d4072 <module_user_init+0x16>
    {
        link_constructors_location[ctor_num]();
    }
}
   d4070:	bd70      	pop	{r4, r5, r6, pc}
        link_constructors_location[ctor_num]();
   d4072:	f856 3b04 	ldr.w	r3, [r6], #4
   d4076:	4798      	blx	r3
    for (ctor_num=0; ctor_num < link_constructors_size/sizeof(constructor_ptr_t); ctor_num++ )
   d4078:	3501      	adds	r5, #1
   d407a:	e7f7      	b.n	d406c <module_user_init+0x10>
   d407c:	000d7098 	.word	0x000d7098
   d4080:	000d70b8 	.word	0x000d70b8

000d4084 <module_user_setup>:

/**
 * Export these functions with a fuller name so they don't clash with the setup/loop wrappers in the system module.
 */
void module_user_setup() {
    setup();
   d4084:	f000 b821 	b.w	d40ca <setup>

000d4088 <module_user_loop>:
}

void module_user_loop() {
   d4088:	b508      	push	{r3, lr}
    loop();
   d408a:	f000 f82d 	bl	d40e8 <loop>
    _post_loop();
}
   d408e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    _post_loop();
   d4092:	f000 bba3 	b.w	d47dc <_post_loop>

000d4096 <_Znaj>:
   d4096:	f000 ba17 	b.w	d44c8 <malloc>

000d409a <_ZdlPv>:
	return malloc(size);
}

void operator delete(void *p)
{
	free(p);
   d409a:	f000 ba1d 	b.w	d44d8 <free>

000d409e <__cxa_guard_acquire>:

/* Provide default implemenation for __cxa_guard_acquire() and
 * __cxa_guard_release(). Note: these must be revisited if a multitasking
 * OS is ported to this platform. */
__extension__ typedef int __guard __attribute__((mode (__DI__)));
int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);};
   d409e:	7800      	ldrb	r0, [r0, #0]
   d40a0:	fab0 f080 	clz	r0, r0
   d40a4:	0940      	lsrs	r0, r0, #5
   d40a6:	4770      	bx	lr

000d40a8 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;};
   d40a8:	2301      	movs	r3, #1
   d40aa:	7003      	strb	r3, [r0, #0]
   d40ac:	4770      	bx	lr

000d40ae <_ZN5Print6printfEPKcz>:
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);
    size_t println(const __FlashStringHelper*);

    size_t printf(const char* format, ...) __attribute__ ((format(printf, 2, 3)))
   d40ae:	b40e      	push	{r1, r2, r3}
   d40b0:	b503      	push	{r0, r1, lr}
   d40b2:	ab03      	add	r3, sp, #12
    {
        va_list args;
        va_start(args, format);
        auto r = this->vprintf(false, format, args);
   d40b4:	2100      	movs	r1, #0
    size_t printf(const char* format, ...) __attribute__ ((format(printf, 2, 3)))
   d40b6:	f853 2b04 	ldr.w	r2, [r3], #4
        va_start(args, format);
   d40ba:	9301      	str	r3, [sp, #4]
        auto r = this->vprintf(false, format, args);
   d40bc:	f000 fb0b 	bl	d46d6 <_ZN5Print7vprintfEbPKcSt9__va_list>
        va_end(args);
        return r;
    }
   d40c0:	b002      	add	sp, #8
   d40c2:	f85d eb04 	ldr.w	lr, [sp], #4
   d40c6:	b003      	add	sp, #12
   d40c8:	4770      	bx	lr

000d40ca <setup>:
const int pwmPin = A0;
float t;
int freq = 50;
float vout;

void setup() {
   d40ca:	b508      	push	{r3, lr}
  Serial.begin(9600);
   d40cc:	f000 fcc4 	bl	d4a58 <_Z16_fetch_usbserialv>
   d40d0:	f44f 5116 	mov.w	r1, #9600	; 0x2580
   d40d4:	f000 fcb4 	bl	d4a40 <_ZN9USBSerial5beginEl>
  pinMode(pwmPin,OUTPUT);  
}
   d40d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  pinMode(pwmPin,OUTPUT);  
   d40dc:	2101      	movs	r1, #1
   d40de:	2013      	movs	r0, #19
   d40e0:	f000 bec4 	b.w	d4e6c <pinMode>
   d40e4:	0000      	movs	r0, r0
	...

000d40e8 <loop>:


void loop() {
   d40e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

#ifdef __cplusplus
extern "C" {
#endif

inline system_tick_t millis(void) { return HAL_Timer_Get_Milli_Seconds(); }
   d40ea:	f000 f899 	bl	d4220 <HAL_Timer_Get_Milli_Seconds>
  t = millis()/1000.0;
   d40ee:	f002 fa4f 	bl	d6590 <__aeabi_ui2d>
   d40f2:	2200      	movs	r2, #0
   d40f4:	4b28      	ldr	r3, [pc, #160]	; (d4198 <loop+0xb0>)
   d40f6:	f002 fbef 	bl	d68d8 <__aeabi_ddiv>
   d40fa:	f002 fd85 	bl	d6c08 <__aeabi_d2f>
   d40fe:	4b27      	ldr	r3, [pc, #156]	; (d419c <loop+0xb4>)
   d4100:	6018      	str	r0, [r3, #0]
  vout = 127*(sin(2*M_PI*freq*t)+1);
   d4102:	4b27      	ldr	r3, [pc, #156]	; (d41a0 <loop+0xb8>)
  t = millis()/1000.0;
   d4104:	4604      	mov	r4, r0
  vout = 127*(sin(2*M_PI*freq*t)+1);
   d4106:	6818      	ldr	r0, [r3, #0]
   d4108:	f002 fa52 	bl	d65b0 <__aeabi_i2d>
   d410c:	a31e      	add	r3, pc, #120	; (adr r3, d4188 <loop+0xa0>)
   d410e:	e9d3 2300 	ldrd	r2, r3, [r3]
   d4112:	f002 fab7 	bl	d6684 <__aeabi_dmul>
   d4116:	4606      	mov	r6, r0
   d4118:	4620      	mov	r0, r4
   d411a:	460f      	mov	r7, r1
   d411c:	f002 fa5a 	bl	d65d4 <__aeabi_f2d>
   d4120:	4602      	mov	r2, r0
   d4122:	460b      	mov	r3, r1
   d4124:	4630      	mov	r0, r6
   d4126:	4639      	mov	r1, r7
   d4128:	f002 faac 	bl	d6684 <__aeabi_dmul>
   d412c:	ec41 0b10 	vmov	d0, r0, r1
   d4130:	f000 ff16 	bl	d4f60 <sin>
   d4134:	4b1b      	ldr	r3, [pc, #108]	; (d41a4 <loop+0xbc>)
   d4136:	4c1c      	ldr	r4, [pc, #112]	; (d41a8 <loop+0xc0>)
   d4138:	ec51 0b10 	vmov	r0, r1, d0
   d413c:	2200      	movs	r2, #0
   d413e:	f002 f8eb 	bl	d6318 <__adddf3>
   d4142:	a313      	add	r3, pc, #76	; (adr r3, d4190 <loop+0xa8>)
   d4144:	e9d3 2300 	ldrd	r2, r3, [r3]
   d4148:	f002 fa9c 	bl	d6684 <__aeabi_dmul>
   d414c:	f002 fd5c 	bl	d6c08 <__aeabi_d2f>
   d4150:	6020      	str	r0, [r4, #0]
  Serial.printf("%0.2f\n",vout);
   d4152:	f000 fc81 	bl	d4a58 <_Z16_fetch_usbserialv>
   d4156:	4605      	mov	r5, r0
   d4158:	6820      	ldr	r0, [r4, #0]
   d415a:	f002 fa3b 	bl	d65d4 <__aeabi_f2d>
   d415e:	4602      	mov	r2, r0
   d4160:	460b      	mov	r3, r1
   d4162:	4628      	mov	r0, r5
   d4164:	4911      	ldr	r1, [pc, #68]	; (d41ac <loop+0xc4>)
   d4166:	f7ff ffa2 	bl	d40ae <_ZN5Print6printfEPKcz>
  analogWrite(A0,vout,5000);
   d416a:	edd4 7a00 	vldr	s15, [r4]
   d416e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   d4172:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  analogWrite(A0,vout,5000);
   d4176:	ee17 1a90 	vmov	r1, s15
   d417a:	f241 3288 	movw	r2, #5000	; 0x1388
   d417e:	2013      	movs	r0, #19
   d4180:	f000 be85 	b.w	d4e8e <_Z11analogWritetmm>
   d4184:	f3af 8000 	nop.w
   d4188:	54442d18 	.word	0x54442d18
   d418c:	401921fb 	.word	0x401921fb
   d4190:	00000000 	.word	0x00000000
   d4194:	405fc000 	.word	0x405fc000
   d4198:	408f4000 	.word	0x408f4000
   d419c:	2003e63c 	.word	0x2003e63c
   d41a0:	2003e5cc 	.word	0x2003e5cc
   d41a4:	3ff00000 	.word	0x3ff00000
   d41a8:	2003e640 	.word	0x2003e640
   d41ac:	000d6d5c 	.word	0x000d6d5c

000d41b0 <netdb_freeaddrinfo>:

DYNALIB_BEGIN(hal_netdb)

DYNALIB_FN(0, hal_netdb, netdb_gethostbyname, struct hostent*(const char*))
DYNALIB_FN(1, hal_netdb, netdb_gethostbyname_r, int(const char*, struct hostent*, char*, size_t, struct hostent**, int*))
DYNALIB_FN(2, hal_netdb, netdb_freeaddrinfo, void(struct addrinfo*))
   d41b0:	b508      	push	{r3, lr}
   d41b2:	4b02      	ldr	r3, [pc, #8]	; (d41bc <netdb_freeaddrinfo+0xc>)
   d41b4:	681b      	ldr	r3, [r3, #0]
   d41b6:	689b      	ldr	r3, [r3, #8]
   d41b8:	9301      	str	r3, [sp, #4]
   d41ba:	bd08      	pop	{r3, pc}
   d41bc:	00030268 	.word	0x00030268

000d41c0 <netdb_getaddrinfo>:
DYNALIB_FN(3, hal_netdb, netdb_getaddrinfo, int(const char*, const char*, const struct addrinfo*, struct addrinfo**))
   d41c0:	b508      	push	{r3, lr}
   d41c2:	4b02      	ldr	r3, [pc, #8]	; (d41cc <netdb_getaddrinfo+0xc>)
   d41c4:	681b      	ldr	r3, [r3, #0]
   d41c6:	68db      	ldr	r3, [r3, #12]
   d41c8:	9301      	str	r3, [sp, #4]
   d41ca:	bd08      	pop	{r3, pc}
   d41cc:	00030268 	.word	0x00030268

000d41d0 <HAL_Validate_Pin_Function>:
// GNINRAW

DYNALIB_BEGIN(hal_gpio)

DYNALIB_FN(0, hal_gpio, HAL_Pin_Map, Hal_Pin_Info*(void))
DYNALIB_FN(1, hal_gpio, HAL_Validate_Pin_Function, PinFunction(pin_t, PinFunction))
   d41d0:	b508      	push	{r3, lr}
   d41d2:	4b02      	ldr	r3, [pc, #8]	; (d41dc <HAL_Validate_Pin_Function+0xc>)
   d41d4:	681b      	ldr	r3, [r3, #0]
   d41d6:	685b      	ldr	r3, [r3, #4]
   d41d8:	9301      	str	r3, [sp, #4]
   d41da:	bd08      	pop	{r3, pc}
   d41dc:	0003022c 	.word	0x0003022c

000d41e0 <HAL_Pin_Mode>:
DYNALIB_FN(2, hal_gpio, HAL_Pin_Mode, void(pin_t, PinMode))
   d41e0:	b508      	push	{r3, lr}
   d41e2:	4b02      	ldr	r3, [pc, #8]	; (d41ec <HAL_Pin_Mode+0xc>)
   d41e4:	681b      	ldr	r3, [r3, #0]
   d41e6:	689b      	ldr	r3, [r3, #8]
   d41e8:	9301      	str	r3, [sp, #4]
   d41ea:	bd08      	pop	{r3, pc}
   d41ec:	0003022c 	.word	0x0003022c

000d41f0 <HAL_Get_Pin_Mode>:
DYNALIB_FN(3, hal_gpio, HAL_Get_Pin_Mode, PinMode(pin_t))
   d41f0:	b508      	push	{r3, lr}
   d41f2:	4b02      	ldr	r3, [pc, #8]	; (d41fc <HAL_Get_Pin_Mode+0xc>)
   d41f4:	681b      	ldr	r3, [r3, #0]
   d41f6:	68db      	ldr	r3, [r3, #12]
   d41f8:	9301      	str	r3, [sp, #4]
   d41fa:	bd08      	pop	{r3, pc}
   d41fc:	0003022c 	.word	0x0003022c

000d4200 <hal_pwm_write_with_frequency_ext>:
DYNALIB_FN(26, hal_gpio, HAL_DAC_Set_Resolution, void(pin_t, uint8_t))
DYNALIB_FN(27, hal_gpio, HAL_DAC_Enable_Buffer, void(pin_t pin, uint8_t state))
DYNALIB_FN(28, hal_gpio, hal_pwm_get_resolution, uint8_t(uint16_t))
DYNALIB_FN(29, hal_gpio, hal_pwm_set_resolution, void(uint16_t, uint8_t))
DYNALIB_FN(30, hal_gpio, hal_pwm_write_ext, void(uint16_t, uint32_t))
DYNALIB_FN(31, hal_gpio, hal_pwm_write_with_frequency_ext, void(uint16_t, uint32_t, uint32_t))
   d4200:	b508      	push	{r3, lr}
   d4202:	4b02      	ldr	r3, [pc, #8]	; (d420c <hal_pwm_write_with_frequency_ext+0xc>)
   d4204:	681b      	ldr	r3, [r3, #0]
   d4206:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
   d4208:	9301      	str	r3, [sp, #4]
   d420a:	bd08      	pop	{r3, pc}
   d420c:	0003022c 	.word	0x0003022c

000d4210 <HAL_RNG_GetRandomNumber>:

DYNALIB_BEGIN(hal)

#if PLATFORM_ID > 3
DYNALIB_FN(0, hal, HAL_RNG_Configuration, void(void))
DYNALIB_FN(1, hal, HAL_RNG_GetRandomNumber, uint32_t(void))
   d4210:	b508      	push	{r3, lr}
   d4212:	4b02      	ldr	r3, [pc, #8]	; (d421c <HAL_RNG_GetRandomNumber+0xc>)
   d4214:	681b      	ldr	r3, [r3, #0]
   d4216:	685b      	ldr	r3, [r3, #4]
   d4218:	9301      	str	r3, [sp, #4]
   d421a:	bd08      	pop	{r3, pc}
   d421c:	00030218 	.word	0x00030218

000d4220 <HAL_Timer_Get_Milli_Seconds>:
#endif

DYNALIB_FN(BASE_IDX + 0, hal, HAL_Delay_Milliseconds, void(uint32_t))
DYNALIB_FN(BASE_IDX + 1, hal, HAL_Delay_Microseconds, void(uint32_t))
DYNALIB_FN(BASE_IDX + 2, hal, HAL_Timer_Get_Micro_Seconds, system_tick_t(void))
DYNALIB_FN(BASE_IDX + 3, hal, HAL_Timer_Get_Milli_Seconds, system_tick_t(void))
   d4220:	b508      	push	{r3, lr}
   d4222:	4b02      	ldr	r3, [pc, #8]	; (d422c <HAL_Timer_Get_Milli_Seconds+0xc>)
   d4224:	681b      	ldr	r3, [r3, #0]
   d4226:	695b      	ldr	r3, [r3, #20]
   d4228:	9301      	str	r3, [sp, #4]
   d422a:	bd08      	pop	{r3, pc}
   d422c:	00030218 	.word	0x00030218

000d4230 <os_mutex_recursive_create>:
DYNALIB_FN(13, hal_concurrent, os_mutex_destroy, int(os_mutex_t))
DYNALIB_FN(14, hal_concurrent, os_mutex_lock, int(os_mutex_t))
DYNALIB_FN(15, hal_concurrent, os_mutex_trylock, int(os_mutex_t))
DYNALIB_FN(16, hal_concurrent, os_mutex_unlock, int(os_mutex_t))

DYNALIB_FN(17, hal_concurrent, os_mutex_recursive_create, int(os_mutex_recursive_t*))
   d4230:	b508      	push	{r3, lr}
   d4232:	4b02      	ldr	r3, [pc, #8]	; (d423c <os_mutex_recursive_create+0xc>)
   d4234:	681b      	ldr	r3, [r3, #0]
   d4236:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   d4238:	9301      	str	r3, [sp, #4]
   d423a:	bd08      	pop	{r3, pc}
   d423c:	00030248 	.word	0x00030248

000d4240 <os_mutex_recursive_destroy>:
DYNALIB_FN(18, hal_concurrent, os_mutex_recursive_destroy, int(os_mutex_recursive_t))
   d4240:	b508      	push	{r3, lr}
   d4242:	4b02      	ldr	r3, [pc, #8]	; (d424c <os_mutex_recursive_destroy+0xc>)
   d4244:	681b      	ldr	r3, [r3, #0]
   d4246:	6c9b      	ldr	r3, [r3, #72]	; 0x48
   d4248:	9301      	str	r3, [sp, #4]
   d424a:	bd08      	pop	{r3, pc}
   d424c:	00030248 	.word	0x00030248

000d4250 <inet_inet_ntop>:
DYNALIB_FN(0, hal_inet, inet_inet_addr, in_addr_t(const char*))
DYNALIB_FN(1, hal_inet, inet_inet_aton, int(const char*, struct in_addr*))
DYNALIB_FN(2, hal_inet, inet_inet_network, in_addr_t(const char*))
DYNALIB_FN(3, hal_inet, inet_inet_ntoa, char*(struct in_addr))
DYNALIB_FN(4, hal_inet, inet_inet_ntoa_r, char*(struct in_addr, char*, socklen_t))
DYNALIB_FN(5, hal_inet, inet_inet_ntop, const char*(int, const void*, char*, socklen_t))
   d4250:	b508      	push	{r3, lr}
   d4252:	4b02      	ldr	r3, [pc, #8]	; (d425c <inet_inet_ntop+0xc>)
   d4254:	681b      	ldr	r3, [r3, #0]
   d4256:	695b      	ldr	r3, [r3, #20]
   d4258:	9301      	str	r3, [sp, #4]
   d425a:	bd08      	pop	{r3, pc}
   d425c:	00030264 	.word	0x00030264

000d4260 <hal_usart_init>:
#define BASE_IDX 6 // Base index for all subsequent functions
#else
#define BASE_IDX 0
#endif

DYNALIB_FN(BASE_IDX + 0, hal_usart, hal_usart_init, void(hal_usart_interface_t, hal_usart_ring_buffer_t*, hal_usart_ring_buffer_t*))
   d4260:	b508      	push	{r3, lr}
   d4262:	4b02      	ldr	r3, [pc, #8]	; (d426c <hal_usart_init+0xc>)
   d4264:	681b      	ldr	r3, [r3, #0]
   d4266:	681b      	ldr	r3, [r3, #0]
   d4268:	9301      	str	r3, [sp, #4]
   d426a:	bd08      	pop	{r3, pc}
   d426c:	0003023c 	.word	0x0003023c

000d4270 <hal_usart_write>:
DYNALIB_FN(BASE_IDX + 1, hal_usart, hal_usart_begin, void(hal_usart_interface_t, uint32_t))
DYNALIB_FN(BASE_IDX + 2, hal_usart, hal_usart_end, void(hal_usart_interface_t))
DYNALIB_FN(BASE_IDX + 3, hal_usart, hal_usart_write, uint32_t(hal_usart_interface_t, uint8_t))
   d4270:	b508      	push	{r3, lr}
   d4272:	4b02      	ldr	r3, [pc, #8]	; (d427c <hal_usart_write+0xc>)
   d4274:	681b      	ldr	r3, [r3, #0]
   d4276:	68db      	ldr	r3, [r3, #12]
   d4278:	9301      	str	r3, [sp, #4]
   d427a:	bd08      	pop	{r3, pc}
   d427c:	0003023c 	.word	0x0003023c

000d4280 <hal_usart_available>:
DYNALIB_FN(BASE_IDX + 4, hal_usart, hal_usart_available, int32_t(hal_usart_interface_t))
   d4280:	b508      	push	{r3, lr}
   d4282:	4b02      	ldr	r3, [pc, #8]	; (d428c <hal_usart_available+0xc>)
   d4284:	681b      	ldr	r3, [r3, #0]
   d4286:	691b      	ldr	r3, [r3, #16]
   d4288:	9301      	str	r3, [sp, #4]
   d428a:	bd08      	pop	{r3, pc}
   d428c:	0003023c 	.word	0x0003023c

000d4290 <hal_usart_read>:
DYNALIB_FN(BASE_IDX + 5, hal_usart, hal_usart_read, int32_t(hal_usart_interface_t))
   d4290:	b508      	push	{r3, lr}
   d4292:	4b02      	ldr	r3, [pc, #8]	; (d429c <hal_usart_read+0xc>)
   d4294:	681b      	ldr	r3, [r3, #0]
   d4296:	695b      	ldr	r3, [r3, #20]
   d4298:	9301      	str	r3, [sp, #4]
   d429a:	bd08      	pop	{r3, pc}
   d429c:	0003023c 	.word	0x0003023c

000d42a0 <hal_usart_peek>:
DYNALIB_FN(BASE_IDX + 6, hal_usart, hal_usart_peek, int32_t(hal_usart_interface_t))
   d42a0:	b508      	push	{r3, lr}
   d42a2:	4b02      	ldr	r3, [pc, #8]	; (d42ac <hal_usart_peek+0xc>)
   d42a4:	681b      	ldr	r3, [r3, #0]
   d42a6:	699b      	ldr	r3, [r3, #24]
   d42a8:	9301      	str	r3, [sp, #4]
   d42aa:	bd08      	pop	{r3, pc}
   d42ac:	0003023c 	.word	0x0003023c

000d42b0 <hal_usart_flush>:
DYNALIB_FN(BASE_IDX + 7, hal_usart, hal_usart_flush, void(hal_usart_interface_t))
   d42b0:	b508      	push	{r3, lr}
   d42b2:	4b02      	ldr	r3, [pc, #8]	; (d42bc <hal_usart_flush+0xc>)
   d42b4:	681b      	ldr	r3, [r3, #0]
   d42b6:	69db      	ldr	r3, [r3, #28]
   d42b8:	9301      	str	r3, [sp, #4]
   d42ba:	bd08      	pop	{r3, pc}
   d42bc:	0003023c 	.word	0x0003023c

000d42c0 <hal_usart_is_enabled>:
DYNALIB_FN(BASE_IDX + 8, hal_usart, hal_usart_is_enabled, bool(hal_usart_interface_t))
   d42c0:	b508      	push	{r3, lr}
   d42c2:	4b02      	ldr	r3, [pc, #8]	; (d42cc <hal_usart_is_enabled+0xc>)
   d42c4:	681b      	ldr	r3, [r3, #0]
   d42c6:	6a1b      	ldr	r3, [r3, #32]
   d42c8:	9301      	str	r3, [sp, #4]
   d42ca:	bd08      	pop	{r3, pc}
   d42cc:	0003023c 	.word	0x0003023c

000d42d0 <hal_usart_available_data_for_write>:
DYNALIB_FN(BASE_IDX + 9, hal_usart, hal_usart_half_duplex, void(hal_usart_interface_t, bool))
DYNALIB_FN(BASE_IDX + 10, hal_usart, hal_usart_available_data_for_write, int32_t(hal_usart_interface_t))
   d42d0:	b508      	push	{r3, lr}
   d42d2:	4b02      	ldr	r3, [pc, #8]	; (d42dc <hal_usart_available_data_for_write+0xc>)
   d42d4:	681b      	ldr	r3, [r3, #0]
   d42d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   d42d8:	9301      	str	r3, [sp, #4]
   d42da:	bd08      	pop	{r3, pc}
   d42dc:	0003023c 	.word	0x0003023c

000d42e0 <hal_i2c_write>:
DYNALIB_FN(BASE_IDX + 3, hal_i2c, hal_i2c_begin, void(hal_i2c_interface_t, hal_i2c_mode_t, uint8_t, void*))
DYNALIB_FN(BASE_IDX + 4, hal_i2c, hal_i2c_end, void(hal_i2c_interface_t, void*))
DYNALIB_FN(BASE_IDX + 5, hal_i2c, hal_i2c_request, uint32_t(hal_i2c_interface_t, uint8_t, uint8_t, uint8_t, void*))
DYNALIB_FN(BASE_IDX + 6, hal_i2c, hal_i2c_begin_transmission, void(hal_i2c_interface_t, uint8_t, const hal_i2c_transmission_config_t*))
DYNALIB_FN(BASE_IDX + 7, hal_i2c, hal_i2c_end_transmission, uint8_t(hal_i2c_interface_t, uint8_t, void*))
DYNALIB_FN(BASE_IDX + 8, hal_i2c, hal_i2c_write, uint32_t(hal_i2c_interface_t, uint8_t, void*))
   d42e0:	b508      	push	{r3, lr}
   d42e2:	4b02      	ldr	r3, [pc, #8]	; (d42ec <hal_i2c_write+0xc>)
   d42e4:	681b      	ldr	r3, [r3, #0]
   d42e6:	6a1b      	ldr	r3, [r3, #32]
   d42e8:	9301      	str	r3, [sp, #4]
   d42ea:	bd08      	pop	{r3, pc}
   d42ec:	00030228 	.word	0x00030228

000d42f0 <hal_i2c_available>:
DYNALIB_FN(BASE_IDX + 9, hal_i2c, hal_i2c_available, int32_t(hal_i2c_interface_t, void*))
   d42f0:	b508      	push	{r3, lr}
   d42f2:	4b02      	ldr	r3, [pc, #8]	; (d42fc <hal_i2c_available+0xc>)
   d42f4:	681b      	ldr	r3, [r3, #0]
   d42f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   d42f8:	9301      	str	r3, [sp, #4]
   d42fa:	bd08      	pop	{r3, pc}
   d42fc:	00030228 	.word	0x00030228

000d4300 <hal_i2c_read>:
DYNALIB_FN(BASE_IDX + 10, hal_i2c, hal_i2c_read, int32_t(hal_i2c_interface_t, void*))
   d4300:	b508      	push	{r3, lr}
   d4302:	4b02      	ldr	r3, [pc, #8]	; (d430c <hal_i2c_read+0xc>)
   d4304:	681b      	ldr	r3, [r3, #0]
   d4306:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   d4308:	9301      	str	r3, [sp, #4]
   d430a:	bd08      	pop	{r3, pc}
   d430c:	00030228 	.word	0x00030228

000d4310 <hal_i2c_peek>:
DYNALIB_FN(BASE_IDX + 11, hal_i2c, hal_i2c_peek, int32_t(hal_i2c_interface_t, void*))
   d4310:	b508      	push	{r3, lr}
   d4312:	4b02      	ldr	r3, [pc, #8]	; (d431c <hal_i2c_peek+0xc>)
   d4314:	681b      	ldr	r3, [r3, #0]
   d4316:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   d4318:	9301      	str	r3, [sp, #4]
   d431a:	bd08      	pop	{r3, pc}
   d431c:	00030228 	.word	0x00030228

000d4320 <hal_i2c_flush>:
DYNALIB_FN(BASE_IDX + 12, hal_i2c, hal_i2c_flush, void(hal_i2c_interface_t, void*))
   d4320:	b508      	push	{r3, lr}
   d4322:	4b02      	ldr	r3, [pc, #8]	; (d432c <hal_i2c_flush+0xc>)
   d4324:	681b      	ldr	r3, [r3, #0]
   d4326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   d4328:	9301      	str	r3, [sp, #4]
   d432a:	bd08      	pop	{r3, pc}
   d432c:	00030228 	.word	0x00030228

000d4330 <hal_i2c_is_enabled>:
DYNALIB_FN(BASE_IDX + 13, hal_i2c, hal_i2c_is_enabled, bool(hal_i2c_interface_t, void*))
   d4330:	b508      	push	{r3, lr}
   d4332:	4b02      	ldr	r3, [pc, #8]	; (d433c <hal_i2c_is_enabled+0xc>)
   d4334:	681b      	ldr	r3, [r3, #0]
   d4336:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   d4338:	9301      	str	r3, [sp, #4]
   d433a:	bd08      	pop	{r3, pc}
   d433c:	00030228 	.word	0x00030228

000d4340 <hal_i2c_init>:
DYNALIB_FN(BASE_IDX + 14, hal_i2c, hal_i2c_set_callback_on_received, void(hal_i2c_interface_t, void(*)(int), void*))
DYNALIB_FN(BASE_IDX + 15, hal_i2c, hal_i2c_set_callback_on_requested, void(hal_i2c_interface_t, void(*)(void), void*))
DYNALIB_FN(BASE_IDX + 16, hal_i2c, hal_i2c_init, int(hal_i2c_interface_t, const hal_i2c_config_t*))
   d4340:	b508      	push	{r3, lr}
   d4342:	4b02      	ldr	r3, [pc, #8]	; (d434c <hal_i2c_init+0xc>)
   d4344:	681b      	ldr	r3, [r3, #0]
   d4346:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   d4348:	9301      	str	r3, [sp, #4]
   d434a:	bd08      	pop	{r3, pc}
   d434c:	00030228 	.word	0x00030228

000d4350 <hal_spi_init>:
DYNALIB_FN(2, hal_spi, hal_spi_set_bit_order, void(hal_spi_interface_t, uint8_t))
DYNALIB_FN(3, hal_spi, hal_spi_set_data_mode, void(hal_spi_interface_t, uint8_t))
DYNALIB_FN(4, hal_spi, hal_spi_set_clock_divider, void(hal_spi_interface_t, uint8_t))
DYNALIB_FN(5, hal_spi, hal_spi_transfer, uint16_t(hal_spi_interface_t, uint16_t))
DYNALIB_FN(6, hal_spi, hal_spi_is_enabled_deprecated, bool(void))
DYNALIB_FN(7, hal_spi, hal_spi_init, void(hal_spi_interface_t))
   d4350:	b508      	push	{r3, lr}
   d4352:	4b02      	ldr	r3, [pc, #8]	; (d435c <hal_spi_init+0xc>)
   d4354:	681b      	ldr	r3, [r3, #0]
   d4356:	69db      	ldr	r3, [r3, #28]
   d4358:	9301      	str	r3, [sp, #4]
   d435a:	bd08      	pop	{r3, pc}
   d435c:	00030230 	.word	0x00030230

000d4360 <hal_spi_is_enabled>:
DYNALIB_FN(8, hal_spi, hal_spi_is_enabled, bool(hal_spi_interface_t))
   d4360:	b508      	push	{r3, lr}
   d4362:	4b02      	ldr	r3, [pc, #8]	; (d436c <hal_spi_is_enabled+0xc>)
   d4364:	681b      	ldr	r3, [r3, #0]
   d4366:	6a1b      	ldr	r3, [r3, #32]
   d4368:	9301      	str	r3, [sp, #4]
   d436a:	bd08      	pop	{r3, pc}
   d436c:	00030230 	.word	0x00030230

000d4370 <HAL_USB_USART_Init>:
#endif

DYNALIB_BEGIN(hal_usb)

#ifdef USB_CDC_ENABLE
DYNALIB_FN(0, hal_usb, HAL_USB_USART_Init, void(HAL_USB_USART_Serial, const HAL_USB_USART_Config*))
   d4370:	b508      	push	{r3, lr}
   d4372:	4b02      	ldr	r3, [pc, #8]	; (d437c <HAL_USB_USART_Init+0xc>)
   d4374:	681b      	ldr	r3, [r3, #0]
   d4376:	681b      	ldr	r3, [r3, #0]
   d4378:	9301      	str	r3, [sp, #4]
   d437a:	bd08      	pop	{r3, pc}
   d437c:	0003024c 	.word	0x0003024c

000d4380 <HAL_USB_USART_Begin>:
DYNALIB_FN(1, hal_usb, HAL_USB_USART_Begin, void(HAL_USB_USART_Serial, uint32_t, void *))
   d4380:	b508      	push	{r3, lr}
   d4382:	4b02      	ldr	r3, [pc, #8]	; (d438c <HAL_USB_USART_Begin+0xc>)
   d4384:	681b      	ldr	r3, [r3, #0]
   d4386:	685b      	ldr	r3, [r3, #4]
   d4388:	9301      	str	r3, [sp, #4]
   d438a:	bd08      	pop	{r3, pc}
   d438c:	0003024c 	.word	0x0003024c

000d4390 <HAL_USB_USART_Available_Data>:
DYNALIB_FN(2, hal_usb, HAL_USB_USART_End, void(HAL_USB_USART_Serial))
DYNALIB_FN(3, hal_usb, HAL_USB_USART_Baud_Rate, unsigned int(HAL_USB_USART_Serial))
DYNALIB_FN(4, hal_usb, HAL_USB_USART_Available_Data, int32_t(HAL_USB_USART_Serial))
   d4390:	b508      	push	{r3, lr}
   d4392:	4b02      	ldr	r3, [pc, #8]	; (d439c <HAL_USB_USART_Available_Data+0xc>)
   d4394:	681b      	ldr	r3, [r3, #0]
   d4396:	691b      	ldr	r3, [r3, #16]
   d4398:	9301      	str	r3, [sp, #4]
   d439a:	bd08      	pop	{r3, pc}
   d439c:	0003024c 	.word	0x0003024c

000d43a0 <HAL_USB_USART_Available_Data_For_Write>:
DYNALIB_FN(5, hal_usb, HAL_USB_USART_Available_Data_For_Write, int32_t(HAL_USB_USART_Serial))
   d43a0:	b508      	push	{r3, lr}
   d43a2:	4b02      	ldr	r3, [pc, #8]	; (d43ac <HAL_USB_USART_Available_Data_For_Write+0xc>)
   d43a4:	681b      	ldr	r3, [r3, #0]
   d43a6:	695b      	ldr	r3, [r3, #20]
   d43a8:	9301      	str	r3, [sp, #4]
   d43aa:	bd08      	pop	{r3, pc}
   d43ac:	0003024c 	.word	0x0003024c

000d43b0 <HAL_USB_USART_Receive_Data>:
DYNALIB_FN(6, hal_usb, HAL_USB_USART_Receive_Data, int32_t(HAL_USB_USART_Serial, uint8_t))
   d43b0:	b508      	push	{r3, lr}
   d43b2:	4b02      	ldr	r3, [pc, #8]	; (d43bc <HAL_USB_USART_Receive_Data+0xc>)
   d43b4:	681b      	ldr	r3, [r3, #0]
   d43b6:	699b      	ldr	r3, [r3, #24]
   d43b8:	9301      	str	r3, [sp, #4]
   d43ba:	bd08      	pop	{r3, pc}
   d43bc:	0003024c 	.word	0x0003024c

000d43c0 <HAL_USB_USART_Send_Data>:
DYNALIB_FN(7, hal_usb, HAL_USB_USART_Send_Data, int32_t(HAL_USB_USART_Serial, uint8_t))
   d43c0:	b508      	push	{r3, lr}
   d43c2:	4b02      	ldr	r3, [pc, #8]	; (d43cc <HAL_USB_USART_Send_Data+0xc>)
   d43c4:	681b      	ldr	r3, [r3, #0]
   d43c6:	69db      	ldr	r3, [r3, #28]
   d43c8:	9301      	str	r3, [sp, #4]
   d43ca:	bd08      	pop	{r3, pc}
   d43cc:	0003024c 	.word	0x0003024c

000d43d0 <HAL_USB_USART_Flush_Data>:
DYNALIB_FN(8, hal_usb, HAL_USB_USART_Flush_Data, void(HAL_USB_USART_Serial))
   d43d0:	b508      	push	{r3, lr}
   d43d2:	4b02      	ldr	r3, [pc, #8]	; (d43dc <HAL_USB_USART_Flush_Data+0xc>)
   d43d4:	681b      	ldr	r3, [r3, #0]
   d43d6:	6a1b      	ldr	r3, [r3, #32]
   d43d8:	9301      	str	r3, [sp, #4]
   d43da:	bd08      	pop	{r3, pc}
   d43dc:	0003024c 	.word	0x0003024c

000d43e0 <set_system_mode>:
#endif

DYNALIB_BEGIN(system)

DYNALIB_FN(0, system, system_mode, System_Mode_TypeDef(void))
DYNALIB_FN(1, system, set_system_mode, void(System_Mode_TypeDef))
   d43e0:	b508      	push	{r3, lr}
   d43e2:	4b02      	ldr	r3, [pc, #8]	; (d43ec <set_system_mode+0xc>)
   d43e4:	681b      	ldr	r3, [r3, #0]
   d43e6:	685b      	ldr	r3, [r3, #4]
   d43e8:	9301      	str	r3, [sp, #4]
   d43ea:	bd08      	pop	{r3, pc}
   d43ec:	00030220 	.word	0x00030220

000d43f0 <system_ctrl_set_app_request_handler>:
DYNALIB_FN(BASE_IDX + 6, system, led_pattern_period, uint16_t(int, int, void*))
DYNALIB_FN(BASE_IDX + 7, system, system_set_tester_handlers, int(system_tester_handlers_t*, void*))
DYNALIB_FN(BASE_IDX + 8, system, system_format_diag_data, int(const uint16_t*, size_t, unsigned, appender_fn, void*, void*))

// Control requests
DYNALIB_FN(BASE_IDX + 9, system, system_ctrl_set_app_request_handler, int(ctrl_request_handler_fn, void*))
   d43f0:	b508      	push	{r3, lr}
   d43f2:	4b03      	ldr	r3, [pc, #12]	; (d4400 <system_ctrl_set_app_request_handler+0x10>)
   d43f4:	681b      	ldr	r3, [r3, #0]
   d43f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   d43fa:	9301      	str	r3, [sp, #4]
   d43fc:	bd08      	pop	{r3, pc}
   d43fe:	0000      	.short	0x0000
   d4400:	00030220 	.word	0x00030220

000d4404 <system_ctrl_set_result>:
DYNALIB_FN(BASE_IDX + 10, system, system_ctrl_alloc_reply_data, int(ctrl_request*, size_t, void*))
DYNALIB_FN(BASE_IDX + 11, system, system_ctrl_free_request_data, void(ctrl_request*, void*))
DYNALIB_FN(BASE_IDX + 12, system, system_ctrl_set_result, void(ctrl_request*, int, ctrl_completion_handler_fn, void*, void*))
   d4404:	b508      	push	{r3, lr}
   d4406:	4b03      	ldr	r3, [pc, #12]	; (d4414 <system_ctrl_set_result+0x10>)
   d4408:	681b      	ldr	r3, [r3, #0]
   d440a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
   d440e:	9301      	str	r3, [sp, #4]
   d4410:	bd08      	pop	{r3, pc}
   d4412:	0000      	.short	0x0000
   d4414:	00030220 	.word	0x00030220

000d4418 <network_connect>:
#endif

DYNALIB_BEGIN(system_net)

DYNALIB_FN(0, system_net, network_config, const void*(network_handle_t, uint32_t, void*))
DYNALIB_FN(1, system_net, network_connect, void(network_handle_t, uint32_t, uint32_t, void*))
   d4418:	b508      	push	{r3, lr}
   d441a:	4b02      	ldr	r3, [pc, #8]	; (d4424 <network_connect+0xc>)
   d441c:	681b      	ldr	r3, [r3, #0]
   d441e:	685b      	ldr	r3, [r3, #4]
   d4420:	9301      	str	r3, [sp, #4]
   d4422:	bd08      	pop	{r3, pc}
   d4424:	00030240 	.word	0x00030240

000d4428 <network_connecting>:
DYNALIB_FN(2, system_net, network_connecting, bool(network_handle_t, uint32_t, void*))
   d4428:	b508      	push	{r3, lr}
   d442a:	4b02      	ldr	r3, [pc, #8]	; (d4434 <network_connecting+0xc>)
   d442c:	681b      	ldr	r3, [r3, #0]
   d442e:	689b      	ldr	r3, [r3, #8]
   d4430:	9301      	str	r3, [sp, #4]
   d4432:	bd08      	pop	{r3, pc}
   d4434:	00030240 	.word	0x00030240

000d4438 <network_disconnect>:
DYNALIB_FN(3, system_net, network_disconnect, void(network_handle_t, uint32_t, void*))
   d4438:	b508      	push	{r3, lr}
   d443a:	4b02      	ldr	r3, [pc, #8]	; (d4444 <network_disconnect+0xc>)
   d443c:	681b      	ldr	r3, [r3, #0]
   d443e:	68db      	ldr	r3, [r3, #12]
   d4440:	9301      	str	r3, [sp, #4]
   d4442:	bd08      	pop	{r3, pc}
   d4444:	00030240 	.word	0x00030240

000d4448 <network_ready>:
DYNALIB_FN(4, system_net, network_ready, bool(network_handle_t, uint32_t, void*))
   d4448:	b508      	push	{r3, lr}
   d444a:	4b02      	ldr	r3, [pc, #8]	; (d4454 <network_ready+0xc>)
   d444c:	681b      	ldr	r3, [r3, #0]
   d444e:	691b      	ldr	r3, [r3, #16]
   d4450:	9301      	str	r3, [sp, #4]
   d4452:	bd08      	pop	{r3, pc}
   d4454:	00030240 	.word	0x00030240

000d4458 <network_on>:
DYNALIB_FN(5, system_net, network_on, void(network_handle_t, uint32_t, uint32_t, void*))
   d4458:	b508      	push	{r3, lr}
   d445a:	4b02      	ldr	r3, [pc, #8]	; (d4464 <network_on+0xc>)
   d445c:	681b      	ldr	r3, [r3, #0]
   d445e:	695b      	ldr	r3, [r3, #20]
   d4460:	9301      	str	r3, [sp, #4]
   d4462:	bd08      	pop	{r3, pc}
   d4464:	00030240 	.word	0x00030240

000d4468 <network_off>:
DYNALIB_FN(6, system_net, network_off, void(network_handle_t, uint32_t, uint32_t, void*))
   d4468:	b508      	push	{r3, lr}
   d446a:	4b02      	ldr	r3, [pc, #8]	; (d4474 <network_off+0xc>)
   d446c:	681b      	ldr	r3, [r3, #0]
   d446e:	699b      	ldr	r3, [r3, #24]
   d4470:	9301      	str	r3, [sp, #4]
   d4472:	bd08      	pop	{r3, pc}
   d4474:	00030240 	.word	0x00030240

000d4478 <network_listen>:
DYNALIB_FN(7, system_net, network_listen, void(network_handle_t, uint32_t, void*))
   d4478:	b508      	push	{r3, lr}
   d447a:	4b02      	ldr	r3, [pc, #8]	; (d4484 <network_listen+0xc>)
   d447c:	681b      	ldr	r3, [r3, #0]
   d447e:	69db      	ldr	r3, [r3, #28]
   d4480:	9301      	str	r3, [sp, #4]
   d4482:	bd08      	pop	{r3, pc}
   d4484:	00030240 	.word	0x00030240

000d4488 <network_listening>:
DYNALIB_FN(8, system_net, network_listening, bool(network_handle_t, uint32_t, void*))
   d4488:	b508      	push	{r3, lr}
   d448a:	4b02      	ldr	r3, [pc, #8]	; (d4494 <network_listening+0xc>)
   d448c:	681b      	ldr	r3, [r3, #0]
   d448e:	6a1b      	ldr	r3, [r3, #32]
   d4490:	9301      	str	r3, [sp, #4]
   d4492:	bd08      	pop	{r3, pc}
   d4494:	00030240 	.word	0x00030240

000d4498 <network_set_listen_timeout>:
DYNALIB_FN(9, system_net, network_has_credentials, bool(network_handle_t, uint32_t, void*))
DYNALIB_FN(10, system_net, network_set_credentials, int(network_handle_t, uint32_t, NetworkCredentials*, void*))
DYNALIB_FN(11, system_net, network_clear_credentials, bool(network_handle_t, uint32_t, NetworkCredentials*, void*))
DYNALIB_FN(12, system_net, network_set_listen_timeout, void(network_handle_t, uint16_t, void*))
   d4498:	b508      	push	{r3, lr}
   d449a:	4b02      	ldr	r3, [pc, #8]	; (d44a4 <network_set_listen_timeout+0xc>)
   d449c:	681b      	ldr	r3, [r3, #0]
   d449e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   d44a0:	9301      	str	r3, [sp, #4]
   d44a2:	bd08      	pop	{r3, pc}
   d44a4:	00030240 	.word	0x00030240

000d44a8 <network_get_listen_timeout>:
DYNALIB_FN(13, system_net, network_get_listen_timeout, uint16_t(network_handle_t, uint32_t, void*))
   d44a8:	b508      	push	{r3, lr}
   d44aa:	4b02      	ldr	r3, [pc, #8]	; (d44b4 <network_get_listen_timeout+0xc>)
   d44ac:	681b      	ldr	r3, [r3, #0]
   d44ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   d44b0:	9301      	str	r3, [sp, #4]
   d44b2:	bd08      	pop	{r3, pc}
   d44b4:	00030240 	.word	0x00030240

000d44b8 <spark_set_random_seed_from_cloud_handler>:
DYNALIB_FN(10, system_cloud, spark_unsubscribe, void(void*))
DYNALIB_FN(11, system_cloud, spark_sync_time, bool(void*))
DYNALIB_FN(12, system_cloud, spark_sync_time_pending, bool(void*))
DYNALIB_FN(13, system_cloud, spark_sync_time_last, system_tick_t(time32_t*, time_t*))
DYNALIB_FN(14, system_cloud, spark_set_connection_property, int(unsigned, unsigned, const void*, void*))
DYNALIB_FN(15, system_cloud, spark_set_random_seed_from_cloud_handler, int(void (*handler)(unsigned int), void*))
   d44b8:	b508      	push	{r3, lr}
   d44ba:	4b02      	ldr	r3, [pc, #8]	; (d44c4 <spark_set_random_seed_from_cloud_handler+0xc>)
   d44bc:	681b      	ldr	r3, [r3, #0]
   d44be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   d44c0:	9301      	str	r3, [sp, #4]
   d44c2:	bd08      	pop	{r3, pc}
   d44c4:	00030244 	.word	0x00030244

000d44c8 <malloc>:
#include "hal_platform.h"
#endif // defined(DYNALIB_EXPORT) || (defined(DYNALIB_IMPORT) && !defined(RT_DYNALIB_NO_DEPENDENCY_BREAKING_IMPORTS))

DYNALIB_BEGIN(rt)

DYNALIB_FN(0, rt, malloc, void*(size_t))
   d44c8:	b508      	push	{r3, lr}
   d44ca:	4b02      	ldr	r3, [pc, #8]	; (d44d4 <malloc+0xc>)
   d44cc:	681b      	ldr	r3, [r3, #0]
   d44ce:	681b      	ldr	r3, [r3, #0]
   d44d0:	9301      	str	r3, [sp, #4]
   d44d2:	bd08      	pop	{r3, pc}
   d44d4:	0003021c 	.word	0x0003021c

000d44d8 <free>:
DYNALIB_FN(1, rt, free, void(void*))
   d44d8:	b508      	push	{r3, lr}
   d44da:	4b02      	ldr	r3, [pc, #8]	; (d44e4 <free+0xc>)
   d44dc:	681b      	ldr	r3, [r3, #0]
   d44de:	685b      	ldr	r3, [r3, #4]
   d44e0:	9301      	str	r3, [sp, #4]
   d44e2:	bd08      	pop	{r3, pc}
   d44e4:	0003021c 	.word	0x0003021c

000d44e8 <vsnprintf>:
DYNALIB_FN(4, rt, siprintf, int(char*, const char*, ...))
DYNALIB_FN(5, rt, sscanf, int(const char*, const char*, ...))
DYNALIB_FN(6, rt, siscanf, int(const char*, const char*, ...))
DYNALIB_FN(7, rt, snprintf, int(char*, size_t, const char*, ...))
DYNALIB_FN(8, rt, sniprintf, int(char*, size_t, const char*, ...))
DYNALIB_FN(9, rt, vsnprintf, int(char*, size_t, const char*, va_list))
   d44e8:	b508      	push	{r3, lr}
   d44ea:	4b02      	ldr	r3, [pc, #8]	; (d44f4 <vsnprintf+0xc>)
   d44ec:	681b      	ldr	r3, [r3, #0]
   d44ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   d44f0:	9301      	str	r3, [sp, #4]
   d44f2:	bd08      	pop	{r3, pc}
   d44f4:	0003021c 	.word	0x0003021c

000d44f8 <newlib_impure_ptr_callback>:
// RT is currently being imported into system-part1 from system-part2,
// which is the reverse direction.

#if defined(DYNALIB_EXPORT) || (defined(DYNALIB_IMPORT) && !defined(RT_DYNALIB_NO_DEPENDENCY_BREAKING_IMPORTS))
DYNALIB_FN(16, rt, __assert_func, void(const char*, int, const char*, const char*))
DYNALIB_FN(17, rt, newlib_impure_ptr_callback, void(void (*)(struct _reent*, size_t, uint32_t, void*), void*))
   d44f8:	b508      	push	{r3, lr}
   d44fa:	4b02      	ldr	r3, [pc, #8]	; (d4504 <newlib_impure_ptr_callback+0xc>)
   d44fc:	681b      	ldr	r3, [r3, #0]
   d44fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   d4500:	9301      	str	r3, [sp, #4]
   d4502:	bd08      	pop	{r3, pc}
   d4504:	0003021c 	.word	0x0003021c

000d4508 <_ZN5spark13EthernetClass9listeningEv>:
    uint16_t getListenTimeout(void) {
        return network_get_listen_timeout(*this, 0, NULL);
    }

    bool listening(void) {
        return network_listening(*this, 0, NULL);
   d4508:	2200      	movs	r2, #0
   d450a:	6840      	ldr	r0, [r0, #4]
   d450c:	4611      	mov	r1, r2
   d450e:	f7ff bfbb 	b.w	d4488 <network_listening>

000d4512 <_ZN5spark13EthernetClass16getListenTimeoutEv>:
        return network_get_listen_timeout(*this, 0, NULL);
   d4512:	2200      	movs	r2, #0
   d4514:	6840      	ldr	r0, [r0, #4]
   d4516:	4611      	mov	r1, r2
   d4518:	f7ff bfc6 	b.w	d44a8 <network_get_listen_timeout>

000d451c <_ZN5spark13EthernetClass16setListenTimeoutEt>:
        network_set_listen_timeout(*this, timeout, NULL);
   d451c:	6840      	ldr	r0, [r0, #4]
   d451e:	2200      	movs	r2, #0
   d4520:	f7ff bfba 	b.w	d4498 <network_set_listen_timeout>

000d4524 <_ZN5spark13EthernetClass6listenEb>:
        network_listen(*this, begin ? 0 : 1, NULL);
   d4524:	6840      	ldr	r0, [r0, #4]
   d4526:	2200      	movs	r2, #0
   d4528:	f081 0101 	eor.w	r1, r1, #1
   d452c:	f7ff bfa4 	b.w	d4478 <network_listen>

000d4530 <_ZN5spark13EthernetClass3offEv>:
        network_off(*this, 0, 0, NULL);
   d4530:	2300      	movs	r3, #0
   d4532:	6840      	ldr	r0, [r0, #4]
   d4534:	461a      	mov	r2, r3
   d4536:	4619      	mov	r1, r3
   d4538:	f7ff bf96 	b.w	d4468 <network_off>

000d453c <_ZN5spark13EthernetClass2onEv>:
        network_on(*this, 0, 0, NULL);
   d453c:	2300      	movs	r3, #0
   d453e:	6840      	ldr	r0, [r0, #4]
   d4540:	461a      	mov	r2, r3
   d4542:	4619      	mov	r1, r3
   d4544:	f7ff bf88 	b.w	d4458 <network_on>

000d4548 <_ZN5spark13EthernetClass5readyEv>:
    }

    bool ready() {
        return network_ready(*this, 0,  NULL);
   d4548:	2200      	movs	r2, #0
   d454a:	6840      	ldr	r0, [r0, #4]
   d454c:	4611      	mov	r1, r2
   d454e:	f7ff bf7b 	b.w	d4448 <network_ready>

000d4552 <_ZN5spark13EthernetClass10connectingEv>:
        return network_connecting(*this, 0, NULL);
   d4552:	2200      	movs	r2, #0
   d4554:	6840      	ldr	r0, [r0, #4]
   d4556:	4611      	mov	r1, r2
   d4558:	f7ff bf66 	b.w	d4428 <network_connecting>

000d455c <_ZN5spark13EthernetClass10disconnectEv>:
        network_disconnect(*this, NETWORK_DISCONNECT_REASON_USER, NULL);
   d455c:	6840      	ldr	r0, [r0, #4]
   d455e:	2200      	movs	r2, #0
   d4560:	2102      	movs	r1, #2
   d4562:	f7ff bf69 	b.w	d4438 <network_disconnect>

000d4566 <_ZN5spark13EthernetClass7connectEj>:
        network_connect(*this, flags, 0, NULL);
   d4566:	2300      	movs	r3, #0
   d4568:	6840      	ldr	r0, [r0, #4]
   d456a:	461a      	mov	r2, r3
   d456c:	f7ff bf54 	b.w	d4418 <network_connect>

000d4570 <_GLOBAL__sub_I__ZN5spark8EthernetE>:
    static NetworkClass& from(network_interface_t nif);

    virtual IPAddress resolve(const char* name);

    explicit NetworkClass(network_interface_t iface)
            : iface_(iface) {
   d4570:	4b02      	ldr	r3, [pc, #8]	; (d457c <_GLOBAL__sub_I__ZN5spark8EthernetE+0xc>)
   d4572:	2203      	movs	r2, #3
   d4574:	605a      	str	r2, [r3, #4]
            NetworkClass(NETWORK_INTERFACE_ETHERNET) {
   d4576:	4a02      	ldr	r2, [pc, #8]	; (d4580 <_GLOBAL__sub_I__ZN5spark8EthernetE+0x10>)
   d4578:	601a      	str	r2, [r3, #0]

namespace spark {

EthernetClass Ethernet;

} // spark
   d457a:	4770      	bx	lr
   d457c:	2003e644 	.word	0x2003e644
   d4580:	000d6d6c 	.word	0x000d6d6c

000d4584 <_ZN8SPIClassC1E19hal_spi_interface_t>:
    }
    return particle::SPISettings(info->clock, info->bit_order, info->data_mode);
}
} // namespace

SPIClass::SPIClass(hal_spi_interface_t spi)
   d4584:	b510      	push	{r4, lr}
   d4586:	4604      	mov	r4, r0
   d4588:	4608      	mov	r0, r1
{
    _spi = spi;
   d458a:	7021      	strb	r1, [r4, #0]
    hal_spi_init(_spi);
   d458c:	f7ff fee0 	bl	d4350 <hal_spi_init>
    _dividerReference = SPI_CLK_SYSTEM; // 0 indicates the system clock
   d4590:	2300      	movs	r3, #0
   d4592:	6063      	str	r3, [r4, #4]
}
   d4594:	4620      	mov	r0, r4
   d4596:	bd10      	pop	{r4, pc}

000d4598 <_ZN17SystemSleepResult22freeWakeupSourceMemoryEv.isra.0>:
    operator SleepResult() {
        return toSleepResult();
    }

private:
    void freeWakeupSourceMemory() {
   d4598:	b510      	push	{r4, lr}
   d459a:	4604      	mov	r4, r0
        if (wakeupSource_) {
   d459c:	6800      	ldr	r0, [r0, #0]
   d459e:	b118      	cbz	r0, d45a8 <_ZN17SystemSleepResult22freeWakeupSourceMemoryEv.isra.0+0x10>
            free(wakeupSource_);
   d45a0:	f7ff ff9a 	bl	d44d8 <free>
            wakeupSource_ = nullptr;
   d45a4:	2300      	movs	r3, #0
   d45a6:	6023      	str	r3, [r4, #0]
        }
    }
   d45a8:	bd10      	pop	{r4, pc}

000d45aa <_ZN11SystemClassD1Ev>:
    system_error_t error_;
    SleepResult compatResult_;
};


class SystemClass {
   d45aa:	b510      	push	{r4, lr}
   d45ac:	4604      	mov	r4, r0
        freeWakeupSourceMemory();
   d45ae:	f7ff fff3 	bl	d4598 <_ZN17SystemSleepResult22freeWakeupSourceMemoryEv.isra.0>
class SystemClass {
   d45b2:	4620      	mov	r0, r4
   d45b4:	bd10      	pop	{r4, pc}
	...

000d45b8 <_GLOBAL__sub_I_System>:
    return wokenUpByRtc();
}

system_error_t SleepResult::error() const {
    return err_;
   d45b8:	b510      	push	{r4, lr}
} // namespace particle

// particle::Flag<TagT, ValueT>
template<typename TagT, typename ValueT>
inline particle::Flag<TagT, ValueT>::Flag(ValueT val) :
        val_(val) {
   d45ba:	4b09      	ldr	r3, [pc, #36]	; (d45e0 <_GLOBAL__sub_I_System+0x28>)
              error_(SYSTEM_ERROR_NONE) {
   d45bc:	4c09      	ldr	r4, [pc, #36]	; (d45e4 <_GLOBAL__sub_I_System+0x2c>)
   d45be:	2202      	movs	r2, #2
   d45c0:	2000      	movs	r0, #0
   d45c2:	601a      	str	r2, [r3, #0]
    SleepResult() {}
   d45c4:	4b08      	ldr	r3, [pc, #32]	; (d45e8 <_GLOBAL__sub_I_System+0x30>)
              error_(SYSTEM_ERROR_NONE) {
   d45c6:	6020      	str	r0, [r4, #0]
   d45c8:	80a0      	strh	r0, [r4, #4]
    SleepResult() {}
   d45ca:	71a0      	strb	r0, [r4, #6]
   d45cc:	60a3      	str	r3, [r4, #8]
public:

    SystemClass(System_Mode_TypeDef mode = DEFAULT) {
        set_system_mode(mode);
   d45ce:	f7ff ff07 	bl	d43e0 <set_system_mode>
SystemClass System;
   d45d2:	4620      	mov	r0, r4
   d45d4:	4a05      	ldr	r2, [pc, #20]	; (d45ec <_GLOBAL__sub_I_System+0x34>)
   d45d6:	4906      	ldr	r1, [pc, #24]	; (d45f0 <_GLOBAL__sub_I_System+0x38>)
   d45d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
SystemClass System;
   d45dc:	f000 bcb4 	b.w	d4f48 <__aeabi_atexit>
   d45e0:	2003e658 	.word	0x2003e658
   d45e4:	2003e64c 	.word	0x2003e64c
   d45e8:	ffff0000 	.word	0xffff0000
   d45ec:	2003e638 	.word	0x2003e638
   d45f0:	000d45ab 	.word	0x000d45ab

000d45f4 <_ZN14RecursiveMutexD1Ev>:
    RecursiveMutex() : handle_(nullptr)
    {
        os_mutex_recursive_create(&handle_);
    }

    ~RecursiveMutex() {
   d45f4:	b510      	push	{r4, lr}
   d45f6:	4604      	mov	r4, r0
        dispose();
    }

    void dispose()
    {
        if (handle_) {
   d45f8:	6800      	ldr	r0, [r0, #0]
   d45fa:	b108      	cbz	r0, d4600 <_ZN14RecursiveMutexD1Ev+0xc>
            os_mutex_recursive_destroy(handle_);
   d45fc:	f7ff fe20 	bl	d4240 <os_mutex_recursive_destroy>
    }
   d4600:	4620      	mov	r0, r4
   d4602:	bd10      	pop	{r4, pc}

000d4604 <_GLOBAL__sub_I__ZN8particle3ble13WiringBleLock6mutex_E>:
BleCharacteristic BleLocalDevice::addCharacteristic(const String& desc, EnumFlags<BleCharacteristicProperty> properties, BleOnDataReceivedCallback callback, void* context) {
    WiringBleLock lk;
    return addCharacteristic(desc.c_str(), properties, callback, context);
}

} /* namespace particle */
   d4604:	b510      	push	{r4, lr}
    RecursiveMutex() : handle_(nullptr)
   d4606:	4c06      	ldr	r4, [pc, #24]	; (d4620 <_GLOBAL__sub_I__ZN8particle3ble13WiringBleLock6mutex_E+0x1c>)
   d4608:	2300      	movs	r3, #0
        os_mutex_recursive_create(&handle_);
   d460a:	4620      	mov	r0, r4
    RecursiveMutex() : handle_(nullptr)
   d460c:	6023      	str	r3, [r4, #0]
        os_mutex_recursive_create(&handle_);
   d460e:	f7ff fe0f 	bl	d4230 <os_mutex_recursive_create>
RecursiveMutex WiringBleLock::mutex_;
   d4612:	4620      	mov	r0, r4
   d4614:	4a03      	ldr	r2, [pc, #12]	; (d4624 <_GLOBAL__sub_I__ZN8particle3ble13WiringBleLock6mutex_E+0x20>)
   d4616:	4904      	ldr	r1, [pc, #16]	; (d4628 <_GLOBAL__sub_I__ZN8particle3ble13WiringBleLock6mutex_E+0x24>)
} /* namespace particle */
   d4618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
RecursiveMutex WiringBleLock::mutex_;
   d461c:	f000 bc94 	b.w	d4f48 <__aeabi_atexit>
   d4620:	2003e65c 	.word	0x2003e65c
   d4624:	2003e638 	.word	0x2003e638
   d4628:	000d45f5 	.word	0x000d45f5

000d462c <_ZN5Print5writeEPKhj>:

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
   d462c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   d462e:	4606      	mov	r6, r0
   d4630:	460d      	mov	r5, r1
  size_t n = 0;
   d4632:	188f      	adds	r7, r1, r2
   d4634:	2400      	movs	r4, #0
  while (size--) {
   d4636:	42bd      	cmp	r5, r7
   d4638:	d00c      	beq.n	d4654 <_ZN5Print5writeEPKhj+0x28>
     int chunk = write(*buffer++);
   d463a:	6833      	ldr	r3, [r6, #0]
   d463c:	f815 1b01 	ldrb.w	r1, [r5], #1
   d4640:	689b      	ldr	r3, [r3, #8]
   d4642:	4630      	mov	r0, r6
   d4644:	4798      	blx	r3
     if (chunk>=0)
   d4646:	1e03      	subs	r3, r0, #0
   d4648:	db01      	blt.n	d464e <_ZN5Print5writeEPKhj+0x22>
         n += chunk;
   d464a:	441c      	add	r4, r3
  while (size--) {
   d464c:	e7f3      	b.n	d4636 <_ZN5Print5writeEPKhj+0xa>
     int chunk = write(*buffer++);
   d464e:	2c00      	cmp	r4, #0
   d4650:	bf08      	it	eq
   d4652:	461c      	moveq	r4, r3
             n = chunk;
         break;
     }
  }
  return n;
}
   d4654:	4620      	mov	r0, r4
   d4656:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000d4658 <_ZN5Print5writeEPKc>:

    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
   d4658:	b513      	push	{r0, r1, r4, lr}
   d465a:	4604      	mov	r4, r0
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
   d465c:	4608      	mov	r0, r1
      if (str == NULL) return 0;
   d465e:	b159      	cbz	r1, d4678 <_ZN5Print5writeEPKc+0x20>
      return write((const uint8_t *)str, strlen(str));
   d4660:	9101      	str	r1, [sp, #4]
   d4662:	f002 fb69 	bl	d6d38 <strlen>
   d4666:	6823      	ldr	r3, [r4, #0]
   d4668:	9901      	ldr	r1, [sp, #4]
   d466a:	68db      	ldr	r3, [r3, #12]
   d466c:	4602      	mov	r2, r0
   d466e:	4620      	mov	r0, r4
    }
   d4670:	b002      	add	sp, #8
   d4672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      return write((const uint8_t *)str, strlen(str));
   d4676:	4718      	bx	r3
    }
   d4678:	b002      	add	sp, #8
   d467a:	bd10      	pop	{r4, pc}

000d467c <_ZN5Print5printEc>:
  return write(str);
}

size_t Print::print(char c)
{
  return write(c);
   d467c:	6803      	ldr	r3, [r0, #0]
   d467e:	689b      	ldr	r3, [r3, #8]
   d4680:	4718      	bx	r3

000d4682 <_ZN5Print7printlnEv>:
{
  return print(reinterpret_cast<const char*>(str));
}

size_t Print::println(void)
{
   d4682:	b538      	push	{r3, r4, r5, lr}
  size_t n = print('\r');
   d4684:	210d      	movs	r1, #13
{
   d4686:	4605      	mov	r5, r0
  size_t n = print('\r');
   d4688:	f7ff fff8 	bl	d467c <_ZN5Print5printEc>
  n += print('\n');
   d468c:	210a      	movs	r1, #10
  size_t n = print('\r');
   d468e:	4604      	mov	r4, r0
  n += print('\n');
   d4690:	4628      	mov	r0, r5
   d4692:	f7ff fff3 	bl	d467c <_ZN5Print5printEc>
  return n;
}
   d4696:	4420      	add	r0, r4
   d4698:	bd38      	pop	{r3, r4, r5, pc}

000d469a <_ZN5Print11printNumberEmh>:
  return println(reinterpret_cast<const char*>(str));
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base) {
   d469a:	b530      	push	{r4, r5, lr}
   d469c:	b08b      	sub	sp, #44	; 0x2c
  char buf[8 * sizeof(n) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
   d469e:	2300      	movs	r3, #0
   d46a0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24

  // prevent crash if called with base == 1
  if (base < 2) base = 10;
   d46a4:	2a01      	cmp	r2, #1
   d46a6:	bf98      	it	ls
   d46a8:	220a      	movls	r2, #10
   d46aa:	ac09      	add	r4, sp, #36	; 0x24

  do {
   decltype(n) m = n;
   n /= base;
   d46ac:	460d      	mov	r5, r1
   d46ae:	fbb1 f1f2 	udiv	r1, r1, r2
   char c = m - base * n;
   d46b2:	fb01 5312 	mls	r3, r1, r2, r5
   d46b6:	f003 03ff 	and.w	r3, r3, #255	; 0xff
   *--str = c < 10 ? c + '0' : c + 'A' - 10;
   d46ba:	2b09      	cmp	r3, #9
   d46bc:	bf94      	ite	ls
   d46be:	3330      	addls	r3, #48	; 0x30
   d46c0:	3337      	addhi	r3, #55	; 0x37
   d46c2:	b2db      	uxtb	r3, r3
  } while(n);
   d46c4:	42aa      	cmp	r2, r5
   *--str = c < 10 ? c + '0' : c + 'A' - 10;
   d46c6:	f804 3d01 	strb.w	r3, [r4, #-1]!
  } while(n);
   d46ca:	d9ef      	bls.n	d46ac <_ZN5Print11printNumberEmh+0x12>

  return write(str);
   d46cc:	4621      	mov	r1, r4
   d46ce:	f7ff ffc3 	bl	d4658 <_ZN5Print5writeEPKc>
}
   d46d2:	b00b      	add	sp, #44	; 0x2c
   d46d4:	bd30      	pop	{r4, r5, pc}

000d46d6 <_ZN5Print7vprintfEbPKcSt9__va_list>:

  return n;
}

size_t Print::vprintf(bool newline, const char* format, va_list args)
{
   d46d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   d46da:	b086      	sub	sp, #24
   d46dc:	af00      	add	r7, sp, #0
   d46de:	4605      	mov	r5, r0
   d46e0:	460e      	mov	r6, r1
    const int bufsize = 20;
    char test[bufsize];
    va_list args2;
    va_copy(args2, args);
    size_t n = vsnprintf(test, bufsize, format, args);
   d46e2:	1d38      	adds	r0, r7, #4
   d46e4:	2114      	movs	r1, #20
{
   d46e6:	4614      	mov	r4, r2
    va_copy(args2, args);
   d46e8:	603b      	str	r3, [r7, #0]
    size_t n = vsnprintf(test, bufsize, format, args);
   d46ea:	f7ff fefd 	bl	d44e8 <vsnprintf>

    if (n<bufsize)
   d46ee:	2813      	cmp	r0, #19
   d46f0:	d80e      	bhi.n	d4710 <_ZN5Print7vprintfEbPKcSt9__va_list+0x3a>
  return write(str);
   d46f2:	1d39      	adds	r1, r7, #4
   d46f4:	4628      	mov	r0, r5
   d46f6:	f7ff ffaf 	bl	d4658 <_ZN5Print5writeEPKc>
   d46fa:	4604      	mov	r4, r0
    {
        char bigger[n+1];
        n = vsnprintf(bigger, n+1, format, args2);
        n = print(bigger);
    }
    if (newline)
   d46fc:	b11e      	cbz	r6, d4706 <_ZN5Print7vprintfEbPKcSt9__va_list+0x30>
        n += println();
   d46fe:	4628      	mov	r0, r5
   d4700:	f7ff ffbf 	bl	d4682 <_ZN5Print7printlnEv>
   d4704:	4404      	add	r4, r0

    va_end(args2);
    return n;
}
   d4706:	4620      	mov	r0, r4
   d4708:	3718      	adds	r7, #24
   d470a:	46bd      	mov	sp, r7
   d470c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        char bigger[n+1];
   d4710:	f100 0308 	add.w	r3, r0, #8
   d4714:	f023 0307 	bic.w	r3, r3, #7
        n = print(bigger);
   d4718:	46e8      	mov	r8, sp
        char bigger[n+1];
   d471a:	ebad 0d03 	sub.w	sp, sp, r3
        n = vsnprintf(bigger, n+1, format, args2);
   d471e:	4622      	mov	r2, r4
   d4720:	1c41      	adds	r1, r0, #1
   d4722:	683b      	ldr	r3, [r7, #0]
   d4724:	4668      	mov	r0, sp
   d4726:	f7ff fedf 	bl	d44e8 <vsnprintf>
  return write(str);
   d472a:	4669      	mov	r1, sp
   d472c:	4628      	mov	r0, r5
   d472e:	f7ff ff93 	bl	d4658 <_ZN5Print5writeEPKc>
   d4732:	4604      	mov	r4, r0
   d4734:	46c5      	mov	sp, r8
   d4736:	e7e1      	b.n	d46fc <_ZN5Print7vprintfEbPKcSt9__va_list+0x26>

000d4738 <_GLOBAL__sub_I__ZN5spark3LogE>:
    // This handler doesn't support direct logging
}

// spark::Logger
inline spark::Logger::Logger(const char *name) :
        name_(name) {
   d4738:	4b01      	ldr	r3, [pc, #4]	; (d4740 <_GLOBAL__sub_I__ZN5spark3LogE+0x8>)
   d473a:	4a02      	ldr	r2, [pc, #8]	; (d4744 <_GLOBAL__sub_I__ZN5spark3LogE+0xc>)
   d473c:	601a      	str	r2, [r3, #0]
#if Wiring_LogConfig

// spark::
void spark::logProcessControlRequest(ctrl_request* req) {
    JSONRequestHandler::process(req);
}
   d473e:	4770      	bx	lr
   d4740:	2003e660 	.word	0x2003e660
   d4744:	000d6d98 	.word	0x000d6d98

000d4748 <_GLOBAL__sub_I_TIME_FORMAT_DEFAULT>:
            calendar_time_cache = Convert_UnixTime_To_CalendarTime(unix_time);
            unix_time_cache = unix_time;
    }
}

const char* TimeClass::format_spec = TIME_FORMAT_DEFAULT;
   d4748:	4b02      	ldr	r3, [pc, #8]	; (d4754 <_GLOBAL__sub_I_TIME_FORMAT_DEFAULT+0xc>)
   d474a:	681a      	ldr	r2, [r3, #0]
   d474c:	4b02      	ldr	r3, [pc, #8]	; (d4758 <_GLOBAL__sub_I_TIME_FORMAT_DEFAULT+0x10>)
   d474e:	601a      	str	r2, [r3, #0]
{
  return isValid();
}


TimeClass Time;
   d4750:	4770      	bx	lr
   d4752:	bf00      	nop
   d4754:	2003e5d0 	.word	0x2003e5d0
   d4758:	2003e664 	.word	0x2003e664

000d475c <_ZNSt14_Function_baseD1Ev>:
	{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }
      };

    _Function_base() : _M_manager(nullptr) { }

    ~_Function_base()
   d475c:	b510      	push	{r4, lr}
    {
      if (_M_manager)
   d475e:	6883      	ldr	r3, [r0, #8]
    ~_Function_base()
   d4760:	4604      	mov	r4, r0
      if (_M_manager)
   d4762:	b113      	cbz	r3, d476a <_ZNSt14_Function_baseD1Ev+0xe>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
   d4764:	2203      	movs	r2, #3
   d4766:	4601      	mov	r1, r0
   d4768:	4798      	blx	r3
    }
   d476a:	4620      	mov	r0, r4
   d476c:	bd10      	pop	{r4, pc}

000d476e <_ZN8RGBClassD1Ev>:
#include "rgbled.h"

typedef void (raw_rgb_change_handler_t)(uint8_t, uint8_t, uint8_t);
typedef std::function<raw_rgb_change_handler_t> wiring_rgb_change_handler_t;

class RGBClass {
   d476e:	b510      	push	{r4, lr}
   d4770:	4604      	mov	r4, r0
   *  @ingroup functors
   *
   *  Polymorphic function wrapper.
   */
  template<typename _Res, typename... _ArgTypes>
    class function<_Res(_ArgTypes...)>
   d4772:	f7ff fff3 	bl	d475c <_ZNSt14_Function_baseD1Ev>
   d4776:	4620      	mov	r0, r4
   d4778:	bd10      	pop	{r4, pc}
	...

000d477c <_GLOBAL__sub_I_RGB>:
    _Function_base() : _M_manager(nullptr) { }
   d477c:	4803      	ldr	r0, [pc, #12]	; (d478c <_GLOBAL__sub_I_RGB+0x10>)
#include "spark_wiring_rgb.h"
#include "spark_wiring_interrupts.h"

#include "core_hal.h"

RGBClass RGB;
   d477e:	4a04      	ldr	r2, [pc, #16]	; (d4790 <_GLOBAL__sub_I_RGB+0x14>)
   d4780:	4904      	ldr	r1, [pc, #16]	; (d4794 <_GLOBAL__sub_I_RGB+0x18>)
   d4782:	2300      	movs	r3, #0
   d4784:	6083      	str	r3, [r0, #8]
   d4786:	f000 bbdf 	b.w	d4f48 <__aeabi_atexit>
   d478a:	bf00      	nop
   d478c:	2003e668 	.word	0x2003e668
   d4790:	2003e638 	.word	0x2003e638
   d4794:	000d476f 	.word	0x000d476f

000d4798 <_ZZ21module_user_init_hookENUlP6_reentjmPvE_4_FUNES0_jmS1_>:

void module_user_init_hook()
{
#if HAL_PLATFORM_NEWLIB
    newlib_impure_ptr_callback([](struct _reent* r, size_t size, uint32_t version, void* ctx) -> void {
        _impure_ptr = r;
   d4798:	4b01      	ldr	r3, [pc, #4]	; (d47a0 <_ZZ21module_user_init_hookENUlP6_reentjmPvE_4_FUNES0_jmS1_+0x8>)
   d479a:	6018      	str	r0, [r3, #0]
    }, nullptr);
   d479c:	4770      	bx	lr
   d479e:	bf00      	nop
   d47a0:	2003e5d4 	.word	0x2003e5d4

000d47a4 <serialEventRun>:
{
   d47a4:	b508      	push	{r3, lr}
    if (serialEvent && Serial.available()>0)
   d47a6:	4b0b      	ldr	r3, [pc, #44]	; (d47d4 <serialEventRun+0x30>)
   d47a8:	b143      	cbz	r3, d47bc <serialEventRun+0x18>
   d47aa:	f000 f955 	bl	d4a58 <_Z16_fetch_usbserialv>
   d47ae:	6803      	ldr	r3, [r0, #0]
   d47b0:	691b      	ldr	r3, [r3, #16]
   d47b2:	4798      	blx	r3
   d47b4:	2800      	cmp	r0, #0
   d47b6:	dd01      	ble.n	d47bc <serialEventRun+0x18>
        serialEvent();
   d47b8:	f3af 8000 	nop.w
    if (serialEvent1 && Serial1.available()>0)
   d47bc:	4b06      	ldr	r3, [pc, #24]	; (d47d8 <serialEventRun+0x34>)
   d47be:	b143      	cbz	r3, d47d2 <serialEventRun+0x2e>
   d47c0:	f000 f9c8 	bl	d4b54 <_Z22__fetch_global_Serial1v>
   d47c4:	6803      	ldr	r3, [r0, #0]
   d47c6:	691b      	ldr	r3, [r3, #16]
   d47c8:	4798      	blx	r3
   d47ca:	2800      	cmp	r0, #0
   d47cc:	dd01      	ble.n	d47d2 <serialEventRun+0x2e>
        serialEvent1();
   d47ce:	f3af 8000 	nop.w
}
   d47d2:	bd08      	pop	{r3, pc}
	...

000d47dc <_post_loop>:
{
   d47dc:	b508      	push	{r3, lr}
	serialEventRun();
   d47de:	f7ff ffe1 	bl	d47a4 <serialEventRun>
		return !timeout_fn;
	}

	static inline system_tick_t current_time()
	{
		return HAL_Timer_Get_Milli_Seconds();
   d47e2:	f7ff fd1d 	bl	d4220 <HAL_Timer_Get_Milli_Seconds>
	/**
	 * Lifesign that the application is still working normally.
	 */
	static void checkin()
	{
		last_checkin = current_time();
   d47e6:	4b01      	ldr	r3, [pc, #4]	; (d47ec <_post_loop+0x10>)
   d47e8:	6018      	str	r0, [r3, #0]
}
   d47ea:	bd08      	pop	{r3, pc}
   d47ec:	2003e7d4 	.word	0x2003e7d4

000d47f0 <_Z33system_initialize_user_backup_ramv>:
    memcpy(&link_global_retained_start, &link_global_retained_initial_values, len);
   d47f0:	4802      	ldr	r0, [pc, #8]	; (d47fc <_Z33system_initialize_user_backup_ramv+0xc>)
   d47f2:	4a03      	ldr	r2, [pc, #12]	; (d4800 <_Z33system_initialize_user_backup_ramv+0x10>)
   d47f4:	4903      	ldr	r1, [pc, #12]	; (d4804 <_Z33system_initialize_user_backup_ramv+0x14>)
   d47f6:	1a12      	subs	r2, r2, r0
   d47f8:	f002 ba64 	b.w	d6cc4 <memcpy>
   d47fc:	2003f400 	.word	0x2003f400
   d4800:	2003f404 	.word	0x2003f404
   d4804:	000d70c0 	.word	0x000d70c0

000d4808 <_Z27ctrl_request_custom_handlerP12ctrl_request>:
void __attribute((weak)) ctrl_request_custom_handler(ctrl_request* req) {
   d4808:	b507      	push	{r0, r1, r2, lr}
    system_ctrl_set_result(req, SYSTEM_ERROR_NOT_SUPPORTED, nullptr, nullptr, nullptr);
   d480a:	2300      	movs	r3, #0
   d480c:	9300      	str	r3, [sp, #0]
   d480e:	461a      	mov	r2, r3
   d4810:	f06f 0177 	mvn.w	r1, #119	; 0x77
   d4814:	f7ff fdf6 	bl	d4404 <system_ctrl_set_result>
}
   d4818:	b003      	add	sp, #12
   d481a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

000d4820 <_ZL20ctrl_request_handlerP12ctrl_request>:
static void ctrl_request_handler(ctrl_request* req) {
   d4820:	b507      	push	{r0, r1, r2, lr}
    switch (req->type) {
   d4822:	8843      	ldrh	r3, [r0, #2]
   d4824:	2b0a      	cmp	r3, #10
   d4826:	d008      	beq.n	d483a <_ZL20ctrl_request_handlerP12ctrl_request+0x1a>
   d4828:	2b50      	cmp	r3, #80	; 0x50
   d482a:	d10b      	bne.n	d4844 <_ZL20ctrl_request_handlerP12ctrl_request+0x24>
        if (log_process_ctrl_request_callback) {
   d482c:	4b09      	ldr	r3, [pc, #36]	; (d4854 <_ZL20ctrl_request_handlerP12ctrl_request+0x34>)
   d482e:	681b      	ldr	r3, [r3, #0]
   d4830:	b14b      	cbz	r3, d4846 <_ZL20ctrl_request_handlerP12ctrl_request+0x26>
}
   d4832:	b003      	add	sp, #12
   d4834:	f85d eb04 	ldr.w	lr, [sp], #4
            log_process_ctrl_request_callback(req);
   d4838:	4718      	bx	r3
        ctrl_request_custom_handler(req);
   d483a:	f7ff ffe5 	bl	d4808 <_Z27ctrl_request_custom_handlerP12ctrl_request>
}
   d483e:	b003      	add	sp, #12
   d4840:	f85d fb04 	ldr.w	pc, [sp], #4
        system_ctrl_set_result(req, SYSTEM_ERROR_NOT_SUPPORTED, nullptr, nullptr, nullptr);
   d4844:	2300      	movs	r3, #0
   d4846:	9300      	str	r3, [sp, #0]
   d4848:	461a      	mov	r2, r3
   d484a:	f06f 0177 	mvn.w	r1, #119	; 0x77
   d484e:	f7ff fdd9 	bl	d4404 <system_ctrl_set_result>
}
   d4852:	e7f4      	b.n	d483e <_ZL20ctrl_request_handlerP12ctrl_request+0x1e>
   d4854:	2003e67c 	.word	0x2003e67c

000d4858 <module_user_init_hook>:
{
   d4858:	b538      	push	{r3, r4, r5, lr}
#endif // HAL_PLATFORM_NEWLIB

#if HAL_PLATFORM_BACKUP_RAM
    backup_ram_was_valid_ =  __backup_sram_signature==signature;
   d485a:	4c12      	ldr	r4, [pc, #72]	; (d48a4 <module_user_init_hook+0x4c>)
    newlib_impure_ptr_callback([](struct _reent* r, size_t size, uint32_t version, void* ctx) -> void {
   d485c:	4812      	ldr	r0, [pc, #72]	; (d48a8 <module_user_init_hook+0x50>)
    backup_ram_was_valid_ =  __backup_sram_signature==signature;
   d485e:	4d13      	ldr	r5, [pc, #76]	; (d48ac <module_user_init_hook+0x54>)
    newlib_impure_ptr_callback([](struct _reent* r, size_t size, uint32_t version, void* ctx) -> void {
   d4860:	2100      	movs	r1, #0
   d4862:	f7ff fe49 	bl	d44f8 <newlib_impure_ptr_callback>
    backup_ram_was_valid_ =  __backup_sram_signature==signature;
   d4866:	6823      	ldr	r3, [r4, #0]
   d4868:	42ab      	cmp	r3, r5
   d486a:	4b11      	ldr	r3, [pc, #68]	; (d48b0 <module_user_init_hook+0x58>)
   d486c:	bf0c      	ite	eq
   d486e:	2201      	moveq	r2, #1
   d4870:	2200      	movne	r2, #0
   d4872:	701a      	strb	r2, [r3, #0]
    if (!backup_ram_was_valid_) {
   d4874:	d002      	beq.n	d487c <module_user_init_hook+0x24>
        system_initialize_user_backup_ram();
   d4876:	f7ff ffbb 	bl	d47f0 <_Z33system_initialize_user_backup_ramv>
        __backup_sram_signature = signature;
   d487a:	6025      	str	r5, [r4, #0]
    }
#endif

#if HAL_PLATFORM_RNG
    // Initialize the default stdlib PRNG using hardware RNG as a seed
    const uint32_t seed = HAL_RNG_GetRandomNumber();
   d487c:	f7ff fcc8 	bl	d4210 <HAL_RNG_GetRandomNumber>
   d4880:	4604      	mov	r4, r0
    srand(seed);
   d4882:	f002 fa35 	bl	d6cf0 <srand>

    // If the user defines random_seed_from_cloud, call it with a seed value
    // generated by a hardware RNG as well.
    if (random_seed_from_cloud) {
   d4886:	4b0b      	ldr	r3, [pc, #44]	; (d48b4 <module_user_init_hook+0x5c>)
   d4888:	b113      	cbz	r3, d4890 <module_user_init_hook+0x38>
        random_seed_from_cloud(seed);
   d488a:	4620      	mov	r0, r4
   d488c:	f3af 8000 	nop.w
    }
#endif
    // Register the random_seed_from_cloud handler
    spark_set_random_seed_from_cloud_handler(&random_seed_from_cloud, nullptr);
   d4890:	2100      	movs	r1, #0
   d4892:	4808      	ldr	r0, [pc, #32]	; (d48b4 <module_user_init_hook+0x5c>)
   d4894:	f7ff fe10 	bl	d44b8 <spark_set_random_seed_from_cloud_handler>

    // Register application handler for the control requests
    system_ctrl_set_app_request_handler(ctrl_request_handler, nullptr);
}
   d4898:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    system_ctrl_set_app_request_handler(ctrl_request_handler, nullptr);
   d489c:	4806      	ldr	r0, [pc, #24]	; (d48b8 <module_user_init_hook+0x60>)
   d489e:	2100      	movs	r1, #0
   d48a0:	f7ff bda6 	b.w	d43f0 <system_ctrl_set_app_request_handler>
   d48a4:	2003f400 	.word	0x2003f400
   d48a8:	000d4799 	.word	0x000d4799
   d48ac:	9a271c1e 	.word	0x9a271c1e
   d48b0:	2003e678 	.word	0x2003e678
   d48b4:	00000000 	.word	0x00000000
   d48b8:	000d4821 	.word	0x000d4821

000d48bc <_ZN9IPAddressD1Ev>:
    IPAddress(uint8_t first_octet, uint8_t second_octet, uint8_t third_octet, uint8_t fourth_octet);
    IPAddress(uint32_t address);
    IPAddress(const uint8_t* address);
    IPAddress(const HAL_IPAddress& address);

    virtual ~IPAddress() {}
   d48bc:	4770      	bx	lr

000d48be <_ZN9IPAddressD0Ev>:
   d48be:	b510      	push	{r4, lr}
   d48c0:	2118      	movs	r1, #24
   d48c2:	4604      	mov	r4, r0
   d48c4:	f000 fb45 	bl	d4f52 <_ZdlPvj>
   d48c8:	4620      	mov	r0, r4
   d48ca:	bd10      	pop	{r4, pc}

000d48cc <_ZNK9IPAddress7printToER5Print>:
#endif // Wiring_IPv6
	return address.ipv4==that.address.ipv4;
}

size_t IPAddress::printTo(Print& p) const
{
   d48cc:	b5f0      	push	{r4, r5, r6, r7, lr}
#if Wiring_IPv6
#if HAL_USE_INET_HAL_POSIX
	if (address.v==6) {
   d48ce:	7d03      	ldrb	r3, [r0, #20]
   d48d0:	2b06      	cmp	r3, #6
{
   d48d2:	b08d      	sub	sp, #52	; 0x34
   d48d4:	460e      	mov	r6, r1
   d48d6:	f100 0704 	add.w	r7, r0, #4
   d48da:	f04f 0400 	mov.w	r4, #0
	if (address.v==6) {
   d48de:	d012      	beq.n	d4906 <_ZNK9IPAddress7printToER5Print+0x3a>
   d48e0:	f100 0508 	add.w	r5, r0, #8
            val = n;
        }
#if __GNUC__ >= 9
#pragma GCC diagnostic pop
#endif // __GNUC__ >= 9
        return printNumber(val, base) + t;
   d48e4:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   d48e8:	220a      	movs	r2, #10
   d48ea:	4630      	mov	r0, r6
   d48ec:	f7ff fed5 	bl	d469a <_ZN5Print11printNumberEmh>
#else
#pragma message "HAL_USE_INET_HAL_POSIX is required for IPv6 support in IPAddress::printTo()"
#endif // HAL_USE_INET_HAL_POSIX
#endif // Wiring_IPv6
    size_t n = 0;
    for (int i = 0; i < 4; i++)
   d48f0:	42af      	cmp	r7, r5
    {
        if (n)
            n += p.print('.');
        n += p.print((*this)[i], DEC);
   d48f2:	4404      	add	r4, r0
    for (int i = 0; i < 4; i++)
   d48f4:	d019      	beq.n	d492a <_ZNK9IPAddress7printToER5Print+0x5e>
        if (n)
   d48f6:	2c00      	cmp	r4, #0
   d48f8:	d0f4      	beq.n	d48e4 <_ZNK9IPAddress7printToER5Print+0x18>
            n += p.print('.');
   d48fa:	212e      	movs	r1, #46	; 0x2e
   d48fc:	4630      	mov	r0, r6
   d48fe:	f7ff febd 	bl	d467c <_ZN5Print5printEc>
   d4902:	4404      	add	r4, r0
   d4904:	e7ee      	b.n	d48e4 <_ZNK9IPAddress7printToER5Print+0x18>
		inet_inet_ntop(AF_INET6, address.ipv6, buf, sizeof(buf));
   d4906:	232f      	movs	r3, #47	; 0x2f
   d4908:	466a      	mov	r2, sp
   d490a:	4639      	mov	r1, r7
   d490c:	200a      	movs	r0, #10
		buf[0] = 0;
   d490e:	f88d 4000 	strb.w	r4, [sp]
		inet_inet_ntop(AF_INET6, address.ipv6, buf, sizeof(buf));
   d4912:	f7ff fc9d 	bl	d4250 <inet_inet_ntop>
      return write((const uint8_t *)str, strlen(str));
   d4916:	4668      	mov	r0, sp
   d4918:	f002 fa0e 	bl	d6d38 <strlen>
   d491c:	6833      	ldr	r3, [r6, #0]
   d491e:	4602      	mov	r2, r0
   d4920:	68db      	ldr	r3, [r3, #12]
   d4922:	4669      	mov	r1, sp
   d4924:	4630      	mov	r0, r6
   d4926:	4798      	blx	r3
   d4928:	4604      	mov	r4, r0
    }
    return n;
}
   d492a:	4620      	mov	r0, r4
   d492c:	b00d      	add	sp, #52	; 0x34
   d492e:	bdf0      	pop	{r4, r5, r6, r7, pc}

000d4930 <_ZN9IPAddressC1Ev>:
IPAddress::IPAddress()
   d4930:	b510      	push	{r4, lr}
   d4932:	4b05      	ldr	r3, [pc, #20]	; (d4948 <_ZN9IPAddressC1Ev+0x18>)
   d4934:	4604      	mov	r4, r0
        return address;
    }

    virtual size_t printTo(Print& p) const;

    void clear() { memset(&address, 0, sizeof (address)); }
   d4936:	2211      	movs	r2, #17
   d4938:	f840 3b04 	str.w	r3, [r0], #4
   d493c:	2100      	movs	r1, #0
   d493e:	f002 f9cf 	bl	d6ce0 <memset>
}
   d4942:	4620      	mov	r0, r4
   d4944:	bd10      	pop	{r4, pc}
   d4946:	bf00      	nop
   d4948:	000d6dc0 	.word	0x000d6dc0

000d494c <_ZN9IPAddressC1ERK16_HAL_IPAddress_t>:
IPAddress::IPAddress(const HAL_IPAddress& address)
   d494c:	4603      	mov	r3, r0
   d494e:	4a07      	ldr	r2, [pc, #28]	; (d496c <_ZN9IPAddressC1ERK16_HAL_IPAddress_t+0x20>)
   d4950:	b510      	push	{r4, lr}
   d4952:	f843 2b04 	str.w	r2, [r3], #4
    memcpy(&this->address, &address, sizeof(address));
   d4956:	f101 0210 	add.w	r2, r1, #16
   d495a:	f851 4b04 	ldr.w	r4, [r1], #4
   d495e:	f843 4b04 	str.w	r4, [r3], #4
   d4962:	4291      	cmp	r1, r2
   d4964:	d1f9      	bne.n	d495a <_ZN9IPAddressC1ERK16_HAL_IPAddress_t+0xe>
   d4966:	780a      	ldrb	r2, [r1, #0]
   d4968:	701a      	strb	r2, [r3, #0]
}
   d496a:	bd10      	pop	{r4, pc}
   d496c:	000d6dc0 	.word	0x000d6dc0

000d4970 <_ZN9IPAddress8set_ipv4Ehhhh>:
{
   d4970:	b510      	push	{r4, lr}
    address.ipv4 = b0<<24 | b1 << 16 | b2 << 8 | b3;
   d4972:	f89d 4008 	ldrb.w	r4, [sp, #8]
   d4976:	ea44 2303 	orr.w	r3, r4, r3, lsl #8
   d497a:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   d497e:	ea42 6101 	orr.w	r1, r2, r1, lsl #24
        address.v = version;
   d4982:	2304      	movs	r3, #4
   d4984:	6041      	str	r1, [r0, #4]
   d4986:	7503      	strb	r3, [r0, #20]
}
   d4988:	bd10      	pop	{r4, pc}

000d498a <_ZN9IPAddressaSEPKh>:
{
   d498a:	b513      	push	{r0, r1, r4, lr}
    set_ipv4(address[0], address[1], address[2], address[3]);
   d498c:	78cb      	ldrb	r3, [r1, #3]
   d498e:	9300      	str	r3, [sp, #0]
   d4990:	788b      	ldrb	r3, [r1, #2]
   d4992:	784a      	ldrb	r2, [r1, #1]
   d4994:	7809      	ldrb	r1, [r1, #0]
   d4996:	f7ff ffeb 	bl	d4970 <_ZN9IPAddress8set_ipv4Ehhhh>
}
   d499a:	b002      	add	sp, #8
   d499c:	bd10      	pop	{r4, pc}

000d499e <_ZN9USBSerial14blockOnOverrunEb>:
  HAL_USB_USART_Flush_Data(_serial);
}

void USBSerial::blockOnOverrun(bool block)
{
  _blocking = block;
   d499e:	7441      	strb	r1, [r0, #17]
}
   d49a0:	4770      	bx	lr

000d49a2 <_ZN9USBSerialD1Ev>:
#include "usb_hal.h"
#include "system_task.h"
#include "spark_wiring_startup.h"
#include "concurrent_hal.h"

class USBSerial : public Stream
   d49a2:	4770      	bx	lr

000d49a4 <_ZN9USBSerial4readEv>:
{
   d49a4:	b508      	push	{r3, lr}
	return std::max(-1, (int)HAL_USB_USART_Receive_Data(_serial, false));
   d49a6:	2100      	movs	r1, #0
   d49a8:	7c00      	ldrb	r0, [r0, #16]
   d49aa:	f7ff fd01 	bl	d43b0 <HAL_USB_USART_Receive_Data>
}
   d49ae:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   d49b2:	bd08      	pop	{r3, pc}

000d49b4 <_ZN9USBSerial4peekEv>:

int USBSerial::peek()
{
   d49b4:	b508      	push	{r3, lr}
	return std::max(-1, (int)HAL_USB_USART_Receive_Data(_serial, true));
   d49b6:	2101      	movs	r1, #1
   d49b8:	7c00      	ldrb	r0, [r0, #16]
   d49ba:	f7ff fcf9 	bl	d43b0 <HAL_USB_USART_Receive_Data>
}
   d49be:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   d49c2:	bd08      	pop	{r3, pc}

000d49c4 <_ZN9USBSerial17availableForWriteEv>:
{
   d49c4:	b508      	push	{r3, lr}
  return std::max(0, (int)HAL_USB_USART_Available_Data_For_Write(_serial));
   d49c6:	7c00      	ldrb	r0, [r0, #16]
   d49c8:	f7ff fcea 	bl	d43a0 <HAL_USB_USART_Available_Data_For_Write>
}
   d49cc:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
   d49d0:	bd08      	pop	{r3, pc}

000d49d2 <_ZN9USBSerial9availableEv>:
{
   d49d2:	b508      	push	{r3, lr}
	return std::max(0, (int)HAL_USB_USART_Available_Data(_serial));
   d49d4:	7c00      	ldrb	r0, [r0, #16]
   d49d6:	f7ff fcdb 	bl	d4390 <HAL_USB_USART_Available_Data>
}
   d49da:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
   d49de:	bd08      	pop	{r3, pc}

000d49e0 <_ZN9USBSerial5writeEh>:
{
   d49e0:	b513      	push	{r0, r1, r4, lr}
   d49e2:	4604      	mov	r4, r0
  if (HAL_USB_USART_Available_Data_For_Write(_serial) > 0 || _blocking) {
   d49e4:	7c00      	ldrb	r0, [r0, #16]
{
   d49e6:	9101      	str	r1, [sp, #4]
  if (HAL_USB_USART_Available_Data_For_Write(_serial) > 0 || _blocking) {
   d49e8:	f7ff fcda 	bl	d43a0 <HAL_USB_USART_Available_Data_For_Write>
   d49ec:	2800      	cmp	r0, #0
   d49ee:	9901      	ldr	r1, [sp, #4]
   d49f0:	dc01      	bgt.n	d49f6 <_ZN9USBSerial5writeEh+0x16>
   d49f2:	7c60      	ldrb	r0, [r4, #17]
   d49f4:	b120      	cbz	r0, d4a00 <_ZN9USBSerial5writeEh+0x20>
    return std::max(0, (int)HAL_USB_USART_Send_Data(_serial, byte));
   d49f6:	7c20      	ldrb	r0, [r4, #16]
   d49f8:	f7ff fce2 	bl	d43c0 <HAL_USB_USART_Send_Data>
   d49fc:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
}
   d4a00:	b002      	add	sp, #8
   d4a02:	bd10      	pop	{r4, pc}

000d4a04 <_ZN9USBSerial5flushEv>:
  HAL_USB_USART_Flush_Data(_serial);
   d4a04:	7c00      	ldrb	r0, [r0, #16]
   d4a06:	f7ff bce3 	b.w	d43d0 <HAL_USB_USART_Flush_Data>

000d4a0a <_ZN9USBSerialD0Ev>:
   d4a0a:	b510      	push	{r4, lr}
   d4a0c:	2114      	movs	r1, #20
   d4a0e:	4604      	mov	r4, r0
   d4a10:	f000 fa9f 	bl	d4f52 <_ZdlPvj>
   d4a14:	4620      	mov	r0, r4
   d4a16:	bd10      	pop	{r4, pc}

000d4a18 <_ZN9USBSerialC1E20HAL_USB_USART_SerialRK20HAL_USB_USART_Config>:
USBSerial::USBSerial(HAL_USB_USART_Serial serial, const HAL_USB_USART_Config& conf)
   d4a18:	b510      	push	{r4, lr}
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
   d4a1a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   d4a1e:	4604      	mov	r4, r0
   d4a20:	4608      	mov	r0, r1
   d4a22:	2100      	movs	r1, #0
   d4a24:	e9c4 1301 	strd	r1, r3, [r4, #4]
   d4a28:	4b04      	ldr	r3, [pc, #16]	; (d4a3c <_ZN9USBSerialC1E20HAL_USB_USART_SerialRK20HAL_USB_USART_Config+0x24>)
   d4a2a:	6023      	str	r3, [r4, #0]
  _blocking = true;
   d4a2c:	2301      	movs	r3, #1
  _serial = serial;
   d4a2e:	7420      	strb	r0, [r4, #16]
  _blocking = true;
   d4a30:	7463      	strb	r3, [r4, #17]
  HAL_USB_USART_Init(_serial, &conf);
   d4a32:	4611      	mov	r1, r2
   d4a34:	f7ff fc9c 	bl	d4370 <HAL_USB_USART_Init>
}
   d4a38:	4620      	mov	r0, r4
   d4a3a:	bd10      	pop	{r4, pc}
   d4a3c:	000d6dd4 	.word	0x000d6dd4

000d4a40 <_ZN9USBSerial5beginEl>:
    HAL_USB_USART_Begin(_serial, speed, NULL);
   d4a40:	7c00      	ldrb	r0, [r0, #16]
   d4a42:	2200      	movs	r2, #0
   d4a44:	f7ff bc9c 	b.w	d4380 <HAL_USB_USART_Begin>

000d4a48 <_Z19acquireSerialBufferv>:

// Preinstantiate Objects //////////////////////////////////////////////////////
#ifdef SPARK_USB_SERIAL

HAL_USB_USART_Config __attribute__((weak)) acquireSerialBuffer()
{
   d4a48:	b510      	push	{r4, lr}
  HAL_USB_USART_Config conf = {0};
   d4a4a:	2214      	movs	r2, #20
{
   d4a4c:	4604      	mov	r4, r0
  HAL_USB_USART_Config conf = {0};
   d4a4e:	2100      	movs	r1, #0
   d4a50:	f002 f946 	bl	d6ce0 <memset>
  conf.rx_buffer_size = USB_RX_BUFFER_SIZE;
  conf.tx_buffer_size = USB_TX_BUFFER_SIZE;
#endif

  return conf;
}
   d4a54:	4620      	mov	r0, r4
   d4a56:	bd10      	pop	{r4, pc}

000d4a58 <_Z16_fetch_usbserialv>:

USBSerial& _fetch_usbserial()
{
   d4a58:	b510      	push	{r4, lr}
  HAL_USB_USART_Config conf = acquireSerialBuffer();
	static USBSerial _usbserial(HAL_USB_USART_SERIAL, conf);
   d4a5a:	4c10      	ldr	r4, [pc, #64]	; (d4a9c <_Z16_fetch_usbserialv+0x44>)
{
   d4a5c:	b088      	sub	sp, #32
  HAL_USB_USART_Config conf = acquireSerialBuffer();
   d4a5e:	a803      	add	r0, sp, #12
   d4a60:	f7ff fff2 	bl	d4a48 <_Z19acquireSerialBufferv>
	static USBSerial _usbserial(HAL_USB_USART_SERIAL, conf);
   d4a64:	7821      	ldrb	r1, [r4, #0]
   d4a66:	f3bf 8f5b 	dmb	ish
   d4a6a:	f011 0101 	ands.w	r1, r1, #1
   d4a6e:	d111      	bne.n	d4a94 <_Z16_fetch_usbserialv+0x3c>
   d4a70:	4620      	mov	r0, r4
   d4a72:	9101      	str	r1, [sp, #4]
   d4a74:	f7ff fb13 	bl	d409e <__cxa_guard_acquire>
   d4a78:	9901      	ldr	r1, [sp, #4]
   d4a7a:	b158      	cbz	r0, d4a94 <_Z16_fetch_usbserialv+0x3c>
   d4a7c:	aa03      	add	r2, sp, #12
   d4a7e:	4808      	ldr	r0, [pc, #32]	; (d4aa0 <_Z16_fetch_usbserialv+0x48>)
   d4a80:	f7ff ffca 	bl	d4a18 <_ZN9USBSerialC1E20HAL_USB_USART_SerialRK20HAL_USB_USART_Config>
   d4a84:	4620      	mov	r0, r4
   d4a86:	f7ff fb0f 	bl	d40a8 <__cxa_guard_release>
   d4a8a:	4a06      	ldr	r2, [pc, #24]	; (d4aa4 <_Z16_fetch_usbserialv+0x4c>)
   d4a8c:	4906      	ldr	r1, [pc, #24]	; (d4aa8 <_Z16_fetch_usbserialv+0x50>)
   d4a8e:	4804      	ldr	r0, [pc, #16]	; (d4aa0 <_Z16_fetch_usbserialv+0x48>)
   d4a90:	f000 fa5a 	bl	d4f48 <__aeabi_atexit>
	return _usbserial;
}
   d4a94:	4802      	ldr	r0, [pc, #8]	; (d4aa0 <_Z16_fetch_usbserialv+0x48>)
   d4a96:	b008      	add	sp, #32
   d4a98:	bd10      	pop	{r4, pc}
   d4a9a:	bf00      	nop
   d4a9c:	2003e680 	.word	0x2003e680
   d4aa0:	2003e684 	.word	0x2003e684
   d4aa4:	2003e638 	.word	0x2003e638
   d4aa8:	000d49a3 	.word	0x000d49a3

000d4aac <_ZN11USARTSerialD1Ev>:
private:
  hal_usart_interface_t _serial;
  bool _blocking;
public:
  USARTSerial(hal_usart_interface_t serial, hal_usart_ring_buffer_t *rx_buffer, hal_usart_ring_buffer_t *tx_buffer);
  virtual ~USARTSerial() {};
   d4aac:	4770      	bx	lr

000d4aae <_ZN11USARTSerial14blockOnOverrunEb>:
    hal_usart_half_duplex(_serial, Enable);
}

void USARTSerial::blockOnOverrun(bool block)
{
  _blocking = block;
   d4aae:	7441      	strb	r1, [r0, #17]
}
   d4ab0:	4770      	bx	lr

000d4ab2 <_ZN11USARTSerial17availableForWriteEv>:


int USARTSerial::availableForWrite(void)
{
   d4ab2:	b508      	push	{r3, lr}
  return std::max(0, (int)hal_usart_available_data_for_write(_serial));
   d4ab4:	7c00      	ldrb	r0, [r0, #16]
   d4ab6:	f7ff fc0b 	bl	d42d0 <hal_usart_available_data_for_write>
}
   d4aba:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
   d4abe:	bd08      	pop	{r3, pc}

000d4ac0 <_ZN11USARTSerial9availableEv>:

int USARTSerial::available(void)
{
   d4ac0:	b508      	push	{r3, lr}
  return std::max(0, (int)hal_usart_available(_serial));
   d4ac2:	7c00      	ldrb	r0, [r0, #16]
   d4ac4:	f7ff fbdc 	bl	d4280 <hal_usart_available>
}
   d4ac8:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
   d4acc:	bd08      	pop	{r3, pc}

000d4ace <_ZN11USARTSerial4peekEv>:

int USARTSerial::peek(void)
{
   d4ace:	b508      	push	{r3, lr}
  return std::max(-1, (int)hal_usart_peek(_serial));
   d4ad0:	7c00      	ldrb	r0, [r0, #16]
   d4ad2:	f7ff fbe5 	bl	d42a0 <hal_usart_peek>
}
   d4ad6:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   d4ada:	bd08      	pop	{r3, pc}

000d4adc <_ZN11USARTSerial4readEv>:

int USARTSerial::read(void)
{
   d4adc:	b508      	push	{r3, lr}
  return std::max(-1, (int)hal_usart_read(_serial));
   d4ade:	7c00      	ldrb	r0, [r0, #16]
   d4ae0:	f7ff fbd6 	bl	d4290 <hal_usart_read>
}
   d4ae4:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   d4ae8:	bd08      	pop	{r3, pc}

000d4aea <_ZN11USARTSerial5flushEv>:

void USARTSerial::flush()
{
  hal_usart_flush(_serial);
   d4aea:	7c00      	ldrb	r0, [r0, #16]
   d4aec:	f7ff bbe0 	b.w	d42b0 <hal_usart_flush>

000d4af0 <_ZN11USARTSerial5writeEh>:
}

size_t USARTSerial::write(uint8_t c)
{
   d4af0:	b537      	push	{r0, r1, r2, r4, r5, lr}
  // attempt a write if blocking, or for non-blocking if there is room.
  if (_blocking || hal_usart_available_data_for_write(_serial) > 0) {
   d4af2:	7c45      	ldrb	r5, [r0, #17]
{
   d4af4:	4604      	mov	r4, r0
  if (_blocking || hal_usart_available_data_for_write(_serial) > 0) {
   d4af6:	b12d      	cbz	r5, d4b04 <_ZN11USARTSerial5writeEh+0x14>
    // the HAL always blocks.
	  return hal_usart_write(_serial, c);
   d4af8:	7c20      	ldrb	r0, [r4, #16]
  }
  return 0;
}
   d4afa:	b003      	add	sp, #12
   d4afc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	  return hal_usart_write(_serial, c);
   d4b00:	f7ff bbb6 	b.w	d4270 <hal_usart_write>
  if (_blocking || hal_usart_available_data_for_write(_serial) > 0) {
   d4b04:	7c00      	ldrb	r0, [r0, #16]
   d4b06:	9101      	str	r1, [sp, #4]
   d4b08:	f7ff fbe2 	bl	d42d0 <hal_usart_available_data_for_write>
   d4b0c:	2800      	cmp	r0, #0
   d4b0e:	9901      	ldr	r1, [sp, #4]
   d4b10:	dcf2      	bgt.n	d4af8 <_ZN11USARTSerial5writeEh+0x8>
}
   d4b12:	4628      	mov	r0, r5
   d4b14:	b003      	add	sp, #12
   d4b16:	bd30      	pop	{r4, r5, pc}

000d4b18 <_ZN11USARTSerialD0Ev>:
   d4b18:	b510      	push	{r4, lr}
   d4b1a:	2114      	movs	r1, #20
   d4b1c:	4604      	mov	r4, r0
   d4b1e:	f000 fa18 	bl	d4f52 <_ZdlPvj>
   d4b22:	4620      	mov	r0, r4
   d4b24:	bd10      	pop	{r4, pc}
	...

000d4b28 <_ZN11USARTSerialC1E21hal_usart_interface_tP23hal_usart_ring_buffer_tS2_>:
USARTSerial::USARTSerial(hal_usart_interface_t serial, hal_usart_ring_buffer_t *rx_buffer, hal_usart_ring_buffer_t *tx_buffer)
   d4b28:	b510      	push	{r4, lr}
   d4b2a:	f04f 0c00 	mov.w	ip, #0
   d4b2e:	4604      	mov	r4, r0
   d4b30:	4608      	mov	r0, r1
   d4b32:	4611      	mov	r1, r2
   d4b34:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   d4b38:	e9c4 c201 	strd	ip, r2, [r4, #4]
   d4b3c:	4a04      	ldr	r2, [pc, #16]	; (d4b50 <_ZN11USARTSerialC1E21hal_usart_interface_tP23hal_usart_ring_buffer_tS2_+0x28>)
   d4b3e:	6022      	str	r2, [r4, #0]
  _blocking = true;
   d4b40:	2201      	movs	r2, #1
  _serial = serial;
   d4b42:	7420      	strb	r0, [r4, #16]
  _blocking = true;
   d4b44:	7462      	strb	r2, [r4, #17]
  hal_usart_init(serial, rx_buffer, tx_buffer);
   d4b46:	461a      	mov	r2, r3
   d4b48:	f7ff fb8a 	bl	d4260 <hal_usart_init>
}
   d4b4c:	4620      	mov	r0, r4
   d4b4e:	bd10      	pop	{r4, pc}
   d4b50:	000d6e04 	.word	0x000d6e04

000d4b54 <_Z22__fetch_global_Serial1v>:
static hal_usart_ring_buffer_t* serial1_rx_buffer = nullptr;
static hal_usart_ring_buffer_t* serial1_tx_buffer = nullptr;
#endif

USARTSerial& __fetch_global_Serial1()
{
   d4b54:	b513      	push	{r0, r1, r4, lr}
#if ((MODULE_FUNCTION == MOD_FUNC_USER_PART) || (MODULE_FUNCTION == MOD_FUNC_MONO_FIRMWARE))
	static USARTSerial serial1(HAL_USART_SERIAL1, &serial1_rx_buffer, &serial1_tx_buffer);
   d4b56:	4c0e      	ldr	r4, [pc, #56]	; (d4b90 <_Z22__fetch_global_Serial1v+0x3c>)
   d4b58:	7821      	ldrb	r1, [r4, #0]
   d4b5a:	f3bf 8f5b 	dmb	ish
   d4b5e:	f011 0101 	ands.w	r1, r1, #1
   d4b62:	d112      	bne.n	d4b8a <_Z22__fetch_global_Serial1v+0x36>
   d4b64:	4620      	mov	r0, r4
   d4b66:	9101      	str	r1, [sp, #4]
   d4b68:	f7ff fa99 	bl	d409e <__cxa_guard_acquire>
   d4b6c:	9901      	ldr	r1, [sp, #4]
   d4b6e:	b160      	cbz	r0, d4b8a <_Z22__fetch_global_Serial1v+0x36>
   d4b70:	4a08      	ldr	r2, [pc, #32]	; (d4b94 <_Z22__fetch_global_Serial1v+0x40>)
   d4b72:	4b09      	ldr	r3, [pc, #36]	; (d4b98 <_Z22__fetch_global_Serial1v+0x44>)
   d4b74:	4809      	ldr	r0, [pc, #36]	; (d4b9c <_Z22__fetch_global_Serial1v+0x48>)
   d4b76:	f7ff ffd7 	bl	d4b28 <_ZN11USARTSerialC1E21hal_usart_interface_tP23hal_usart_ring_buffer_tS2_>
   d4b7a:	4620      	mov	r0, r4
   d4b7c:	f7ff fa94 	bl	d40a8 <__cxa_guard_release>
   d4b80:	4a07      	ldr	r2, [pc, #28]	; (d4ba0 <_Z22__fetch_global_Serial1v+0x4c>)
   d4b82:	4908      	ldr	r1, [pc, #32]	; (d4ba4 <_Z22__fetch_global_Serial1v+0x50>)
   d4b84:	4805      	ldr	r0, [pc, #20]	; (d4b9c <_Z22__fetch_global_Serial1v+0x48>)
   d4b86:	f000 f9df 	bl	d4f48 <__aeabi_atexit>
    serial1_tx_buffer = new hal_usart_ring_buffer_t();
  }
  static USARTSerial serial1(HAL_USART_SERIAL1, serial1_rx_buffer, serial1_tx_buffer);
#endif
	return serial1;
}
   d4b8a:	4804      	ldr	r0, [pc, #16]	; (d4b9c <_Z22__fetch_global_Serial1v+0x48>)
   d4b8c:	b002      	add	sp, #8
   d4b8e:	bd10      	pop	{r4, pc}
   d4b90:	2003e698 	.word	0x2003e698
   d4b94:	2003e69c 	.word	0x2003e69c
   d4b98:	2003e720 	.word	0x2003e720
   d4b9c:	2003e7a4 	.word	0x2003e7a4
   d4ba0:	2003e638 	.word	0x2003e638
   d4ba4:	000d4aad 	.word	0x000d4aad

000d4ba8 <_ZN7TwoWireD1Ev>:
private:
  hal_i2c_interface_t _i2c;

public:
  TwoWire(hal_i2c_interface_t i2c, const hal_i2c_config_t& config);
  virtual ~TwoWire() {};
   d4ba8:	4770      	bx	lr

000d4baa <_ZN7TwoWire5writeEPKhj>:

// must be called in:
// slave tx event callback
// or after beginTransmission(address)
size_t TwoWire::write(const uint8_t *data, size_t quantity)
{
   d4baa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   d4bac:	4606      	mov	r6, r0
   d4bae:	4615      	mov	r5, r2
   d4bb0:	460c      	mov	r4, r1
   d4bb2:	188f      	adds	r7, r1, r2
  // in master/slave transmitter mode
  for(size_t i = 0; i < quantity; ++i)
   d4bb4:	42bc      	cmp	r4, r7
   d4bb6:	d006      	beq.n	d4bc6 <_ZN7TwoWire5writeEPKhj+0x1c>
  {
    write(data[i]);
   d4bb8:	6833      	ldr	r3, [r6, #0]
   d4bba:	f814 1b01 	ldrb.w	r1, [r4], #1
   d4bbe:	689b      	ldr	r3, [r3, #8]
   d4bc0:	4630      	mov	r0, r6
   d4bc2:	4798      	blx	r3
  for(size_t i = 0; i < quantity; ++i)
   d4bc4:	e7f6      	b.n	d4bb4 <_ZN7TwoWire5writeEPKhj+0xa>
  }

  return quantity;
}
   d4bc6:	4628      	mov	r0, r5
   d4bc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000d4bca <_ZN7TwoWire5writeEh>:
  return hal_i2c_write(_i2c, data, NULL);
   d4bca:	7c00      	ldrb	r0, [r0, #16]
   d4bcc:	2200      	movs	r2, #0
   d4bce:	f7ff bb87 	b.w	d42e0 <hal_i2c_write>

000d4bd2 <_ZN7TwoWire9availableEv>:
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return hal_i2c_available(_i2c, NULL);
   d4bd2:	7c00      	ldrb	r0, [r0, #16]
   d4bd4:	2100      	movs	r1, #0
   d4bd6:	f7ff bb8b 	b.w	d42f0 <hal_i2c_available>

000d4bda <_ZN7TwoWire4readEv>:
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::read(void)
{
  return hal_i2c_read(_i2c, NULL);
   d4bda:	7c00      	ldrb	r0, [r0, #16]
   d4bdc:	2100      	movs	r1, #0
   d4bde:	f7ff bb8f 	b.w	d4300 <hal_i2c_read>

000d4be2 <_ZN7TwoWire4peekEv>:
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::peek(void)
{
  return hal_i2c_peek(_i2c, NULL);
   d4be2:	7c00      	ldrb	r0, [r0, #16]
   d4be4:	2100      	movs	r1, #0
   d4be6:	f7ff bb93 	b.w	d4310 <hal_i2c_peek>

000d4bea <_ZN7TwoWire5flushEv>:
}

void TwoWire::flush(void)
{
  hal_i2c_flush(_i2c, NULL);
   d4bea:	7c00      	ldrb	r0, [r0, #16]
   d4bec:	2100      	movs	r1, #0
   d4bee:	f7ff bb97 	b.w	d4320 <hal_i2c_flush>

000d4bf2 <_ZN7TwoWireD0Ev>:
   d4bf2:	b510      	push	{r4, lr}
   d4bf4:	2114      	movs	r1, #20
   d4bf6:	4604      	mov	r4, r0
   d4bf8:	f000 f9ab 	bl	d4f52 <_ZdlPvj>
   d4bfc:	4620      	mov	r0, r4
   d4bfe:	bd10      	pop	{r4, pc}

000d4c00 <_ZN7TwoWireC1E19hal_i2c_interface_tRK16hal_i2c_config_t>:
TwoWire::TwoWire(hal_i2c_interface_t i2c, const hal_i2c_config_t& conf)
   d4c00:	b510      	push	{r4, lr}
   d4c02:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   d4c06:	4604      	mov	r4, r0
   d4c08:	4608      	mov	r0, r1
   d4c0a:	2100      	movs	r1, #0
   d4c0c:	e9c4 1301 	strd	r1, r3, [r4, #4]
   d4c10:	4b03      	ldr	r3, [pc, #12]	; (d4c20 <_ZN7TwoWireC1E19hal_i2c_interface_tRK16hal_i2c_config_t+0x20>)
   d4c12:	6023      	str	r3, [r4, #0]
  _i2c = i2c;
   d4c14:	7420      	strb	r0, [r4, #16]
  hal_i2c_init(_i2c, &conf);
   d4c16:	4611      	mov	r1, r2
   d4c18:	f7ff fb92 	bl	d4340 <hal_i2c_init>
}
   d4c1c:	4620      	mov	r0, r4
   d4c1e:	bd10      	pop	{r4, pc}
   d4c20:	000d6e34 	.word	0x000d6e34

000d4c24 <_ZN5spark9WiFiClass5readyEv>:
    bool connecting(void) {
        return network_connecting(*this, 0, NULL);
    }

    bool ready(void) {
        return network_ready(*this, 0, NULL);
   d4c24:	2200      	movs	r2, #0
   d4c26:	6840      	ldr	r0, [r0, #4]
   d4c28:	4611      	mov	r1, r2
   d4c2a:	f7ff bc0d 	b.w	d4448 <network_ready>

000d4c2e <_ZN5spark9WiFiClass9listeningEv>:
    uint16_t getListenTimeout(void) {
        return network_get_listen_timeout(*this, 0, NULL);
    }

    bool listening(void) {
        return network_listening(*this, 0, NULL);
   d4c2e:	2200      	movs	r2, #0
   d4c30:	6840      	ldr	r0, [r0, #4]
   d4c32:	4611      	mov	r1, r2
   d4c34:	f7ff bc28 	b.w	d4488 <network_listening>

000d4c38 <_ZN5spark9WiFiClass16getListenTimeoutEv>:
        return network_get_listen_timeout(*this, 0, NULL);
   d4c38:	2200      	movs	r2, #0
   d4c3a:	6840      	ldr	r0, [r0, #4]
   d4c3c:	4611      	mov	r1, r2
   d4c3e:	f7ff bc33 	b.w	d44a8 <network_get_listen_timeout>

000d4c42 <_ZN5spark9WiFiClass16setListenTimeoutEt>:
        network_set_listen_timeout(*this, timeout, NULL);
   d4c42:	6840      	ldr	r0, [r0, #4]
   d4c44:	2200      	movs	r2, #0
   d4c46:	f7ff bc27 	b.w	d4498 <network_set_listen_timeout>

000d4c4a <_ZN5spark9WiFiClass6listenEb>:
        network_listen(*this, begin ? 0 : 1, NULL);
   d4c4a:	6840      	ldr	r0, [r0, #4]
   d4c4c:	2200      	movs	r2, #0
   d4c4e:	f081 0101 	eor.w	r1, r1, #1
   d4c52:	f7ff bc11 	b.w	d4478 <network_listen>

000d4c56 <_ZN5spark9WiFiClass3offEv>:
        network_off(*this, 0, 0, NULL);
   d4c56:	2300      	movs	r3, #0
   d4c58:	6840      	ldr	r0, [r0, #4]
   d4c5a:	461a      	mov	r2, r3
   d4c5c:	4619      	mov	r1, r3
   d4c5e:	f7ff bc03 	b.w	d4468 <network_off>

000d4c62 <_ZN5spark9WiFiClass2onEv>:
        network_on(*this, 0, 0, NULL);
   d4c62:	2300      	movs	r3, #0
   d4c64:	6840      	ldr	r0, [r0, #4]
   d4c66:	461a      	mov	r2, r3
   d4c68:	4619      	mov	r1, r3
   d4c6a:	f7ff bbf5 	b.w	d4458 <network_on>

000d4c6e <_ZN5spark9WiFiClass10connectingEv>:
        return network_connecting(*this, 0, NULL);
   d4c6e:	2200      	movs	r2, #0
   d4c70:	6840      	ldr	r0, [r0, #4]
   d4c72:	4611      	mov	r1, r2
   d4c74:	f7ff bbd8 	b.w	d4428 <network_connecting>

000d4c78 <_ZN5spark9WiFiClass10disconnectEv>:
        network_disconnect(*this, NETWORK_DISCONNECT_REASON_USER, NULL);
   d4c78:	6840      	ldr	r0, [r0, #4]
   d4c7a:	2200      	movs	r2, #0
   d4c7c:	2102      	movs	r1, #2
   d4c7e:	f7ff bbdb 	b.w	d4438 <network_disconnect>

000d4c82 <_ZN5spark9WiFiClass7connectEj>:
        network_connect(*this, flags, 0, NULL);
   d4c82:	2300      	movs	r3, #0
   d4c84:	6840      	ldr	r0, [r0, #4]
   d4c86:	461a      	mov	r2, r3
   d4c88:	f7ff bbc6 	b.w	d4418 <network_connect>

000d4c8c <_GLOBAL__sub_I__ZN10WiFiSignalC2ERK21wlan_connected_info_t>:
   d4c8c:	4b02      	ldr	r3, [pc, #8]	; (d4c98 <_GLOBAL__sub_I__ZN10WiFiSignalC2ERK21wlan_connected_info_t+0xc>)
   d4c8e:	2204      	movs	r2, #4
   d4c90:	605a      	str	r2, [r3, #4]
            NetworkClass(NETWORK_INTERFACE_WIFI_STA) {
   d4c92:	4a02      	ldr	r2, [pc, #8]	; (d4c9c <_GLOBAL__sub_I__ZN10WiFiSignalC2ERK21wlan_connected_info_t+0x10>)
   d4c94:	601a      	str	r2, [r3, #0]
the same way.
*****************************************************************************/

    WiFiClass WiFi;
    // NetworkClass& Network = WiFi;
}
   d4c96:	4770      	bx	lr
   d4c98:	2003e7b8 	.word	0x2003e7b8
   d4c9c:	000d6e5c 	.word	0x000d6e5c

000d4ca0 <_ZN5spark12NetworkClass7connectEj>:
        return Network;
    }
}

void NetworkClass::connect(unsigned flags) {
    network_connect(*this, flags, 0, nullptr);
   d4ca0:	2300      	movs	r3, #0
   d4ca2:	6840      	ldr	r0, [r0, #4]
   d4ca4:	461a      	mov	r2, r3
   d4ca6:	f7ff bbb7 	b.w	d4418 <network_connect>

000d4caa <_ZN5spark12NetworkClass10disconnectEv>:
}

void NetworkClass::disconnect() {
    network_disconnect(*this, NETWORK_DISCONNECT_REASON_USER, nullptr);
   d4caa:	6840      	ldr	r0, [r0, #4]
   d4cac:	2200      	movs	r2, #0
   d4cae:	2102      	movs	r1, #2
   d4cb0:	f7ff bbc2 	b.w	d4438 <network_disconnect>

000d4cb4 <_ZN5spark12NetworkClass10connectingEv>:
}

bool NetworkClass::connecting() {
    return network_connecting(*this, 0, nullptr);
   d4cb4:	2200      	movs	r2, #0
   d4cb6:	6840      	ldr	r0, [r0, #4]
   d4cb8:	4611      	mov	r1, r2
   d4cba:	f7ff bbb5 	b.w	d4428 <network_connecting>

000d4cbe <_ZN5spark12NetworkClass5readyEv>:
}

bool NetworkClass::ready() {
    return network_ready(*this, 0, nullptr);
   d4cbe:	2200      	movs	r2, #0
   d4cc0:	6840      	ldr	r0, [r0, #4]
   d4cc2:	4611      	mov	r1, r2
   d4cc4:	f7ff bbc0 	b.w	d4448 <network_ready>

000d4cc8 <_ZN5spark12NetworkClass2onEv>:
}

void NetworkClass::on() {
    network_on(*this, 0, 0, nullptr);
   d4cc8:	2300      	movs	r3, #0
   d4cca:	6840      	ldr	r0, [r0, #4]
   d4ccc:	461a      	mov	r2, r3
   d4cce:	4619      	mov	r1, r3
   d4cd0:	f7ff bbc2 	b.w	d4458 <network_on>

000d4cd4 <_ZN5spark12NetworkClass3offEv>:
}

void NetworkClass::off() {
    network_off(*this, 0, 0, nullptr);
   d4cd4:	2300      	movs	r3, #0
   d4cd6:	6840      	ldr	r0, [r0, #4]
   d4cd8:	461a      	mov	r2, r3
   d4cda:	4619      	mov	r1, r3
   d4cdc:	f7ff bbc4 	b.w	d4468 <network_off>

000d4ce0 <_ZN5spark12NetworkClass6listenEb>:
}

void NetworkClass::listen(bool begin) {
    network_listen(*this, begin ? 0 : 1, nullptr);
   d4ce0:	6840      	ldr	r0, [r0, #4]
   d4ce2:	2200      	movs	r2, #0
   d4ce4:	f081 0101 	eor.w	r1, r1, #1
   d4ce8:	f7ff bbc6 	b.w	d4478 <network_listen>

000d4cec <_ZN5spark12NetworkClass16setListenTimeoutEt>:
}

void NetworkClass::setListenTimeout(uint16_t timeout) {
    network_set_listen_timeout(*this, timeout, nullptr);
   d4cec:	6840      	ldr	r0, [r0, #4]
   d4cee:	2200      	movs	r2, #0
   d4cf0:	f7ff bbd2 	b.w	d4498 <network_set_listen_timeout>

000d4cf4 <_ZN5spark12NetworkClass16getListenTimeoutEv>:
}

uint16_t NetworkClass::getListenTimeout() {
    return network_get_listen_timeout(*this, 0, nullptr);
   d4cf4:	2200      	movs	r2, #0
   d4cf6:	6840      	ldr	r0, [r0, #4]
   d4cf8:	4611      	mov	r1, r2
   d4cfa:	f7ff bbd5 	b.w	d44a8 <network_get_listen_timeout>

000d4cfe <_ZN5spark12NetworkClass9listeningEv>:
}

bool NetworkClass::listening() {
    return network_listening(*this, 0, nullptr);
   d4cfe:	2200      	movs	r2, #0
   d4d00:	6840      	ldr	r0, [r0, #4]
   d4d02:	4611      	mov	r1, r2
   d4d04:	f7ff bbc0 	b.w	d4488 <network_listening>

000d4d08 <_ZN5spark12NetworkClass7resolveEPKc>:
}

IPAddress NetworkClass::resolve(const char* name) {
   d4d08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    IPAddress addr;
#if HAL_USE_INET_HAL_POSIX
    struct addrinfo *ai = nullptr;
   d4d0c:	2400      	movs	r4, #0
IPAddress NetworkClass::resolve(const char* name) {
   d4d0e:	b095      	sub	sp, #84	; 0x54
   d4d10:	4616      	mov	r6, r2
   d4d12:	460d      	mov	r5, r1
   d4d14:	4607      	mov	r7, r0
    IPAddress addr;
   d4d16:	f7ff fe0b 	bl	d4930 <_ZN9IPAddressC1Ev>
    struct addrinfo hints = {};
   d4d1a:	4621      	mov	r1, r4
   d4d1c:	2218      	movs	r2, #24
   d4d1e:	a80e      	add	r0, sp, #56	; 0x38
    struct addrinfo *ai = nullptr;
   d4d20:	9400      	str	r4, [sp, #0]
    struct addrinfo hints = {};
   d4d22:	f001 ffdd 	bl	d6ce0 <memset>
    hints.ai_flags = AI_ADDRCONFIG;
   d4d26:	2340      	movs	r3, #64	; 0x40
    hints.ai_family = AF_UNSPEC;
   d4d28:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
    const int r = getaddrinfo(name, nullptr, &hints, &ai);
   d4d2c:	4621      	mov	r1, r4
   d4d2e:	466b      	mov	r3, sp
   d4d30:	aa0c      	add	r2, sp, #48	; 0x30
   d4d32:	4630      	mov	r0, r6
   d4d34:	f7ff fa44 	bl	d41c0 <netdb_getaddrinfo>
    if (!r) {
   d4d38:	4604      	mov	r4, r0
   d4d3a:	2800      	cmp	r0, #0
   d4d3c:	d146      	bne.n	d4dcc <_ZN5spark12NetworkClass7resolveEPKc+0xc4>
        bool ok = false;
        // This is not really needed if AI_ADDRCONFIG is properly supported
        bool ipv4 = network_ready(*this, NETWORK_READY_TYPE_IPV4, nullptr);
   d4d3e:	4602      	mov	r2, r0
   d4d40:	2101      	movs	r1, #1
   d4d42:	6868      	ldr	r0, [r5, #4]
   d4d44:	f7ff fb80 	bl	d4448 <network_ready>
        bool ipv6 = network_ready(*this, NETWORK_READY_TYPE_IPV6, nullptr);
   d4d48:	2102      	movs	r1, #2
        bool ipv4 = network_ready(*this, NETWORK_READY_TYPE_IPV4, nullptr);
   d4d4a:	4680      	mov	r8, r0
        bool ipv6 = network_ready(*this, NETWORK_READY_TYPE_IPV6, nullptr);
   d4d4c:	4622      	mov	r2, r4
   d4d4e:	6868      	ldr	r0, [r5, #4]
   d4d50:	f7ff fb7a 	bl	d4448 <network_ready>
        for (auto cur = ai; cur != nullptr && !ok; cur = cur->ai_next) {
   d4d54:	9e00      	ldr	r6, [sp, #0]
        bool ipv6 = network_ready(*this, NETWORK_READY_TYPE_IPV6, nullptr);
   d4d56:	4681      	mov	r9, r0
        bool ok = false;
   d4d58:	4621      	mov	r1, r4
        for (auto cur = ai; cur != nullptr && !ok; cur = cur->ai_next) {
   d4d5a:	2e00      	cmp	r6, #0
   d4d5c:	d036      	beq.n	d4dcc <_ZN5spark12NetworkClass7resolveEPKc+0xc4>
   d4d5e:	2900      	cmp	r1, #0
   d4d60:	d134      	bne.n	d4dcc <_ZN5spark12NetworkClass7resolveEPKc+0xc4>
            // NOTE: using only the first entry that matches the current state of IPv4/IPv6 connectivity
            switch (cur->ai_family) {
   d4d62:	6873      	ldr	r3, [r6, #4]
   d4d64:	2b02      	cmp	r3, #2
   d4d66:	d003      	beq.n	d4d70 <_ZN5spark12NetworkClass7resolveEPKc+0x68>
   d4d68:	2b0a      	cmp	r3, #10
   d4d6a:	d00b      	beq.n	d4d84 <_ZN5spark12NetworkClass7resolveEPKc+0x7c>
        for (auto cur = ai; cur != nullptr && !ok; cur = cur->ai_next) {
   d4d6c:	69f6      	ldr	r6, [r6, #28]
   d4d6e:	e7f4      	b.n	d4d5a <_ZN5spark12NetworkClass7resolveEPKc+0x52>
                case AF_INET: {
                    if (!ipv4) {
   d4d70:	f1b8 0f00 	cmp.w	r8, #0
   d4d74:	d004      	beq.n	d4d80 <_ZN5spark12NetworkClass7resolveEPKc+0x78>
                        continue;
                    }
                    // NOTE: HAL_IPAddress is little-endian
                    auto in = (struct sockaddr_in*)cur->ai_addr;
                    addr = (const uint8_t*)(&in->sin_addr.s_addr);
   d4d76:	6971      	ldr	r1, [r6, #20]
   d4d78:	4638      	mov	r0, r7
   d4d7a:	3104      	adds	r1, #4
   d4d7c:	f7ff fe05 	bl	d498a <_ZN9IPAddressaSEPKh>
                    ok = true;
                    break;
   d4d80:	4641      	mov	r1, r8
   d4d82:	e7f3      	b.n	d4d6c <_ZN5spark12NetworkClass7resolveEPKc+0x64>
                }
                case AF_INET6: {
                    if (!ipv6) {
   d4d84:	f1b9 0f00 	cmp.w	r9, #0
   d4d88:	d101      	bne.n	d4d8e <_ZN5spark12NetworkClass7resolveEPKc+0x86>
                    auto in6 = (struct sockaddr_in6*)cur->ai_addr;
                    HAL_IPAddress a = {};
                    a.v = 6;
                    memcpy(a.ipv6, in6->sin6_addr.s6_addr, sizeof(a.ipv6));
                    addr = IPAddress(a);
                    ok = true;
   d4d8a:	4649      	mov	r1, r9
   d4d8c:	e7ee      	b.n	d4d6c <_ZN5spark12NetworkClass7resolveEPKc+0x64>
                    auto in6 = (struct sockaddr_in6*)cur->ai_addr;
   d4d8e:	6974      	ldr	r4, [r6, #20]
                    HAL_IPAddress a = {};
   d4d90:	2210      	movs	r2, #16
   d4d92:	a801      	add	r0, sp, #4
   d4d94:	f001 ffa4 	bl	d6ce0 <memset>
                    a.v = 6;
   d4d98:	2306      	movs	r3, #6
   d4d9a:	f88d 3014 	strb.w	r3, [sp, #20]
                    memcpy(a.ipv6, in6->sin6_addr.s6_addr, sizeof(a.ipv6));
   d4d9e:	ad01      	add	r5, sp, #4
   d4da0:	f104 0308 	add.w	r3, r4, #8
   d4da4:	3418      	adds	r4, #24
   d4da6:	6818      	ldr	r0, [r3, #0]
   d4da8:	6859      	ldr	r1, [r3, #4]
   d4daa:	462a      	mov	r2, r5
   d4dac:	c203      	stmia	r2!, {r0, r1}
   d4dae:	3308      	adds	r3, #8
   d4db0:	42a3      	cmp	r3, r4
   d4db2:	4615      	mov	r5, r2
   d4db4:	d1f7      	bne.n	d4da6 <_ZN5spark12NetworkClass7resolveEPKc+0x9e>
                    addr = IPAddress(a);
   d4db6:	a901      	add	r1, sp, #4
   d4db8:	a806      	add	r0, sp, #24
class IPAddress : public Printable {
   d4dba:	ad07      	add	r5, sp, #28
   d4dbc:	f7ff fdc6 	bl	d494c <_ZN9IPAddressC1ERK16_HAL_IPAddress_t>
   d4dc0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   d4dc2:	1d3c      	adds	r4, r7, #4
   d4dc4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   d4dc6:	682b      	ldr	r3, [r5, #0]
   d4dc8:	7023      	strb	r3, [r4, #0]
   d4dca:	e7de      	b.n	d4d8a <_ZN5spark12NetworkClass7resolveEPKc+0x82>
                    break;
                }
            }
        }
    }
    freeaddrinfo(ai);
   d4dcc:	9800      	ldr	r0, [sp, #0]
   d4dce:	f7ff f9ef 	bl	d41b0 <netdb_freeaddrinfo>
    return Cellular.resolve(name);
#endif // Wiring_Cellular

#endif // HAL_USE_INET_HAL_POSIX
    return addr;
}
   d4dd2:	4638      	mov	r0, r7
   d4dd4:	b015      	add	sp, #84	; 0x54
   d4dd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

000d4ddc <_GLOBAL__sub_I__ZN5spark7NetworkE>:
   d4ddc:	4b02      	ldr	r3, [pc, #8]	; (d4de8 <_GLOBAL__sub_I__ZN5spark7NetworkE+0xc>)
   d4dde:	4a03      	ldr	r2, [pc, #12]	; (d4dec <_GLOBAL__sub_I__ZN5spark7NetworkE+0x10>)
   d4de0:	601a      	str	r2, [r3, #0]
   d4de2:	2200      	movs	r2, #0
   d4de4:	605a      	str	r2, [r3, #4]

} // spark
   d4de6:	4770      	bx	lr
   d4de8:	2003e7c0 	.word	0x2003e7c0
   d4dec:	000d6e90 	.word	0x000d6e90

000d4df0 <pinAvailable>:
/*
 * @brief Perform safety check on desired pin to see if it's already
 * being used.  Return 0 if used, otherwise return 1 if available.
 */
bool pinAvailable(uint16_t pin) {
  if (pin >= TOTAL_PINS) {
   d4df0:	2823      	cmp	r0, #35	; 0x23
bool pinAvailable(uint16_t pin) {
   d4df2:	b513      	push	{r0, r1, r4, lr}
  if (pin >= TOTAL_PINS) {
   d4df4:	d902      	bls.n	d4dfc <pinAvailable+0xc>
    return false;
   d4df6:	2000      	movs	r0, #0
    return false; // 'pin' is used
  }
#endif

  return true; // 'pin' is available
}
   d4df8:	b002      	add	sp, #8
   d4dfa:	bd10      	pop	{r4, pc}
  if((pin == SCK || pin == MOSI || pin == MISO) && hal_spi_is_enabled(SPI.interface()) == true)
   d4dfc:	f1a0 030b 	sub.w	r3, r0, #11
   d4e00:	2b02      	cmp	r3, #2
   d4e02:	d81a      	bhi.n	d4e3a <pinAvailable+0x4a>

template <hal_spi_interface_t Interface>
class SpiProxy {
public:
    static SPIClass& instance() {
        static SPIClass instance(Interface);
   d4e04:	4c17      	ldr	r4, [pc, #92]	; (d4e64 <pinAvailable+0x74>)
   d4e06:	7821      	ldrb	r1, [r4, #0]
   d4e08:	f3bf 8f5b 	dmb	ish
   d4e0c:	f011 0101 	ands.w	r1, r1, #1
   d4e10:	d10b      	bne.n	d4e2a <pinAvailable+0x3a>
   d4e12:	4620      	mov	r0, r4
   d4e14:	9101      	str	r1, [sp, #4]
   d4e16:	f7ff f942 	bl	d409e <__cxa_guard_acquire>
   d4e1a:	9901      	ldr	r1, [sp, #4]
   d4e1c:	b128      	cbz	r0, d4e2a <pinAvailable+0x3a>
   d4e1e:	4812      	ldr	r0, [pc, #72]	; (d4e68 <pinAvailable+0x78>)
   d4e20:	f7ff fbb0 	bl	d4584 <_ZN8SPIClassC1E19hal_spi_interface_t>
   d4e24:	4620      	mov	r0, r4
   d4e26:	f7ff f93f 	bl	d40a8 <__cxa_guard_release>
   d4e2a:	4b0f      	ldr	r3, [pc, #60]	; (d4e68 <pinAvailable+0x78>)
   d4e2c:	7818      	ldrb	r0, [r3, #0]
   d4e2e:	f7ff fa97 	bl	d4360 <hal_spi_is_enabled>
   d4e32:	2800      	cmp	r0, #0
   d4e34:	d1df      	bne.n	d4df6 <pinAvailable+0x6>
  return true; // 'pin' is available
   d4e36:	2001      	movs	r0, #1
   d4e38:	e7de      	b.n	d4df8 <pinAvailable+0x8>
  if((pin == SCL || pin == SDA) && hal_i2c_is_enabled(Wire.interface(), nullptr) == true)
   d4e3a:	2801      	cmp	r0, #1
   d4e3c:	d809      	bhi.n	d4e52 <pinAvailable+0x62>
   d4e3e:	f000 f85b 	bl	d4ef8 <_Z19__fetch_global_Wirev>
   d4e42:	2100      	movs	r1, #0
   d4e44:	7c00      	ldrb	r0, [r0, #16]
   d4e46:	f7ff fa73 	bl	d4330 <hal_i2c_is_enabled>
  if((pin == RX || pin == TX) && hal_usart_is_enabled(Serial1.interface()) == true)
   d4e4a:	f080 0001 	eor.w	r0, r0, #1
   d4e4e:	b2c0      	uxtb	r0, r0
   d4e50:	e7d2      	b.n	d4df8 <pinAvailable+0x8>
   d4e52:	3809      	subs	r0, #9
   d4e54:	2801      	cmp	r0, #1
   d4e56:	d8ee      	bhi.n	d4e36 <pinAvailable+0x46>
   d4e58:	f7ff fe7c 	bl	d4b54 <_Z22__fetch_global_Serial1v>
   d4e5c:	7c00      	ldrb	r0, [r0, #16]
   d4e5e:	f7ff fa2f 	bl	d42c0 <hal_usart_is_enabled>
   d4e62:	e7f2      	b.n	d4e4a <pinAvailable+0x5a>
   d4e64:	2003e7c8 	.word	0x2003e7c8
   d4e68:	2003e7cc 	.word	0x2003e7cc

000d4e6c <pinMode>:
  if(pin >= TOTAL_PINS || setMode == PIN_MODE_NONE )
   d4e6c:	2823      	cmp	r0, #35	; 0x23
{
   d4e6e:	b538      	push	{r3, r4, r5, lr}
   d4e70:	4604      	mov	r4, r0
   d4e72:	460d      	mov	r5, r1
  if(pin >= TOTAL_PINS || setMode == PIN_MODE_NONE )
   d4e74:	d80a      	bhi.n	d4e8c <pinMode+0x20>
   d4e76:	29ff      	cmp	r1, #255	; 0xff
   d4e78:	d008      	beq.n	d4e8c <pinMode+0x20>
  if( !pinAvailable(pin) ) {
   d4e7a:	f7ff ffb9 	bl	d4df0 <pinAvailable>
   d4e7e:	b128      	cbz	r0, d4e8c <pinMode+0x20>
  HAL_Pin_Mode(pin, setMode);
   d4e80:	4629      	mov	r1, r5
   d4e82:	4620      	mov	r0, r4
}
   d4e84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_Pin_Mode(pin, setMode);
   d4e88:	f7ff b9aa 	b.w	d41e0 <HAL_Pin_Mode>
}
   d4e8c:	bd38      	pop	{r3, r4, r5, pc}

000d4e8e <_Z11analogWritetmm>:
/*
 * @brief Should take an integer 0-255 and create a PWM signal with a duty cycle from 0-100%
 * and frequency from 1 to 65535 Hz.
 */
void analogWrite(pin_t pin, uint32_t value, uint32_t pwm_frequency)
{
   d4e8e:	b570      	push	{r4, r5, r6, lr}
   d4e90:	4604      	mov	r4, r0
   d4e92:	460d      	mov	r5, r1
   d4e94:	4616      	mov	r6, r2
    // Safety check
    if (!pinAvailable(pin))
   d4e96:	f7ff ffab 	bl	d4df0 <pinAvailable>
   d4e9a:	b198      	cbz	r0, d4ec4 <_Z11analogWritetmm+0x36>
    {
        return;
    }

    if (HAL_Validate_Pin_Function(pin, PF_TIMER) == PF_TIMER)
   d4e9c:	2102      	movs	r1, #2
   d4e9e:	4620      	mov	r0, r4
   d4ea0:	f7ff f996 	bl	d41d0 <HAL_Validate_Pin_Function>
   d4ea4:	2802      	cmp	r0, #2
   d4ea6:	d10d      	bne.n	d4ec4 <_Z11analogWritetmm+0x36>
    {
        PinMode mode = HAL_Get_Pin_Mode(pin);
   d4ea8:	4620      	mov	r0, r4
   d4eaa:	f7ff f9a1 	bl	d41f0 <HAL_Get_Pin_Mode>

        if (mode != OUTPUT && mode != AF_OUTPUT_PUSHPULL)
   d4eae:	2801      	cmp	r0, #1
   d4eb0:	d001      	beq.n	d4eb6 <_Z11analogWritetmm+0x28>
   d4eb2:	2804      	cmp	r0, #4
   d4eb4:	d106      	bne.n	d4ec4 <_Z11analogWritetmm+0x36>
        {
            return;
        }

        hal_pwm_write_with_frequency_ext(pin, value, pwm_frequency);
   d4eb6:	4632      	mov	r2, r6
   d4eb8:	4629      	mov	r1, r5
   d4eba:	4620      	mov	r0, r4
    }
}
   d4ebc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        hal_pwm_write_with_frequency_ext(pin, value, pwm_frequency);
   d4ec0:	f7ff b99e 	b.w	d4200 <hal_pwm_write_with_frequency_ext>
}
   d4ec4:	bd70      	pop	{r4, r5, r6, pc}
	...

000d4ec8 <_Z17acquireWireBufferv>:
}

} // anonymous

hal_i2c_config_t __attribute__((weak)) acquireWireBuffer()
{
   d4ec8:	b538      	push	{r3, r4, r5, lr}
	hal_i2c_config_t config = {
   d4eca:	2300      	movs	r3, #0
   d4ecc:	2520      	movs	r5, #32
   d4ece:	8043      	strh	r3, [r0, #2]
   d4ed0:	2314      	movs	r3, #20
{
   d4ed2:	4604      	mov	r4, r0
	hal_i2c_config_t config = {
   d4ed4:	8003      	strh	r3, [r0, #0]
   d4ed6:	6085      	str	r5, [r0, #8]
   d4ed8:	6105      	str	r5, [r0, #16]
		.rx_buffer = new (std::nothrow) uint8_t[I2C_BUFFER_LENGTH],
   d4eda:	4906      	ldr	r1, [pc, #24]	; (d4ef4 <_Z17acquireWireBufferv+0x2c>)
   d4edc:	4628      	mov	r0, r5
   d4ede:	f000 f83a 	bl	d4f56 <_ZnajRKSt9nothrow_t>
		.tx_buffer = new (std::nothrow) uint8_t[I2C_BUFFER_LENGTH],
   d4ee2:	4904      	ldr	r1, [pc, #16]	; (d4ef4 <_Z17acquireWireBufferv+0x2c>)
	};
   d4ee4:	6060      	str	r0, [r4, #4]
		.tx_buffer = new (std::nothrow) uint8_t[I2C_BUFFER_LENGTH],
   d4ee6:	4628      	mov	r0, r5
   d4ee8:	f000 f835 	bl	d4f56 <_ZnajRKSt9nothrow_t>
	};
   d4eec:	60e0      	str	r0, [r4, #12]
	return defaultWireConfig();
}
   d4eee:	4620      	mov	r0, r4
   d4ef0:	bd38      	pop	{r3, r4, r5, pc}
   d4ef2:	bf00      	nop
   d4ef4:	000d6ebc 	.word	0x000d6ebc

000d4ef8 <_Z19__fetch_global_Wirev>:
	return defaultWireConfig();
}
#endif

TwoWire& __fetch_global_Wire()
{
   d4ef8:	b530      	push	{r4, r5, lr}
	static TwoWire wire(HAL_I2C_INTERFACE1, acquireWireBuffer());
   d4efa:	4d0f      	ldr	r5, [pc, #60]	; (d4f38 <_Z19__fetch_global_Wirev+0x40>)
   d4efc:	7829      	ldrb	r1, [r5, #0]
   d4efe:	f3bf 8f5b 	dmb	ish
   d4f02:	f011 0401 	ands.w	r4, r1, #1
{
   d4f06:	b087      	sub	sp, #28
	static TwoWire wire(HAL_I2C_INTERFACE1, acquireWireBuffer());
   d4f08:	d113      	bne.n	d4f32 <_Z19__fetch_global_Wirev+0x3a>
   d4f0a:	4628      	mov	r0, r5
   d4f0c:	f7ff f8c7 	bl	d409e <__cxa_guard_acquire>
   d4f10:	b178      	cbz	r0, d4f32 <_Z19__fetch_global_Wirev+0x3a>
   d4f12:	a801      	add	r0, sp, #4
   d4f14:	f7ff ffd8 	bl	d4ec8 <_Z17acquireWireBufferv>
   d4f18:	aa01      	add	r2, sp, #4
   d4f1a:	4621      	mov	r1, r4
   d4f1c:	4807      	ldr	r0, [pc, #28]	; (d4f3c <_Z19__fetch_global_Wirev+0x44>)
   d4f1e:	f7ff fe6f 	bl	d4c00 <_ZN7TwoWireC1E19hal_i2c_interface_tRK16hal_i2c_config_t>
   d4f22:	4628      	mov	r0, r5
   d4f24:	f7ff f8c0 	bl	d40a8 <__cxa_guard_release>
   d4f28:	4a05      	ldr	r2, [pc, #20]	; (d4f40 <_Z19__fetch_global_Wirev+0x48>)
   d4f2a:	4906      	ldr	r1, [pc, #24]	; (d4f44 <_Z19__fetch_global_Wirev+0x4c>)
   d4f2c:	4803      	ldr	r0, [pc, #12]	; (d4f3c <_Z19__fetch_global_Wirev+0x44>)
   d4f2e:	f000 f80b 	bl	d4f48 <__aeabi_atexit>
	return wire;
}
   d4f32:	4802      	ldr	r0, [pc, #8]	; (d4f3c <_Z19__fetch_global_Wirev+0x44>)
   d4f34:	b007      	add	sp, #28
   d4f36:	bd30      	pop	{r4, r5, pc}
   d4f38:	2003e7d8 	.word	0x2003e7d8
   d4f3c:	2003e7dc 	.word	0x2003e7dc
   d4f40:	2003e638 	.word	0x2003e638
   d4f44:	000d4ba9 	.word	0x000d4ba9

000d4f48 <__aeabi_atexit>:
   d4f48:	460b      	mov	r3, r1
   d4f4a:	4601      	mov	r1, r0
   d4f4c:	4618      	mov	r0, r3
   d4f4e:	f001 beab 	b.w	d6ca8 <__cxa_atexit>

000d4f52 <_ZdlPvj>:
   d4f52:	f7ff b8a2 	b.w	d409a <_ZdlPv>

000d4f56 <_ZnajRKSt9nothrow_t>:
   d4f56:	f7ff b89e 	b.w	d4096 <_Znaj>
   d4f5a:	0000      	movs	r0, r0
   d4f5c:	0000      	movs	r0, r0
	...

000d4f60 <sin>:
   d4f60:	b500      	push	{lr}
   d4f62:	ec51 0b10 	vmov	r0, r1, d0
   d4f66:	4a28      	ldr	r2, [pc, #160]	; (d5008 <sin+0xa8>)
   d4f68:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   d4f6c:	4293      	cmp	r3, r2
   d4f6e:	b085      	sub	sp, #20
   d4f70:	dd25      	ble.n	d4fbe <sin+0x5e>
   d4f72:	4a26      	ldr	r2, [pc, #152]	; (d500c <sin+0xac>)
   d4f74:	4293      	cmp	r3, r2
   d4f76:	dd09      	ble.n	d4f8c <sin+0x2c>
   d4f78:	ee10 2a10 	vmov	r2, s0
   d4f7c:	460b      	mov	r3, r1
   d4f7e:	f001 f9c9 	bl	d6314 <__aeabi_dsub>
   d4f82:	ec41 0b10 	vmov	d0, r0, r1
   d4f86:	b005      	add	sp, #20
   d4f88:	f85d fb04 	ldr.w	pc, [sp], #4
   d4f8c:	4668      	mov	r0, sp
   d4f8e:	f000 f83f 	bl	d5010 <__ieee754_rem_pio2>
   d4f92:	f000 0003 	and.w	r0, r0, #3
   d4f96:	2801      	cmp	r0, #1
   d4f98:	d019      	beq.n	d4fce <sin+0x6e>
   d4f9a:	2802      	cmp	r0, #2
   d4f9c:	d026      	beq.n	d4fec <sin+0x8c>
   d4f9e:	b1e8      	cbz	r0, d4fdc <sin+0x7c>
   d4fa0:	ed9d 1b02 	vldr	d1, [sp, #8]
   d4fa4:	ed9d 0b00 	vldr	d0, [sp]
   d4fa8:	f000 fa6a 	bl	d5480 <__kernel_cos>
   d4fac:	ec53 2b10 	vmov	r2, r3, d0
   d4fb0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
   d4fb4:	ee00 3a90 	vmov	s1, r3
   d4fb8:	b005      	add	sp, #20
   d4fba:	f85d fb04 	ldr.w	pc, [sp], #4
   d4fbe:	ed9f 1b10 	vldr	d1, [pc, #64]	; d5000 <sin+0xa0>
   d4fc2:	2000      	movs	r0, #0
   d4fc4:	f000 ffc4 	bl	d5f50 <__kernel_sin>
   d4fc8:	b005      	add	sp, #20
   d4fca:	f85d fb04 	ldr.w	pc, [sp], #4
   d4fce:	ed9d 1b02 	vldr	d1, [sp, #8]
   d4fd2:	ed9d 0b00 	vldr	d0, [sp]
   d4fd6:	f000 fa53 	bl	d5480 <__kernel_cos>
   d4fda:	e7d4      	b.n	d4f86 <sin+0x26>
   d4fdc:	ed9d 1b02 	vldr	d1, [sp, #8]
   d4fe0:	ed9d 0b00 	vldr	d0, [sp]
   d4fe4:	2001      	movs	r0, #1
   d4fe6:	f000 ffb3 	bl	d5f50 <__kernel_sin>
   d4fea:	e7cc      	b.n	d4f86 <sin+0x26>
   d4fec:	ed9d 1b02 	vldr	d1, [sp, #8]
   d4ff0:	ed9d 0b00 	vldr	d0, [sp]
   d4ff4:	2001      	movs	r0, #1
   d4ff6:	f000 ffab 	bl	d5f50 <__kernel_sin>
   d4ffa:	e7d7      	b.n	d4fac <sin+0x4c>
   d4ffc:	f3af 8000 	nop.w
	...
   d5008:	3fe921fb 	.word	0x3fe921fb
   d500c:	7fefffff 	.word	0x7fefffff

000d5010 <__ieee754_rem_pio2>:
   d5010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   d5014:	ec53 2b10 	vmov	r2, r3, d0
   d5018:	ed2d 8b04 	vpush	{d8-d9}
   d501c:	4992      	ldr	r1, [pc, #584]	; (d5268 <__ieee754_rem_pio2+0x258>)
   d501e:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
   d5022:	428d      	cmp	r5, r1
   d5024:	b089      	sub	sp, #36	; 0x24
   d5026:	4604      	mov	r4, r0
   d5028:	f340 808f 	ble.w	d514a <__ieee754_rem_pio2+0x13a>
   d502c:	498f      	ldr	r1, [pc, #572]	; (d526c <__ieee754_rem_pio2+0x25c>)
   d502e:	428d      	cmp	r5, r1
   d5030:	469b      	mov	fp, r3
   d5032:	dc2d      	bgt.n	d5090 <__ieee754_rem_pio2+0x80>
   d5034:	f1bb 0f00 	cmp.w	fp, #0
   d5038:	4619      	mov	r1, r3
   d503a:	ee10 0a10 	vmov	r0, s0
   d503e:	a380      	add	r3, pc, #512	; (adr r3, d5240 <__ieee754_rem_pio2+0x230>)
   d5040:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5044:	f340 81c7 	ble.w	d53d6 <__ieee754_rem_pio2+0x3c6>
   d5048:	f001 f964 	bl	d6314 <__aeabi_dsub>
   d504c:	4b88      	ldr	r3, [pc, #544]	; (d5270 <__ieee754_rem_pio2+0x260>)
   d504e:	429d      	cmp	r5, r3
   d5050:	4606      	mov	r6, r0
   d5052:	460f      	mov	r7, r1
   d5054:	f000 8091 	beq.w	d517a <__ieee754_rem_pio2+0x16a>
   d5058:	a37b      	add	r3, pc, #492	; (adr r3, d5248 <__ieee754_rem_pio2+0x238>)
   d505a:	e9d3 2300 	ldrd	r2, r3, [r3]
   d505e:	f001 f959 	bl	d6314 <__aeabi_dsub>
   d5062:	4602      	mov	r2, r0
   d5064:	460b      	mov	r3, r1
   d5066:	e9c4 2300 	strd	r2, r3, [r4]
   d506a:	4630      	mov	r0, r6
   d506c:	4639      	mov	r1, r7
   d506e:	f001 f951 	bl	d6314 <__aeabi_dsub>
   d5072:	a375      	add	r3, pc, #468	; (adr r3, d5248 <__ieee754_rem_pio2+0x238>)
   d5074:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5078:	f001 f94c 	bl	d6314 <__aeabi_dsub>
   d507c:	e9c4 0102 	strd	r0, r1, [r4, #8]
   d5080:	f04f 0a01 	mov.w	sl, #1
   d5084:	4650      	mov	r0, sl
   d5086:	b009      	add	sp, #36	; 0x24
   d5088:	ecbd 8b04 	vpop	{d8-d9}
   d508c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d5090:	4978      	ldr	r1, [pc, #480]	; (d5274 <__ieee754_rem_pio2+0x264>)
   d5092:	428d      	cmp	r5, r1
   d5094:	f340 8094 	ble.w	d51c0 <__ieee754_rem_pio2+0x1b0>
   d5098:	4977      	ldr	r1, [pc, #476]	; (d5278 <__ieee754_rem_pio2+0x268>)
   d509a:	428d      	cmp	r5, r1
   d509c:	ee10 0a10 	vmov	r0, s0
   d50a0:	dc61      	bgt.n	d5166 <__ieee754_rem_pio2+0x156>
   d50a2:	ea4f 5a25 	mov.w	sl, r5, asr #20
   d50a6:	f2aa 4a16 	subw	sl, sl, #1046	; 0x416
   d50aa:	eba5 510a 	sub.w	r1, r5, sl, lsl #20
   d50ae:	4616      	mov	r6, r2
   d50b0:	460f      	mov	r7, r1
   d50b2:	f001 fd81 	bl	d6bb8 <__aeabi_d2iz>
   d50b6:	f001 fa7b 	bl	d65b0 <__aeabi_i2d>
   d50ba:	4680      	mov	r8, r0
   d50bc:	4689      	mov	r9, r1
   d50be:	4630      	mov	r0, r6
   d50c0:	4639      	mov	r1, r7
   d50c2:	4642      	mov	r2, r8
   d50c4:	464b      	mov	r3, r9
   d50c6:	e9cd 8902 	strd	r8, r9, [sp, #8]
   d50ca:	f001 f923 	bl	d6314 <__aeabi_dsub>
   d50ce:	4b6b      	ldr	r3, [pc, #428]	; (d527c <__ieee754_rem_pio2+0x26c>)
   d50d0:	2200      	movs	r2, #0
   d50d2:	f001 fad7 	bl	d6684 <__aeabi_dmul>
   d50d6:	460f      	mov	r7, r1
   d50d8:	4606      	mov	r6, r0
   d50da:	f001 fd6d 	bl	d6bb8 <__aeabi_d2iz>
   d50de:	4605      	mov	r5, r0
   d50e0:	f001 fa66 	bl	d65b0 <__aeabi_i2d>
   d50e4:	4602      	mov	r2, r0
   d50e6:	460b      	mov	r3, r1
   d50e8:	4630      	mov	r0, r6
   d50ea:	4639      	mov	r1, r7
   d50ec:	e9cd 2304 	strd	r2, r3, [sp, #16]
   d50f0:	f001 f910 	bl	d6314 <__aeabi_dsub>
   d50f4:	4b61      	ldr	r3, [pc, #388]	; (d527c <__ieee754_rem_pio2+0x26c>)
   d50f6:	2200      	movs	r2, #0
   d50f8:	f001 fac4 	bl	d6684 <__aeabi_dmul>
   d50fc:	4602      	mov	r2, r0
   d50fe:	460b      	mov	r3, r1
   d5100:	e9cd 2306 	strd	r2, r3, [sp, #24]
   d5104:	2200      	movs	r2, #0
   d5106:	2300      	movs	r3, #0
   d5108:	f001 fd24 	bl	d6b54 <__aeabi_dcmpeq>
   d510c:	2800      	cmp	r0, #0
   d510e:	f000 8160 	beq.w	d53d2 <__ieee754_rem_pio2+0x3c2>
   d5112:	2d00      	cmp	r5, #0
   d5114:	bf0c      	ite	eq
   d5116:	2301      	moveq	r3, #1
   d5118:	2302      	movne	r3, #2
   d511a:	4a59      	ldr	r2, [pc, #356]	; (d5280 <__ieee754_rem_pio2+0x270>)
   d511c:	9201      	str	r2, [sp, #4]
   d511e:	2102      	movs	r1, #2
   d5120:	4652      	mov	r2, sl
   d5122:	9100      	str	r1, [sp, #0]
   d5124:	a802      	add	r0, sp, #8
   d5126:	4621      	mov	r1, r4
   d5128:	f000 faea 	bl	d5700 <__kernel_rem_pio2>
   d512c:	f1bb 0f00 	cmp.w	fp, #0
   d5130:	4682      	mov	sl, r0
   d5132:	daa7      	bge.n	d5084 <__ieee754_rem_pio2+0x74>
   d5134:	6862      	ldr	r2, [r4, #4]
   d5136:	68e3      	ldr	r3, [r4, #12]
   d5138:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
   d513c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
   d5140:	f1c0 0a00 	rsb	sl, r0, #0
   d5144:	6062      	str	r2, [r4, #4]
   d5146:	60e3      	str	r3, [r4, #12]
   d5148:	e79c      	b.n	d5084 <__ieee754_rem_pio2+0x74>
   d514a:	2000      	movs	r0, #0
   d514c:	2100      	movs	r1, #0
   d514e:	f04f 0a00 	mov.w	sl, #0
   d5152:	e9c4 0102 	strd	r0, r1, [r4, #8]
   d5156:	4650      	mov	r0, sl
   d5158:	ed84 0b00 	vstr	d0, [r4]
   d515c:	b009      	add	sp, #36	; 0x24
   d515e:	ecbd 8b04 	vpop	{d8-d9}
   d5162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d5166:	4619      	mov	r1, r3
   d5168:	f001 f8d4 	bl	d6314 <__aeabi_dsub>
   d516c:	f04f 0a00 	mov.w	sl, #0
   d5170:	e9c4 0102 	strd	r0, r1, [r4, #8]
   d5174:	e9c4 0100 	strd	r0, r1, [r4]
   d5178:	e784      	b.n	d5084 <__ieee754_rem_pio2+0x74>
   d517a:	a335      	add	r3, pc, #212	; (adr r3, d5250 <__ieee754_rem_pio2+0x240>)
   d517c:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5180:	f001 f8c8 	bl	d6314 <__aeabi_dsub>
   d5184:	a334      	add	r3, pc, #208	; (adr r3, d5258 <__ieee754_rem_pio2+0x248>)
   d5186:	e9d3 2300 	ldrd	r2, r3, [r3]
   d518a:	4606      	mov	r6, r0
   d518c:	460f      	mov	r7, r1
   d518e:	f001 f8c1 	bl	d6314 <__aeabi_dsub>
   d5192:	4602      	mov	r2, r0
   d5194:	460b      	mov	r3, r1
   d5196:	e9c4 2300 	strd	r2, r3, [r4]
   d519a:	4630      	mov	r0, r6
   d519c:	4639      	mov	r1, r7
   d519e:	f001 f8b9 	bl	d6314 <__aeabi_dsub>
   d51a2:	a32d      	add	r3, pc, #180	; (adr r3, d5258 <__ieee754_rem_pio2+0x248>)
   d51a4:	e9d3 2300 	ldrd	r2, r3, [r3]
   d51a8:	f001 f8b4 	bl	d6314 <__aeabi_dsub>
   d51ac:	f04f 0a01 	mov.w	sl, #1
   d51b0:	e9c4 0102 	strd	r0, r1, [r4, #8]
   d51b4:	4650      	mov	r0, sl
   d51b6:	b009      	add	sp, #36	; 0x24
   d51b8:	ecbd 8b04 	vpop	{d8-d9}
   d51bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d51c0:	f000 ff84 	bl	d60cc <fabs>
   d51c4:	ec57 6b10 	vmov	r6, r7, d0
   d51c8:	ee10 0a10 	vmov	r0, s0
   d51cc:	a324      	add	r3, pc, #144	; (adr r3, d5260 <__ieee754_rem_pio2+0x250>)
   d51ce:	e9d3 2300 	ldrd	r2, r3, [r3]
   d51d2:	4639      	mov	r1, r7
   d51d4:	f001 fa56 	bl	d6684 <__aeabi_dmul>
   d51d8:	4b2a      	ldr	r3, [pc, #168]	; (d5284 <__ieee754_rem_pio2+0x274>)
   d51da:	2200      	movs	r2, #0
   d51dc:	f001 f89c 	bl	d6318 <__adddf3>
   d51e0:	f001 fcea 	bl	d6bb8 <__aeabi_d2iz>
   d51e4:	4682      	mov	sl, r0
   d51e6:	f001 f9e3 	bl	d65b0 <__aeabi_i2d>
   d51ea:	a315      	add	r3, pc, #84	; (adr r3, d5240 <__ieee754_rem_pio2+0x230>)
   d51ec:	e9d3 2300 	ldrd	r2, r3, [r3]
   d51f0:	4680      	mov	r8, r0
   d51f2:	4689      	mov	r9, r1
   d51f4:	f001 fa46 	bl	d6684 <__aeabi_dmul>
   d51f8:	4602      	mov	r2, r0
   d51fa:	460b      	mov	r3, r1
   d51fc:	4630      	mov	r0, r6
   d51fe:	4639      	mov	r1, r7
   d5200:	f001 f888 	bl	d6314 <__aeabi_dsub>
   d5204:	a310      	add	r3, pc, #64	; (adr r3, d5248 <__ieee754_rem_pio2+0x238>)
   d5206:	e9d3 2300 	ldrd	r2, r3, [r3]
   d520a:	4606      	mov	r6, r0
   d520c:	460f      	mov	r7, r1
   d520e:	4640      	mov	r0, r8
   d5210:	4649      	mov	r1, r9
   d5212:	f001 fa37 	bl	d6684 <__aeabi_dmul>
   d5216:	f1ba 0f1f 	cmp.w	sl, #31
   d521a:	ec49 8b19 	vmov	d9, r8, r9
   d521e:	ec47 6b18 	vmov	d8, r6, r7
   d5222:	4680      	mov	r8, r0
   d5224:	4689      	mov	r9, r1
   d5226:	dc31      	bgt.n	d528c <__ieee754_rem_pio2+0x27c>
   d5228:	4b17      	ldr	r3, [pc, #92]	; (d5288 <__ieee754_rem_pio2+0x278>)
   d522a:	f10a 32ff 	add.w	r2, sl, #4294967295
   d522e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   d5232:	42ab      	cmp	r3, r5
   d5234:	d02a      	beq.n	d528c <__ieee754_rem_pio2+0x27c>
   d5236:	4602      	mov	r2, r0
   d5238:	460b      	mov	r3, r1
   d523a:	4630      	mov	r0, r6
   d523c:	4639      	mov	r1, r7
   d523e:	e0a4      	b.n	d538a <__ieee754_rem_pio2+0x37a>
   d5240:	54400000 	.word	0x54400000
   d5244:	3ff921fb 	.word	0x3ff921fb
   d5248:	1a626331 	.word	0x1a626331
   d524c:	3dd0b461 	.word	0x3dd0b461
   d5250:	1a600000 	.word	0x1a600000
   d5254:	3dd0b461 	.word	0x3dd0b461
   d5258:	2e037073 	.word	0x2e037073
   d525c:	3ba3198a 	.word	0x3ba3198a
   d5260:	6dc9c883 	.word	0x6dc9c883
   d5264:	3fe45f30 	.word	0x3fe45f30
   d5268:	3fe921fb 	.word	0x3fe921fb
   d526c:	4002d97b 	.word	0x4002d97b
   d5270:	3ff921fb 	.word	0x3ff921fb
   d5274:	413921fb 	.word	0x413921fb
   d5278:	7fefffff 	.word	0x7fefffff
   d527c:	41700000 	.word	0x41700000
   d5280:	000d6f40 	.word	0x000d6f40
   d5284:	3fe00000 	.word	0x3fe00000
   d5288:	000d6ec0 	.word	0x000d6ec0
   d528c:	4642      	mov	r2, r8
   d528e:	464b      	mov	r3, r9
   d5290:	ec51 0b18 	vmov	r0, r1, d8
   d5294:	f001 f83e 	bl	d6314 <__aeabi_dsub>
   d5298:	460a      	mov	r2, r1
   d529a:	f3c2 530a 	ubfx	r3, r2, #20, #11
   d529e:	ebc3 5315 	rsb	r3, r3, r5, lsr #20
   d52a2:	2b10      	cmp	r3, #16
   d52a4:	4601      	mov	r1, r0
   d52a6:	4606      	mov	r6, r0
   d52a8:	4617      	mov	r7, r2
   d52aa:	ea4f 5525 	mov.w	r5, r5, asr #20
   d52ae:	dd73      	ble.n	d5398 <__ieee754_rem_pio2+0x388>
   d52b0:	a369      	add	r3, pc, #420	; (adr r3, d5458 <__ieee754_rem_pio2+0x448>)
   d52b2:	e9d3 2300 	ldrd	r2, r3, [r3]
   d52b6:	ec51 0b19 	vmov	r0, r1, d9
   d52ba:	f001 f9e3 	bl	d6684 <__aeabi_dmul>
   d52be:	ec59 8b18 	vmov	r8, r9, d8
   d52c2:	4606      	mov	r6, r0
   d52c4:	460f      	mov	r7, r1
   d52c6:	4632      	mov	r2, r6
   d52c8:	463b      	mov	r3, r7
   d52ca:	ee18 0a10 	vmov	r0, s16
   d52ce:	4649      	mov	r1, r9
   d52d0:	f001 f820 	bl	d6314 <__aeabi_dsub>
   d52d4:	ec41 0b18 	vmov	d8, r0, r1
   d52d8:	4640      	mov	r0, r8
   d52da:	ec53 2b18 	vmov	r2, r3, d8
   d52de:	4649      	mov	r1, r9
   d52e0:	f001 f818 	bl	d6314 <__aeabi_dsub>
   d52e4:	4632      	mov	r2, r6
   d52e6:	463b      	mov	r3, r7
   d52e8:	f001 f814 	bl	d6314 <__aeabi_dsub>
   d52ec:	a35c      	add	r3, pc, #368	; (adr r3, d5460 <__ieee754_rem_pio2+0x450>)
   d52ee:	e9d3 2300 	ldrd	r2, r3, [r3]
   d52f2:	4606      	mov	r6, r0
   d52f4:	460f      	mov	r7, r1
   d52f6:	ec51 0b19 	vmov	r0, r1, d9
   d52fa:	f001 f9c3 	bl	d6684 <__aeabi_dmul>
   d52fe:	4632      	mov	r2, r6
   d5300:	463b      	mov	r3, r7
   d5302:	f001 f807 	bl	d6314 <__aeabi_dsub>
   d5306:	4680      	mov	r8, r0
   d5308:	4689      	mov	r9, r1
   d530a:	4642      	mov	r2, r8
   d530c:	464b      	mov	r3, r9
   d530e:	ec51 0b18 	vmov	r0, r1, d8
   d5312:	f000 ffff 	bl	d6314 <__aeabi_dsub>
   d5316:	460a      	mov	r2, r1
   d5318:	f3c2 530a 	ubfx	r3, r2, #20, #11
   d531c:	1aed      	subs	r5, r5, r3
   d531e:	2d31      	cmp	r5, #49	; 0x31
   d5320:	4601      	mov	r1, r0
   d5322:	4606      	mov	r6, r0
   d5324:	4617      	mov	r7, r2
   d5326:	dd37      	ble.n	d5398 <__ieee754_rem_pio2+0x388>
   d5328:	a350      	add	r3, pc, #320	; (adr r3, d546c <__ieee754_rem_pio2+0x45c>)
   d532a:	e9d3 2300 	ldrd	r2, r3, [r3]
   d532e:	ec51 0b19 	vmov	r0, r1, d9
   d5332:	f001 f9a7 	bl	d6684 <__aeabi_dmul>
   d5336:	ec56 5b18 	vmov	r5, r6, d8
   d533a:	4680      	mov	r8, r0
   d533c:	4689      	mov	r9, r1
   d533e:	4642      	mov	r2, r8
   d5340:	464b      	mov	r3, r9
   d5342:	ee18 0a10 	vmov	r0, s16
   d5346:	4631      	mov	r1, r6
   d5348:	f000 ffe4 	bl	d6314 <__aeabi_dsub>
   d534c:	ec41 0b18 	vmov	d8, r0, r1
   d5350:	4631      	mov	r1, r6
   d5352:	ec53 2b18 	vmov	r2, r3, d8
   d5356:	4628      	mov	r0, r5
   d5358:	f000 ffdc 	bl	d6314 <__aeabi_dsub>
   d535c:	4642      	mov	r2, r8
   d535e:	464b      	mov	r3, r9
   d5360:	f000 ffd8 	bl	d6314 <__aeabi_dsub>
   d5364:	a343      	add	r3, pc, #268	; (adr r3, d5474 <__ieee754_rem_pio2+0x464>)
   d5366:	e9d3 2300 	ldrd	r2, r3, [r3]
   d536a:	4606      	mov	r6, r0
   d536c:	460f      	mov	r7, r1
   d536e:	ec51 0b19 	vmov	r0, r1, d9
   d5372:	f001 f987 	bl	d6684 <__aeabi_dmul>
   d5376:	4632      	mov	r2, r6
   d5378:	463b      	mov	r3, r7
   d537a:	f000 ffcb 	bl	d6314 <__aeabi_dsub>
   d537e:	4680      	mov	r8, r0
   d5380:	4689      	mov	r9, r1
   d5382:	ec51 0b18 	vmov	r0, r1, d8
   d5386:	4642      	mov	r2, r8
   d5388:	464b      	mov	r3, r9
   d538a:	f000 ffc3 	bl	d6314 <__aeabi_dsub>
   d538e:	e9c4 0100 	strd	r0, r1, [r4]
   d5392:	4606      	mov	r6, r0
   d5394:	460f      	mov	r7, r1
   d5396:	e001      	b.n	d539c <__ieee754_rem_pio2+0x38c>
   d5398:	e9c4 1200 	strd	r1, r2, [r4]
   d539c:	4632      	mov	r2, r6
   d539e:	463b      	mov	r3, r7
   d53a0:	ec51 0b18 	vmov	r0, r1, d8
   d53a4:	f000 ffb6 	bl	d6314 <__aeabi_dsub>
   d53a8:	4642      	mov	r2, r8
   d53aa:	464b      	mov	r3, r9
   d53ac:	f000 ffb2 	bl	d6314 <__aeabi_dsub>
   d53b0:	f1bb 0f00 	cmp.w	fp, #0
   d53b4:	e9c4 0102 	strd	r0, r1, [r4, #8]
   d53b8:	f6bf ae64 	bge.w	d5084 <__ieee754_rem_pio2+0x74>
   d53bc:	f107 4500 	add.w	r5, r7, #2147483648	; 0x80000000
   d53c0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   d53c4:	e9c4 6500 	strd	r6, r5, [r4]
   d53c8:	e9c4 0302 	strd	r0, r3, [r4, #8]
   d53cc:	f1ca 0a00 	rsb	sl, sl, #0
   d53d0:	e658      	b.n	d5084 <__ieee754_rem_pio2+0x74>
   d53d2:	2303      	movs	r3, #3
   d53d4:	e6a1      	b.n	d511a <__ieee754_rem_pio2+0x10a>
   d53d6:	f000 ff9f 	bl	d6318 <__adddf3>
   d53da:	4b23      	ldr	r3, [pc, #140]	; (d5468 <__ieee754_rem_pio2+0x458>)
   d53dc:	429d      	cmp	r5, r3
   d53de:	4606      	mov	r6, r0
   d53e0:	460f      	mov	r7, r1
   d53e2:	d016      	beq.n	d5412 <__ieee754_rem_pio2+0x402>
   d53e4:	a31a      	add	r3, pc, #104	; (adr r3, d5450 <__ieee754_rem_pio2+0x440>)
   d53e6:	e9d3 2300 	ldrd	r2, r3, [r3]
   d53ea:	f000 ff95 	bl	d6318 <__adddf3>
   d53ee:	4602      	mov	r2, r0
   d53f0:	460b      	mov	r3, r1
   d53f2:	e9c4 2300 	strd	r2, r3, [r4]
   d53f6:	4630      	mov	r0, r6
   d53f8:	4639      	mov	r1, r7
   d53fa:	f000 ff8b 	bl	d6314 <__aeabi_dsub>
   d53fe:	a314      	add	r3, pc, #80	; (adr r3, d5450 <__ieee754_rem_pio2+0x440>)
   d5400:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5404:	f000 ff88 	bl	d6318 <__adddf3>
   d5408:	f04f 3aff 	mov.w	sl, #4294967295
   d540c:	e9c4 0102 	strd	r0, r1, [r4, #8]
   d5410:	e638      	b.n	d5084 <__ieee754_rem_pio2+0x74>
   d5412:	a311      	add	r3, pc, #68	; (adr r3, d5458 <__ieee754_rem_pio2+0x448>)
   d5414:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5418:	f000 ff7e 	bl	d6318 <__adddf3>
   d541c:	a310      	add	r3, pc, #64	; (adr r3, d5460 <__ieee754_rem_pio2+0x450>)
   d541e:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5422:	4606      	mov	r6, r0
   d5424:	460f      	mov	r7, r1
   d5426:	f000 ff77 	bl	d6318 <__adddf3>
   d542a:	4602      	mov	r2, r0
   d542c:	460b      	mov	r3, r1
   d542e:	e9c4 2300 	strd	r2, r3, [r4]
   d5432:	4630      	mov	r0, r6
   d5434:	4639      	mov	r1, r7
   d5436:	f000 ff6d 	bl	d6314 <__aeabi_dsub>
   d543a:	a309      	add	r3, pc, #36	; (adr r3, d5460 <__ieee754_rem_pio2+0x450>)
   d543c:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5440:	f000 ff6a 	bl	d6318 <__adddf3>
   d5444:	f04f 3aff 	mov.w	sl, #4294967295
   d5448:	e9c4 0102 	strd	r0, r1, [r4, #8]
   d544c:	e61a      	b.n	d5084 <__ieee754_rem_pio2+0x74>
   d544e:	bf00      	nop
   d5450:	1a626331 	.word	0x1a626331
   d5454:	3dd0b461 	.word	0x3dd0b461
   d5458:	1a600000 	.word	0x1a600000
   d545c:	3dd0b461 	.word	0x3dd0b461
   d5460:	2e037073 	.word	0x2e037073
   d5464:	3ba3198a 	.word	0x3ba3198a
   d5468:	3ff921fb 	.word	0x3ff921fb
   d546c:	2e000000 	.word	0x2e000000
   d5470:	3ba3198a 	.word	0x3ba3198a
   d5474:	252049c1 	.word	0x252049c1
   d5478:	397b839a 	.word	0x397b839a
   d547c:	00000000 	.word	0x00000000

000d5480 <__kernel_cos>:
   d5480:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   d5484:	ec57 6b10 	vmov	r6, r7, d0
   d5488:	f027 4900 	bic.w	r9, r7, #2147483648	; 0x80000000
   d548c:	f1b9 5f79 	cmp.w	r9, #1044381696	; 0x3e400000
   d5490:	ed2d 8b04 	vpush	{d8-d9}
   d5494:	ec5b ab11 	vmov	sl, fp, d1
   d5498:	da71      	bge.n	d557e <__kernel_cos+0xfe>
   d549a:	ee10 0a10 	vmov	r0, s0
   d549e:	4639      	mov	r1, r7
   d54a0:	f001 fb8a 	bl	d6bb8 <__aeabi_d2iz>
   d54a4:	2800      	cmp	r0, #0
   d54a6:	f000 80f6 	beq.w	d5696 <__kernel_cos+0x216>
   d54aa:	4632      	mov	r2, r6
   d54ac:	463b      	mov	r3, r7
   d54ae:	4630      	mov	r0, r6
   d54b0:	4639      	mov	r1, r7
   d54b2:	f001 f8e7 	bl	d6684 <__aeabi_dmul>
   d54b6:	a37c      	add	r3, pc, #496	; (adr r3, d56a8 <__kernel_cos+0x228>)
   d54b8:	e9d3 2300 	ldrd	r2, r3, [r3]
   d54bc:	4604      	mov	r4, r0
   d54be:	460d      	mov	r5, r1
   d54c0:	f001 f8e0 	bl	d6684 <__aeabi_dmul>
   d54c4:	a37a      	add	r3, pc, #488	; (adr r3, d56b0 <__kernel_cos+0x230>)
   d54c6:	e9d3 2300 	ldrd	r2, r3, [r3]
   d54ca:	f000 ff25 	bl	d6318 <__adddf3>
   d54ce:	4622      	mov	r2, r4
   d54d0:	462b      	mov	r3, r5
   d54d2:	f001 f8d7 	bl	d6684 <__aeabi_dmul>
   d54d6:	a378      	add	r3, pc, #480	; (adr r3, d56b8 <__kernel_cos+0x238>)
   d54d8:	e9d3 2300 	ldrd	r2, r3, [r3]
   d54dc:	f000 ff1a 	bl	d6314 <__aeabi_dsub>
   d54e0:	4622      	mov	r2, r4
   d54e2:	462b      	mov	r3, r5
   d54e4:	f001 f8ce 	bl	d6684 <__aeabi_dmul>
   d54e8:	a375      	add	r3, pc, #468	; (adr r3, d56c0 <__kernel_cos+0x240>)
   d54ea:	e9d3 2300 	ldrd	r2, r3, [r3]
   d54ee:	f000 ff13 	bl	d6318 <__adddf3>
   d54f2:	4622      	mov	r2, r4
   d54f4:	462b      	mov	r3, r5
   d54f6:	f001 f8c5 	bl	d6684 <__aeabi_dmul>
   d54fa:	a373      	add	r3, pc, #460	; (adr r3, d56c8 <__kernel_cos+0x248>)
   d54fc:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5500:	f000 ff08 	bl	d6314 <__aeabi_dsub>
   d5504:	4622      	mov	r2, r4
   d5506:	462b      	mov	r3, r5
   d5508:	f001 f8bc 	bl	d6684 <__aeabi_dmul>
   d550c:	a370      	add	r3, pc, #448	; (adr r3, d56d0 <__kernel_cos+0x250>)
   d550e:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5512:	f000 ff01 	bl	d6318 <__adddf3>
   d5516:	4622      	mov	r2, r4
   d5518:	462b      	mov	r3, r5
   d551a:	f001 f8b3 	bl	d6684 <__aeabi_dmul>
   d551e:	ec41 0b18 	vmov	d8, r0, r1
   d5522:	4b71      	ldr	r3, [pc, #452]	; (d56e8 <__kernel_cos+0x268>)
   d5524:	2200      	movs	r2, #0
   d5526:	4620      	mov	r0, r4
   d5528:	4629      	mov	r1, r5
   d552a:	f001 f8ab 	bl	d6684 <__aeabi_dmul>
   d552e:	ec53 2b18 	vmov	r2, r3, d8
   d5532:	4680      	mov	r8, r0
   d5534:	4689      	mov	r9, r1
   d5536:	4620      	mov	r0, r4
   d5538:	4629      	mov	r1, r5
   d553a:	f001 f8a3 	bl	d6684 <__aeabi_dmul>
   d553e:	4652      	mov	r2, sl
   d5540:	465b      	mov	r3, fp
   d5542:	4604      	mov	r4, r0
   d5544:	460d      	mov	r5, r1
   d5546:	4630      	mov	r0, r6
   d5548:	4639      	mov	r1, r7
   d554a:	f001 f89b 	bl	d6684 <__aeabi_dmul>
   d554e:	4602      	mov	r2, r0
   d5550:	460b      	mov	r3, r1
   d5552:	4620      	mov	r0, r4
   d5554:	4629      	mov	r1, r5
   d5556:	f000 fedd 	bl	d6314 <__aeabi_dsub>
   d555a:	4602      	mov	r2, r0
   d555c:	460b      	mov	r3, r1
   d555e:	4640      	mov	r0, r8
   d5560:	4649      	mov	r1, r9
   d5562:	f000 fed7 	bl	d6314 <__aeabi_dsub>
   d5566:	4602      	mov	r2, r0
   d5568:	460b      	mov	r3, r1
   d556a:	2000      	movs	r0, #0
   d556c:	495f      	ldr	r1, [pc, #380]	; (d56ec <__kernel_cos+0x26c>)
   d556e:	f000 fed1 	bl	d6314 <__aeabi_dsub>
   d5572:	ecbd 8b04 	vpop	{d8-d9}
   d5576:	ec41 0b10 	vmov	d0, r0, r1
   d557a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d557e:	ee10 2a10 	vmov	r2, s0
   d5582:	ee10 0a10 	vmov	r0, s0
   d5586:	463b      	mov	r3, r7
   d5588:	4639      	mov	r1, r7
   d558a:	f001 f87b 	bl	d6684 <__aeabi_dmul>
   d558e:	a346      	add	r3, pc, #280	; (adr r3, d56a8 <__kernel_cos+0x228>)
   d5590:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5594:	4604      	mov	r4, r0
   d5596:	460d      	mov	r5, r1
   d5598:	f001 f874 	bl	d6684 <__aeabi_dmul>
   d559c:	a344      	add	r3, pc, #272	; (adr r3, d56b0 <__kernel_cos+0x230>)
   d559e:	e9d3 2300 	ldrd	r2, r3, [r3]
   d55a2:	f000 feb9 	bl	d6318 <__adddf3>
   d55a6:	4622      	mov	r2, r4
   d55a8:	462b      	mov	r3, r5
   d55aa:	f001 f86b 	bl	d6684 <__aeabi_dmul>
   d55ae:	a342      	add	r3, pc, #264	; (adr r3, d56b8 <__kernel_cos+0x238>)
   d55b0:	e9d3 2300 	ldrd	r2, r3, [r3]
   d55b4:	f000 feae 	bl	d6314 <__aeabi_dsub>
   d55b8:	4622      	mov	r2, r4
   d55ba:	462b      	mov	r3, r5
   d55bc:	f001 f862 	bl	d6684 <__aeabi_dmul>
   d55c0:	a33f      	add	r3, pc, #252	; (adr r3, d56c0 <__kernel_cos+0x240>)
   d55c2:	e9d3 2300 	ldrd	r2, r3, [r3]
   d55c6:	f000 fea7 	bl	d6318 <__adddf3>
   d55ca:	4622      	mov	r2, r4
   d55cc:	462b      	mov	r3, r5
   d55ce:	f001 f859 	bl	d6684 <__aeabi_dmul>
   d55d2:	a33d      	add	r3, pc, #244	; (adr r3, d56c8 <__kernel_cos+0x248>)
   d55d4:	e9d3 2300 	ldrd	r2, r3, [r3]
   d55d8:	f000 fe9c 	bl	d6314 <__aeabi_dsub>
   d55dc:	4622      	mov	r2, r4
   d55de:	462b      	mov	r3, r5
   d55e0:	f001 f850 	bl	d6684 <__aeabi_dmul>
   d55e4:	a33a      	add	r3, pc, #232	; (adr r3, d56d0 <__kernel_cos+0x250>)
   d55e6:	e9d3 2300 	ldrd	r2, r3, [r3]
   d55ea:	f000 fe95 	bl	d6318 <__adddf3>
   d55ee:	462b      	mov	r3, r5
   d55f0:	4622      	mov	r2, r4
   d55f2:	f001 f847 	bl	d6684 <__aeabi_dmul>
   d55f6:	4b3e      	ldr	r3, [pc, #248]	; (d56f0 <__kernel_cos+0x270>)
   d55f8:	4599      	cmp	r9, r3
   d55fa:	ec41 0b18 	vmov	d8, r0, r1
   d55fe:	dd90      	ble.n	d5522 <__kernel_cos+0xa2>
   d5600:	4b3c      	ldr	r3, [pc, #240]	; (d56f4 <__kernel_cos+0x274>)
   d5602:	4599      	cmp	r9, r3
   d5604:	dc3c      	bgt.n	d5680 <__kernel_cos+0x200>
   d5606:	2200      	movs	r2, #0
   d5608:	f5a9 1300 	sub.w	r3, r9, #2097152	; 0x200000
   d560c:	4937      	ldr	r1, [pc, #220]	; (d56ec <__kernel_cos+0x26c>)
   d560e:	2000      	movs	r0, #0
   d5610:	4690      	mov	r8, r2
   d5612:	4699      	mov	r9, r3
   d5614:	f000 fe7e 	bl	d6314 <__aeabi_dsub>
   d5618:	ec41 0b19 	vmov	d9, r0, r1
   d561c:	4b32      	ldr	r3, [pc, #200]	; (d56e8 <__kernel_cos+0x268>)
   d561e:	2200      	movs	r2, #0
   d5620:	4620      	mov	r0, r4
   d5622:	4629      	mov	r1, r5
   d5624:	f001 f82e 	bl	d6684 <__aeabi_dmul>
   d5628:	4642      	mov	r2, r8
   d562a:	464b      	mov	r3, r9
   d562c:	f000 fe72 	bl	d6314 <__aeabi_dsub>
   d5630:	ec53 2b18 	vmov	r2, r3, d8
   d5634:	4680      	mov	r8, r0
   d5636:	4689      	mov	r9, r1
   d5638:	4620      	mov	r0, r4
   d563a:	4629      	mov	r1, r5
   d563c:	f001 f822 	bl	d6684 <__aeabi_dmul>
   d5640:	4652      	mov	r2, sl
   d5642:	465b      	mov	r3, fp
   d5644:	4604      	mov	r4, r0
   d5646:	460d      	mov	r5, r1
   d5648:	4630      	mov	r0, r6
   d564a:	4639      	mov	r1, r7
   d564c:	f001 f81a 	bl	d6684 <__aeabi_dmul>
   d5650:	4602      	mov	r2, r0
   d5652:	460b      	mov	r3, r1
   d5654:	4620      	mov	r0, r4
   d5656:	4629      	mov	r1, r5
   d5658:	f000 fe5c 	bl	d6314 <__aeabi_dsub>
   d565c:	4602      	mov	r2, r0
   d565e:	460b      	mov	r3, r1
   d5660:	4640      	mov	r0, r8
   d5662:	4649      	mov	r1, r9
   d5664:	f000 fe56 	bl	d6314 <__aeabi_dsub>
   d5668:	4602      	mov	r2, r0
   d566a:	460b      	mov	r3, r1
   d566c:	ec51 0b19 	vmov	r0, r1, d9
   d5670:	f000 fe50 	bl	d6314 <__aeabi_dsub>
   d5674:	ecbd 8b04 	vpop	{d8-d9}
   d5678:	ec41 0b10 	vmov	d0, r0, r1
   d567c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d5680:	ed9f 7b15 	vldr	d7, [pc, #84]	; d56d8 <__kernel_cos+0x258>
   d5684:	f8df 9070 	ldr.w	r9, [pc, #112]	; d56f8 <__kernel_cos+0x278>
   d5688:	eeb0 9a47 	vmov.f32	s18, s14
   d568c:	eef0 9a67 	vmov.f32	s19, s15
   d5690:	f04f 0800 	mov.w	r8, #0
   d5694:	e7c2      	b.n	d561c <__kernel_cos+0x19c>
   d5696:	ecbd 8b04 	vpop	{d8-d9}
   d569a:	ed9f 0b11 	vldr	d0, [pc, #68]	; d56e0 <__kernel_cos+0x260>
   d569e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d56a2:	bf00      	nop
   d56a4:	f3af 8000 	nop.w
   d56a8:	be8838d4 	.word	0xbe8838d4
   d56ac:	bda8fae9 	.word	0xbda8fae9
   d56b0:	bdb4b1c4 	.word	0xbdb4b1c4
   d56b4:	3e21ee9e 	.word	0x3e21ee9e
   d56b8:	809c52ad 	.word	0x809c52ad
   d56bc:	3e927e4f 	.word	0x3e927e4f
   d56c0:	19cb1590 	.word	0x19cb1590
   d56c4:	3efa01a0 	.word	0x3efa01a0
   d56c8:	16c15177 	.word	0x16c15177
   d56cc:	3f56c16c 	.word	0x3f56c16c
   d56d0:	5555554c 	.word	0x5555554c
   d56d4:	3fa55555 	.word	0x3fa55555
   d56d8:	00000000 	.word	0x00000000
   d56dc:	3fe70000 	.word	0x3fe70000
   d56e0:	00000000 	.word	0x00000000
   d56e4:	3ff00000 	.word	0x3ff00000
   d56e8:	3fe00000 	.word	0x3fe00000
   d56ec:	3ff00000 	.word	0x3ff00000
   d56f0:	3fd33332 	.word	0x3fd33332
   d56f4:	3fe90000 	.word	0x3fe90000
   d56f8:	3fd20000 	.word	0x3fd20000
   d56fc:	00000000 	.word	0x00000000

000d5700 <__kernel_rem_pio2>:
   d5700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   d5704:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
   d5708:	4cbb      	ldr	r4, [pc, #748]	; (d59f8 <__kernel_rem_pio2+0x2f8>)
   d570a:	9da2      	ldr	r5, [sp, #648]	; 0x288
   d570c:	9308      	str	r3, [sp, #32]
   d570e:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
   d5712:	9405      	str	r4, [sp, #20]
   d5714:	3b01      	subs	r3, #1
   d5716:	f112 0f14 	cmn.w	r2, #20
   d571a:	9004      	str	r0, [sp, #16]
   d571c:	910b      	str	r1, [sp, #44]	; 0x2c
   d571e:	9303      	str	r3, [sp, #12]
   d5720:	f2c0 8326 	blt.w	d5d70 <__kernel_rem_pio2+0x670>
   d5724:	49b5      	ldr	r1, [pc, #724]	; (d59fc <__kernel_rem_pio2+0x2fc>)
   d5726:	1ed3      	subs	r3, r2, #3
   d5728:	fb81 0103 	smull	r0, r1, r1, r3
   d572c:	17db      	asrs	r3, r3, #31
   d572e:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
   d5732:	9307      	str	r3, [sp, #28]
   d5734:	3301      	adds	r3, #1
   d5736:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
   d573a:	00db      	lsls	r3, r3, #3
   d573c:	18d3      	adds	r3, r2, r3
   d573e:	9306      	str	r3, [sp, #24]
   d5740:	9a07      	ldr	r2, [sp, #28]
   d5742:	9b03      	ldr	r3, [sp, #12]
   d5744:	1ad4      	subs	r4, r2, r3
   d5746:	9a05      	ldr	r2, [sp, #20]
   d5748:	18d6      	adds	r6, r2, r3
   d574a:	d41a      	bmi.n	d5782 <__kernel_rem_pio2+0x82>
   d574c:	3601      	adds	r6, #1
   d574e:	9fa3      	ldr	r7, [sp, #652]	; 0x28c
   d5750:	f04f 0800 	mov.w	r8, #0
   d5754:	f04f 0900 	mov.w	r9, #0
   d5758:	4426      	add	r6, r4
   d575a:	ad20      	add	r5, sp, #128	; 0x80
   d575c:	e008      	b.n	d5770 <__kernel_rem_pio2+0x70>
   d575e:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
   d5762:	f000 ff25 	bl	d65b0 <__aeabi_i2d>
   d5766:	3401      	adds	r4, #1
   d5768:	42b4      	cmp	r4, r6
   d576a:	e8e5 0102 	strd	r0, r1, [r5], #8
   d576e:	d008      	beq.n	d5782 <__kernel_rem_pio2+0x82>
   d5770:	2c00      	cmp	r4, #0
   d5772:	daf4      	bge.n	d575e <__kernel_rem_pio2+0x5e>
   d5774:	3401      	adds	r4, #1
   d5776:	4640      	mov	r0, r8
   d5778:	4649      	mov	r1, r9
   d577a:	42b4      	cmp	r4, r6
   d577c:	e8e5 0102 	strd	r0, r1, [r5], #8
   d5780:	d1f6      	bne.n	d5770 <__kernel_rem_pio2+0x70>
   d5782:	9b05      	ldr	r3, [sp, #20]
   d5784:	2b00      	cmp	r3, #0
   d5786:	f2c0 83c8 	blt.w	d5f1a <__kernel_rem_pio2+0x81a>
   d578a:	9b08      	ldr	r3, [sp, #32]
   d578c:	f8dd 900c 	ldr.w	r9, [sp, #12]
   d5790:	00da      	lsls	r2, r3, #3
   d5792:	9202      	str	r2, [sp, #8]
   d5794:	9a05      	ldr	r2, [sp, #20]
   d5796:	441a      	add	r2, r3
   d5798:	9201      	str	r2, [sp, #4]
   d579a:	9a04      	ldr	r2, [sp, #16]
   d579c:	a920      	add	r1, sp, #128	; 0x80
   d579e:	eb01 0ac3 	add.w	sl, r1, r3, lsl #3
   d57a2:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
   d57a6:	eb02 08c3 	add.w	r8, r2, r3, lsl #3
   d57aa:	9b03      	ldr	r3, [sp, #12]
   d57ac:	2b00      	cmp	r3, #0
   d57ae:	f04f 0400 	mov.w	r4, #0
   d57b2:	f04f 0500 	mov.w	r5, #0
   d57b6:	db11      	blt.n	d57dc <__kernel_rem_pio2+0xdc>
   d57b8:	9e04      	ldr	r6, [sp, #16]
   d57ba:	4657      	mov	r7, sl
   d57bc:	e977 2302 	ldrd	r2, r3, [r7, #-8]!
   d57c0:	e8f6 0102 	ldrd	r0, r1, [r6], #8
   d57c4:	f000 ff5e 	bl	d6684 <__aeabi_dmul>
   d57c8:	4602      	mov	r2, r0
   d57ca:	460b      	mov	r3, r1
   d57cc:	4620      	mov	r0, r4
   d57ce:	4629      	mov	r1, r5
   d57d0:	f000 fda2 	bl	d6318 <__adddf3>
   d57d4:	4546      	cmp	r6, r8
   d57d6:	4604      	mov	r4, r0
   d57d8:	460d      	mov	r5, r1
   d57da:	d1ef      	bne.n	d57bc <__kernel_rem_pio2+0xbc>
   d57dc:	9b01      	ldr	r3, [sp, #4]
   d57de:	f109 0901 	add.w	r9, r9, #1
   d57e2:	4599      	cmp	r9, r3
   d57e4:	e8eb 4502 	strd	r4, r5, [fp], #8
   d57e8:	f10a 0a08 	add.w	sl, sl, #8
   d57ec:	d1dd      	bne.n	d57aa <__kernel_rem_pio2+0xaa>
   d57ee:	9a05      	ldr	r2, [sp, #20]
   d57f0:	9804      	ldr	r0, [sp, #16]
   d57f2:	a90c      	add	r1, sp, #48	; 0x30
   d57f4:	eb01 0382 	add.w	r3, r1, r2, lsl #2
   d57f8:	9902      	ldr	r1, [sp, #8]
   d57fa:	4401      	add	r1, r0
   d57fc:	3b08      	subs	r3, #8
   d57fe:	468b      	mov	fp, r1
   d5800:	a90b      	add	r1, sp, #44	; 0x2c
   d5802:	9309      	str	r3, [sp, #36]	; 0x24
   d5804:	4613      	mov	r3, r2
   d5806:	eb01 0282 	add.w	r2, r1, r2, lsl #2
   d580a:	920a      	str	r2, [sp, #40]	; 0x28
   d580c:	9301      	str	r3, [sp, #4]
   d580e:	9a01      	ldr	r2, [sp, #4]
   d5810:	a998      	add	r1, sp, #608	; 0x260
   d5812:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
   d5816:	2a00      	cmp	r2, #0
   d5818:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
   d581c:	dd2a      	ble.n	d5874 <__kernel_rem_pio2+0x174>
   d581e:	f50d 79e0 	add.w	r9, sp, #448	; 0x1c0
   d5822:	eb09 08c2 	add.w	r8, r9, r2, lsl #3
   d5826:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
   d582a:	4b75      	ldr	r3, [pc, #468]	; (d5a00 <__kernel_rem_pio2+0x300>)
   d582c:	2200      	movs	r2, #0
   d582e:	4620      	mov	r0, r4
   d5830:	4629      	mov	r1, r5
   d5832:	f000 ff27 	bl	d6684 <__aeabi_dmul>
   d5836:	f001 f9bf 	bl	d6bb8 <__aeabi_d2iz>
   d583a:	f000 feb9 	bl	d65b0 <__aeabi_i2d>
   d583e:	4b71      	ldr	r3, [pc, #452]	; (d5a04 <__kernel_rem_pio2+0x304>)
   d5840:	2200      	movs	r2, #0
   d5842:	4606      	mov	r6, r0
   d5844:	460f      	mov	r7, r1
   d5846:	f000 ff1d 	bl	d6684 <__aeabi_dmul>
   d584a:	4602      	mov	r2, r0
   d584c:	460b      	mov	r3, r1
   d584e:	4620      	mov	r0, r4
   d5850:	4629      	mov	r1, r5
   d5852:	f000 fd5f 	bl	d6314 <__aeabi_dsub>
   d5856:	f001 f9af 	bl	d6bb8 <__aeabi_d2iz>
   d585a:	4604      	mov	r4, r0
   d585c:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
   d5860:	f84a 4b04 	str.w	r4, [sl], #4
   d5864:	4630      	mov	r0, r6
   d5866:	4639      	mov	r1, r7
   d5868:	f000 fd56 	bl	d6318 <__adddf3>
   d586c:	45c8      	cmp	r8, r9
   d586e:	4604      	mov	r4, r0
   d5870:	460d      	mov	r5, r1
   d5872:	d1da      	bne.n	d582a <__kernel_rem_pio2+0x12a>
   d5874:	f8dd 9018 	ldr.w	r9, [sp, #24]
   d5878:	ec45 4b10 	vmov	d0, r4, r5
   d587c:	4648      	mov	r0, r9
   d587e:	f000 fcb3 	bl	d61e8 <scalbn>
   d5882:	ec55 4b10 	vmov	r4, r5, d0
   d5886:	2200      	movs	r2, #0
   d5888:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   d588c:	ee10 0a10 	vmov	r0, s0
   d5890:	4629      	mov	r1, r5
   d5892:	f000 fef7 	bl	d6684 <__aeabi_dmul>
   d5896:	ec41 0b10 	vmov	d0, r0, r1
   d589a:	f000 fc21 	bl	d60e0 <floor>
   d589e:	4b5a      	ldr	r3, [pc, #360]	; (d5a08 <__kernel_rem_pio2+0x308>)
   d58a0:	ec51 0b10 	vmov	r0, r1, d0
   d58a4:	2200      	movs	r2, #0
   d58a6:	f000 feed 	bl	d6684 <__aeabi_dmul>
   d58aa:	4602      	mov	r2, r0
   d58ac:	460b      	mov	r3, r1
   d58ae:	4620      	mov	r0, r4
   d58b0:	4629      	mov	r1, r5
   d58b2:	f000 fd2f 	bl	d6314 <__aeabi_dsub>
   d58b6:	460d      	mov	r5, r1
   d58b8:	4604      	mov	r4, r0
   d58ba:	f001 f97d 	bl	d6bb8 <__aeabi_d2iz>
   d58be:	4680      	mov	r8, r0
   d58c0:	f000 fe76 	bl	d65b0 <__aeabi_i2d>
   d58c4:	460b      	mov	r3, r1
   d58c6:	4602      	mov	r2, r0
   d58c8:	4629      	mov	r1, r5
   d58ca:	4620      	mov	r0, r4
   d58cc:	f000 fd22 	bl	d6314 <__aeabi_dsub>
   d58d0:	464b      	mov	r3, r9
   d58d2:	2b00      	cmp	r3, #0
   d58d4:	4606      	mov	r6, r0
   d58d6:	460f      	mov	r7, r1
   d58d8:	f340 8098 	ble.w	d5a0c <__kernel_rem_pio2+0x30c>
   d58dc:	9a01      	ldr	r2, [sp, #4]
   d58de:	a90c      	add	r1, sp, #48	; 0x30
   d58e0:	3a01      	subs	r2, #1
   d58e2:	f1c9 0318 	rsb	r3, r9, #24
   d58e6:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
   d58ea:	fa45 f103 	asr.w	r1, r5, r3
   d58ee:	fa01 f303 	lsl.w	r3, r1, r3
   d58f2:	1aeb      	subs	r3, r5, r3
   d58f4:	f1c9 0517 	rsb	r5, r9, #23
   d58f8:	a80c      	add	r0, sp, #48	; 0x30
   d58fa:	fa43 f505 	asr.w	r5, r3, r5
   d58fe:	2d00      	cmp	r5, #0
   d5900:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
   d5904:	4488      	add	r8, r1
   d5906:	f300 808b 	bgt.w	d5a20 <__kernel_rem_pio2+0x320>
   d590a:	2200      	movs	r2, #0
   d590c:	2300      	movs	r3, #0
   d590e:	4630      	mov	r0, r6
   d5910:	4639      	mov	r1, r7
   d5912:	f001 f91f 	bl	d6b54 <__aeabi_dcmpeq>
   d5916:	2800      	cmp	r0, #0
   d5918:	f000 8256 	beq.w	d5dc8 <__kernel_rem_pio2+0x6c8>
   d591c:	9b01      	ldr	r3, [sp, #4]
   d591e:	9a05      	ldr	r2, [sp, #20]
   d5920:	f103 3aff 	add.w	sl, r3, #4294967295
   d5924:	4552      	cmp	r2, sl
   d5926:	dc10      	bgt.n	d594a <__kernel_rem_pio2+0x24a>
   d5928:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
   d592c:	aa0c      	add	r2, sp, #48	; 0x30
   d592e:	3b01      	subs	r3, #1
   d5930:	980a      	ldr	r0, [sp, #40]	; 0x28
   d5932:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   d5936:	2200      	movs	r2, #0
   d5938:	f853 1904 	ldr.w	r1, [r3], #-4
   d593c:	4283      	cmp	r3, r0
   d593e:	ea42 0201 	orr.w	r2, r2, r1
   d5942:	d1f9      	bne.n	d5938 <__kernel_rem_pio2+0x238>
   d5944:	2a00      	cmp	r2, #0
   d5946:	f040 80dc 	bne.w	d5b02 <__kernel_rem_pio2+0x402>
   d594a:	9b05      	ldr	r3, [sp, #20]
   d594c:	aa0c      	add	r2, sp, #48	; 0x30
   d594e:	3b01      	subs	r3, #1
   d5950:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   d5954:	2b00      	cmp	r3, #0
   d5956:	f040 80cf 	bne.w	d5af8 <__kernel_rem_pio2+0x3f8>
   d595a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   d595c:	2301      	movs	r3, #1
   d595e:	f852 1904 	ldr.w	r1, [r2], #-4
   d5962:	3301      	adds	r3, #1
   d5964:	2900      	cmp	r1, #0
   d5966:	d0fa      	beq.n	d595e <__kernel_rem_pio2+0x25e>
   d5968:	9901      	ldr	r1, [sp, #4]
   d596a:	1c4a      	adds	r2, r1, #1
   d596c:	18cb      	adds	r3, r1, r3
   d596e:	9302      	str	r3, [sp, #8]
   d5970:	4691      	mov	r9, r2
   d5972:	9b07      	ldr	r3, [sp, #28]
   d5974:	9908      	ldr	r1, [sp, #32]
   d5976:	eb02 0a03 	add.w	sl, r2, r3
   d597a:	9b01      	ldr	r3, [sp, #4]
   d597c:	440b      	add	r3, r1
   d597e:	4698      	mov	r8, r3
   d5980:	ab20      	add	r3, sp, #128	; 0x80
   d5982:	f10a 4a80 	add.w	sl, sl, #1073741824	; 0x40000000
   d5986:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
   d598a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   d598c:	f10a 3aff 	add.w	sl, sl, #4294967295
   d5990:	eb03 0a8a 	add.w	sl, r3, sl, lsl #2
   d5994:	ab70      	add	r3, sp, #448	; 0x1c0
   d5996:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   d599a:	9301      	str	r3, [sp, #4]
   d599c:	f85a 0f04 	ldr.w	r0, [sl, #4]!
   d59a0:	f000 fe06 	bl	d65b0 <__aeabi_i2d>
   d59a4:	460b      	mov	r3, r1
   d59a6:	9903      	ldr	r1, [sp, #12]
   d59a8:	4602      	mov	r2, r0
   d59aa:	2900      	cmp	r1, #0
   d59ac:	e9c8 2300 	strd	r2, r3, [r8]
   d59b0:	4647      	mov	r7, r8
   d59b2:	f04f 0400 	mov.w	r4, #0
   d59b6:	f108 0808 	add.w	r8, r8, #8
   d59ba:	f04f 0500 	mov.w	r5, #0
   d59be:	db11      	blt.n	d59e4 <__kernel_rem_pio2+0x2e4>
   d59c0:	9e04      	ldr	r6, [sp, #16]
   d59c2:	e001      	b.n	d59c8 <__kernel_rem_pio2+0x2c8>
   d59c4:	e977 2302 	ldrd	r2, r3, [r7, #-8]!
   d59c8:	e8f6 0102 	ldrd	r0, r1, [r6], #8
   d59cc:	f000 fe5a 	bl	d6684 <__aeabi_dmul>
   d59d0:	4602      	mov	r2, r0
   d59d2:	460b      	mov	r3, r1
   d59d4:	4620      	mov	r0, r4
   d59d6:	4629      	mov	r1, r5
   d59d8:	f000 fc9e 	bl	d6318 <__adddf3>
   d59dc:	455e      	cmp	r6, fp
   d59de:	4604      	mov	r4, r0
   d59e0:	460d      	mov	r5, r1
   d59e2:	d1ef      	bne.n	d59c4 <__kernel_rem_pio2+0x2c4>
   d59e4:	9b01      	ldr	r3, [sp, #4]
   d59e6:	e8e3 4502 	strd	r4, r5, [r3], #8
   d59ea:	9301      	str	r3, [sp, #4]
   d59ec:	9b02      	ldr	r3, [sp, #8]
   d59ee:	f109 0901 	add.w	r9, r9, #1
   d59f2:	4599      	cmp	r9, r3
   d59f4:	ddd2      	ble.n	d599c <__kernel_rem_pio2+0x29c>
   d59f6:	e709      	b.n	d580c <__kernel_rem_pio2+0x10c>
   d59f8:	000d7088 	.word	0x000d7088
   d59fc:	2aaaaaab 	.word	0x2aaaaaab
   d5a00:	3e700000 	.word	0x3e700000
   d5a04:	41700000 	.word	0x41700000
   d5a08:	40200000 	.word	0x40200000
   d5a0c:	d16b      	bne.n	d5ae6 <__kernel_rem_pio2+0x3e6>
   d5a0e:	9b01      	ldr	r3, [sp, #4]
   d5a10:	aa0c      	add	r2, sp, #48	; 0x30
   d5a12:	3b01      	subs	r3, #1
   d5a14:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
   d5a18:	15ed      	asrs	r5, r5, #23
   d5a1a:	2d00      	cmp	r5, #0
   d5a1c:	f77f af75 	ble.w	d590a <__kernel_rem_pio2+0x20a>
   d5a20:	9b01      	ldr	r3, [sp, #4]
   d5a22:	2b00      	cmp	r3, #0
   d5a24:	f108 0801 	add.w	r8, r8, #1
   d5a28:	f340 81cc 	ble.w	d5dc4 <__kernel_rem_pio2+0x6c4>
   d5a2c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   d5a2e:	2c00      	cmp	r4, #0
   d5a30:	d151      	bne.n	d5ad6 <__kernel_rem_pio2+0x3d6>
   d5a32:	9b01      	ldr	r3, [sp, #4]
   d5a34:	2b01      	cmp	r3, #1
   d5a36:	d020      	beq.n	d5a7a <__kernel_rem_pio2+0x37a>
   d5a38:	ab0c      	add	r3, sp, #48	; 0x30
   d5a3a:	2201      	movs	r2, #1
   d5a3c:	f853 4f04 	ldr.w	r4, [r3, #4]!
   d5a40:	2c00      	cmp	r4, #0
   d5a42:	d04b      	beq.n	d5adc <__kernel_rem_pio2+0x3dc>
   d5a44:	1c53      	adds	r3, r2, #1
   d5a46:	a90c      	add	r1, sp, #48	; 0x30
   d5a48:	f1c4 7480 	rsb	r4, r4, #16777216	; 0x1000000
   d5a4c:	f841 4022 	str.w	r4, [r1, r2, lsl #2]
   d5a50:	9901      	ldr	r1, [sp, #4]
   d5a52:	4299      	cmp	r1, r3
   d5a54:	dd10      	ble.n	d5a78 <__kernel_rem_pio2+0x378>
   d5a56:	aa0c      	add	r2, sp, #48	; 0x30
   d5a58:	a80c      	add	r0, sp, #48	; 0x30
   d5a5a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   d5a5e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
   d5a62:	eb00 0081 	add.w	r0, r0, r1, lsl #2
   d5a66:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
   d5a6a:	e000      	b.n	d5a6e <__kernel_rem_pio2+0x36e>
   d5a6c:	681a      	ldr	r2, [r3, #0]
   d5a6e:	1a8a      	subs	r2, r1, r2
   d5a70:	f843 2b04 	str.w	r2, [r3], #4
   d5a74:	4283      	cmp	r3, r0
   d5a76:	d1f9      	bne.n	d5a6c <__kernel_rem_pio2+0x36c>
   d5a78:	2401      	movs	r4, #1
   d5a7a:	9b06      	ldr	r3, [sp, #24]
   d5a7c:	2b00      	cmp	r3, #0
   d5a7e:	dd0e      	ble.n	d5a9e <__kernel_rem_pio2+0x39e>
   d5a80:	2b01      	cmp	r3, #1
   d5a82:	f000 816a 	beq.w	d5d5a <__kernel_rem_pio2+0x65a>
   d5a86:	2b02      	cmp	r3, #2
   d5a88:	d109      	bne.n	d5a9e <__kernel_rem_pio2+0x39e>
   d5a8a:	9b01      	ldr	r3, [sp, #4]
   d5a8c:	1e5a      	subs	r2, r3, #1
   d5a8e:	ab0c      	add	r3, sp, #48	; 0x30
   d5a90:	a90c      	add	r1, sp, #48	; 0x30
   d5a92:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   d5a96:	f3c3 0315 	ubfx	r3, r3, #0, #22
   d5a9a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
   d5a9e:	2d02      	cmp	r5, #2
   d5aa0:	f47f af33 	bne.w	d590a <__kernel_rem_pio2+0x20a>
   d5aa4:	4632      	mov	r2, r6
   d5aa6:	463b      	mov	r3, r7
   d5aa8:	49b9      	ldr	r1, [pc, #740]	; (d5d90 <__kernel_rem_pio2+0x690>)
   d5aaa:	2000      	movs	r0, #0
   d5aac:	f000 fc32 	bl	d6314 <__aeabi_dsub>
   d5ab0:	4606      	mov	r6, r0
   d5ab2:	460f      	mov	r7, r1
   d5ab4:	2c00      	cmp	r4, #0
   d5ab6:	f43f af28 	beq.w	d590a <__kernel_rem_pio2+0x20a>
   d5aba:	9806      	ldr	r0, [sp, #24]
   d5abc:	ed9f 0bb0 	vldr	d0, [pc, #704]	; d5d80 <__kernel_rem_pio2+0x680>
   d5ac0:	f000 fb92 	bl	d61e8 <scalbn>
   d5ac4:	4630      	mov	r0, r6
   d5ac6:	4639      	mov	r1, r7
   d5ac8:	ec53 2b10 	vmov	r2, r3, d0
   d5acc:	f000 fc22 	bl	d6314 <__aeabi_dsub>
   d5ad0:	4606      	mov	r6, r0
   d5ad2:	460f      	mov	r7, r1
   d5ad4:	e719      	b.n	d590a <__kernel_rem_pio2+0x20a>
   d5ad6:	2301      	movs	r3, #1
   d5ad8:	2200      	movs	r2, #0
   d5ada:	e7b4      	b.n	d5a46 <__kernel_rem_pio2+0x346>
   d5adc:	9901      	ldr	r1, [sp, #4]
   d5ade:	3201      	adds	r2, #1
   d5ae0:	428a      	cmp	r2, r1
   d5ae2:	d1ab      	bne.n	d5a3c <__kernel_rem_pio2+0x33c>
   d5ae4:	e7c9      	b.n	d5a7a <__kernel_rem_pio2+0x37a>
   d5ae6:	4bab      	ldr	r3, [pc, #684]	; (d5d94 <__kernel_rem_pio2+0x694>)
   d5ae8:	2200      	movs	r2, #0
   d5aea:	f001 f851 	bl	d6b90 <__aeabi_dcmpge>
   d5aee:	2800      	cmp	r0, #0
   d5af0:	f040 8156 	bne.w	d5da0 <__kernel_rem_pio2+0x6a0>
   d5af4:	4605      	mov	r5, r0
   d5af6:	e708      	b.n	d590a <__kernel_rem_pio2+0x20a>
   d5af8:	9b01      	ldr	r3, [sp, #4]
   d5afa:	1c5a      	adds	r2, r3, #1
   d5afc:	4691      	mov	r9, r2
   d5afe:	9202      	str	r2, [sp, #8]
   d5b00:	e737      	b.n	d5972 <__kernel_rem_pio2+0x272>
   d5b02:	ab0c      	add	r3, sp, #48	; 0x30
   d5b04:	9a06      	ldr	r2, [sp, #24]
   d5b06:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
   d5b0a:	f8cd 801c 	str.w	r8, [sp, #28]
   d5b0e:	3a18      	subs	r2, #24
   d5b10:	9503      	str	r5, [sp, #12]
   d5b12:	9206      	str	r2, [sp, #24]
   d5b14:	b973      	cbnz	r3, d5b34 <__kernel_rem_pio2+0x434>
   d5b16:	9b01      	ldr	r3, [sp, #4]
   d5b18:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
   d5b1c:	3b02      	subs	r3, #2
   d5b1e:	a90c      	add	r1, sp, #48	; 0x30
   d5b20:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   d5b24:	f853 1904 	ldr.w	r1, [r3], #-4
   d5b28:	f10a 3aff 	add.w	sl, sl, #4294967295
   d5b2c:	3a18      	subs	r2, #24
   d5b2e:	2900      	cmp	r1, #0
   d5b30:	d0f8      	beq.n	d5b24 <__kernel_rem_pio2+0x424>
   d5b32:	9206      	str	r2, [sp, #24]
   d5b34:	ed9f 0b92 	vldr	d0, [pc, #584]	; d5d80 <__kernel_rem_pio2+0x680>
   d5b38:	9806      	ldr	r0, [sp, #24]
   d5b3a:	f000 fb55 	bl	d61e8 <scalbn>
   d5b3e:	f1ba 0f00 	cmp.w	sl, #0
   d5b42:	ec55 4b10 	vmov	r4, r5, d0
   d5b46:	f2c0 81de 	blt.w	d5f06 <__kernel_rem_pio2+0x806>
   d5b4a:	ab70      	add	r3, sp, #448	; 0x1c0
   d5b4c:	eb03 0bca 	add.w	fp, r3, sl, lsl #3
   d5b50:	aa0c      	add	r2, sp, #48	; 0x30
   d5b52:	f10a 0301 	add.w	r3, sl, #1
   d5b56:	9306      	str	r3, [sp, #24]
   d5b58:	eb02 0883 	add.w	r8, r2, r3, lsl #2
   d5b5c:	ea4f 03ca 	mov.w	r3, sl, lsl #3
   d5b60:	f10b 0908 	add.w	r9, fp, #8
   d5b64:	9304      	str	r3, [sp, #16]
   d5b66:	f858 0d04 	ldr.w	r0, [r8, #-4]!
   d5b6a:	f000 fd21 	bl	d65b0 <__aeabi_i2d>
   d5b6e:	4622      	mov	r2, r4
   d5b70:	462b      	mov	r3, r5
   d5b72:	f000 fd87 	bl	d6684 <__aeabi_dmul>
   d5b76:	4606      	mov	r6, r0
   d5b78:	460f      	mov	r7, r1
   d5b7a:	4b87      	ldr	r3, [pc, #540]	; (d5d98 <__kernel_rem_pio2+0x698>)
   d5b7c:	4620      	mov	r0, r4
   d5b7e:	4629      	mov	r1, r5
   d5b80:	e969 6702 	strd	r6, r7, [r9, #-8]!
   d5b84:	2200      	movs	r2, #0
   d5b86:	f000 fd7d 	bl	d6684 <__aeabi_dmul>
   d5b8a:	ab0c      	add	r3, sp, #48	; 0x30
   d5b8c:	4598      	cmp	r8, r3
   d5b8e:	4604      	mov	r4, r0
   d5b90:	460d      	mov	r5, r1
   d5b92:	d1e8      	bne.n	d5b66 <__kernel_rem_pio2+0x466>
   d5b94:	ab48      	add	r3, sp, #288	; 0x120
   d5b96:	e9cd 3a01 	strd	r3, sl, [sp, #4]
   d5b9a:	f8dd a014 	ldr.w	sl, [sp, #20]
   d5b9e:	f1ba 0f00 	cmp.w	sl, #0
   d5ba2:	f04f 0900 	mov.w	r9, #0
   d5ba6:	db2c      	blt.n	d5c02 <__kernel_rem_pio2+0x502>
   d5ba8:	a377      	add	r3, pc, #476	; (adr r3, d5d88 <__kernel_rem_pio2+0x688>)
   d5baa:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5bae:	f8df 81ec 	ldr.w	r8, [pc, #492]	; d5d9c <__kernel_rem_pio2+0x69c>
   d5bb2:	465f      	mov	r7, fp
   d5bb4:	2400      	movs	r4, #0
   d5bb6:	2500      	movs	r5, #0
   d5bb8:	2600      	movs	r6, #0
   d5bba:	e003      	b.n	d5bc4 <__kernel_rem_pio2+0x4c4>
   d5bbc:	45b1      	cmp	r9, r6
   d5bbe:	db10      	blt.n	d5be2 <__kernel_rem_pio2+0x4e2>
   d5bc0:	e8f8 2302 	ldrd	r2, r3, [r8], #8
   d5bc4:	e8f7 0102 	ldrd	r0, r1, [r7], #8
   d5bc8:	f000 fd5c 	bl	d6684 <__aeabi_dmul>
   d5bcc:	4602      	mov	r2, r0
   d5bce:	460b      	mov	r3, r1
   d5bd0:	4620      	mov	r0, r4
   d5bd2:	4629      	mov	r1, r5
   d5bd4:	f000 fba0 	bl	d6318 <__adddf3>
   d5bd8:	3601      	adds	r6, #1
   d5bda:	45b2      	cmp	sl, r6
   d5bdc:	4604      	mov	r4, r0
   d5bde:	460d      	mov	r5, r1
   d5be0:	daec      	bge.n	d5bbc <__kernel_rem_pio2+0x4bc>
   d5be2:	9b01      	ldr	r3, [sp, #4]
   d5be4:	9a02      	ldr	r2, [sp, #8]
   d5be6:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   d5bea:	454a      	cmp	r2, r9
   d5bec:	e9c3 4500 	strd	r4, r5, [r3]
   d5bf0:	f1ab 0b08 	sub.w	fp, fp, #8
   d5bf4:	f109 0301 	add.w	r3, r9, #1
   d5bf8:	d006      	beq.n	d5c08 <__kernel_rem_pio2+0x508>
   d5bfa:	f1ba 0f00 	cmp.w	sl, #0
   d5bfe:	4699      	mov	r9, r3
   d5c00:	dad2      	bge.n	d5ba8 <__kernel_rem_pio2+0x4a8>
   d5c02:	2400      	movs	r4, #0
   d5c04:	2500      	movs	r5, #0
   d5c06:	e7ec      	b.n	d5be2 <__kernel_rem_pio2+0x4e2>
   d5c08:	9ba2      	ldr	r3, [sp, #648]	; 0x288
   d5c0a:	f8dd a008 	ldr.w	sl, [sp, #8]
   d5c0e:	2b02      	cmp	r3, #2
   d5c10:	dc1e      	bgt.n	d5c50 <__kernel_rem_pio2+0x550>
   d5c12:	2b00      	cmp	r3, #0
   d5c14:	f300 810f 	bgt.w	d5e36 <__kernel_rem_pio2+0x736>
   d5c18:	d113      	bne.n	d5c42 <__kernel_rem_pio2+0x542>
   d5c1a:	9c04      	ldr	r4, [sp, #16]
   d5c1c:	9d01      	ldr	r5, [sp, #4]
   d5c1e:	3408      	adds	r4, #8
   d5c20:	2000      	movs	r0, #0
   d5c22:	2100      	movs	r1, #0
   d5c24:	442c      	add	r4, r5
   d5c26:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
   d5c2a:	f000 fb75 	bl	d6318 <__adddf3>
   d5c2e:	42a5      	cmp	r5, r4
   d5c30:	d1f9      	bne.n	d5c26 <__kernel_rem_pio2+0x526>
   d5c32:	9b03      	ldr	r3, [sp, #12]
   d5c34:	b113      	cbz	r3, d5c3c <__kernel_rem_pio2+0x53c>
   d5c36:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   d5c3a:	4619      	mov	r1, r3
   d5c3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   d5c3e:	e9c3 0100 	strd	r0, r1, [r3]
   d5c42:	9b07      	ldr	r3, [sp, #28]
   d5c44:	f003 0007 	and.w	r0, r3, #7
   d5c48:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   d5c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d5c50:	9ba2      	ldr	r3, [sp, #648]	; 0x288
   d5c52:	2b03      	cmp	r3, #3
   d5c54:	d1f5      	bne.n	d5c42 <__kernel_rem_pio2+0x542>
   d5c56:	f1ba 0f00 	cmp.w	sl, #0
   d5c5a:	f000 8170 	beq.w	d5f3e <__kernel_rem_pio2+0x83e>
   d5c5e:	9a01      	ldr	r2, [sp, #4]
   d5c60:	9b04      	ldr	r3, [sp, #16]
   d5c62:	18d3      	adds	r3, r2, r3
   d5c64:	e9d3 4500 	ldrd	r4, r5, [r3]
   d5c68:	eb02 0bca 	add.w	fp, r2, sl, lsl #3
   d5c6c:	e97b 6702 	ldrd	r6, r7, [fp, #-8]!
   d5c70:	4620      	mov	r0, r4
   d5c72:	4629      	mov	r1, r5
   d5c74:	4632      	mov	r2, r6
   d5c76:	463b      	mov	r3, r7
   d5c78:	f000 fb4e 	bl	d6318 <__adddf3>
   d5c7c:	46a0      	mov	r8, r4
   d5c7e:	46a9      	mov	r9, r5
   d5c80:	4604      	mov	r4, r0
   d5c82:	460d      	mov	r5, r1
   d5c84:	4622      	mov	r2, r4
   d5c86:	462b      	mov	r3, r5
   d5c88:	4630      	mov	r0, r6
   d5c8a:	4639      	mov	r1, r7
   d5c8c:	f000 fb42 	bl	d6314 <__aeabi_dsub>
   d5c90:	464b      	mov	r3, r9
   d5c92:	4642      	mov	r2, r8
   d5c94:	f000 fb40 	bl	d6318 <__adddf3>
   d5c98:	9b01      	ldr	r3, [sp, #4]
   d5c9a:	455b      	cmp	r3, fp
   d5c9c:	e9cb 4500 	strd	r4, r5, [fp]
   d5ca0:	e9cb 0102 	strd	r0, r1, [fp, #8]
   d5ca4:	d1e2      	bne.n	d5c6c <__kernel_rem_pio2+0x56c>
   d5ca6:	f1ba 0f01 	cmp.w	sl, #1
   d5caa:	f340 8148 	ble.w	d5f3e <__kernel_rem_pio2+0x83e>
   d5cae:	9a01      	ldr	r2, [sp, #4]
   d5cb0:	9b04      	ldr	r3, [sp, #16]
   d5cb2:	f10a 5a00 	add.w	sl, sl, #536870912	; 0x20000000
   d5cb6:	f10a 3aff 	add.w	sl, sl, #4294967295
   d5cba:	4413      	add	r3, r2
   d5cbc:	ea4f 01ca 	mov.w	r1, sl, lsl #3
   d5cc0:	e9d3 4500 	ldrd	r4, r5, [r3]
   d5cc4:	f101 0a08 	add.w	sl, r1, #8
   d5cc8:	9102      	str	r1, [sp, #8]
   d5cca:	4492      	add	sl, r2
   d5ccc:	f50d 7b94 	add.w	fp, sp, #296	; 0x128
   d5cd0:	e97a 6702 	ldrd	r6, r7, [sl, #-8]!
   d5cd4:	4620      	mov	r0, r4
   d5cd6:	4629      	mov	r1, r5
   d5cd8:	4632      	mov	r2, r6
   d5cda:	463b      	mov	r3, r7
   d5cdc:	f000 fb1c 	bl	d6318 <__adddf3>
   d5ce0:	46a0      	mov	r8, r4
   d5ce2:	46a9      	mov	r9, r5
   d5ce4:	4604      	mov	r4, r0
   d5ce6:	460d      	mov	r5, r1
   d5ce8:	4622      	mov	r2, r4
   d5cea:	462b      	mov	r3, r5
   d5cec:	4630      	mov	r0, r6
   d5cee:	4639      	mov	r1, r7
   d5cf0:	f000 fb10 	bl	d6314 <__aeabi_dsub>
   d5cf4:	4642      	mov	r2, r8
   d5cf6:	464b      	mov	r3, r9
   d5cf8:	f000 fb0e 	bl	d6318 <__adddf3>
   d5cfc:	45d3      	cmp	fp, sl
   d5cfe:	e9ca 4500 	strd	r4, r5, [sl]
   d5d02:	e9ca 0102 	strd	r0, r1, [sl, #8]
   d5d06:	d1e3      	bne.n	d5cd0 <__kernel_rem_pio2+0x5d0>
   d5d08:	9c02      	ldr	r4, [sp, #8]
   d5d0a:	9b01      	ldr	r3, [sp, #4]
   d5d0c:	2600      	movs	r6, #0
   d5d0e:	2700      	movs	r7, #0
   d5d10:	3410      	adds	r4, #16
   d5d12:	441c      	add	r4, r3
   d5d14:	f103 0510 	add.w	r5, r3, #16
   d5d18:	4630      	mov	r0, r6
   d5d1a:	4639      	mov	r1, r7
   d5d1c:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
   d5d20:	f000 fafa 	bl	d6318 <__adddf3>
   d5d24:	42a5      	cmp	r5, r4
   d5d26:	d1f9      	bne.n	d5d1c <__kernel_rem_pio2+0x61c>
   d5d28:	4606      	mov	r6, r0
   d5d2a:	460f      	mov	r7, r1
   d5d2c:	9b03      	ldr	r3, [sp, #12]
   d5d2e:	2b00      	cmp	r3, #0
   d5d30:	f040 80bf 	bne.w	d5eb2 <__kernel_rem_pio2+0x7b2>
   d5d34:	9a01      	ldr	r2, [sp, #4]
   d5d36:	990b      	ldr	r1, [sp, #44]	; 0x2c
   d5d38:	e9d2 4500 	ldrd	r4, r5, [r2]
   d5d3c:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
   d5d40:	e9c1 2302 	strd	r2, r3, [r1, #8]
   d5d44:	9b07      	ldr	r3, [sp, #28]
   d5d46:	f003 0007 	and.w	r0, r3, #7
   d5d4a:	e9c1 6704 	strd	r6, r7, [r1, #16]
   d5d4e:	e9c1 4500 	strd	r4, r5, [r1]
   d5d52:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   d5d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d5d5a:	9b01      	ldr	r3, [sp, #4]
   d5d5c:	1e5a      	subs	r2, r3, #1
   d5d5e:	ab0c      	add	r3, sp, #48	; 0x30
   d5d60:	a90c      	add	r1, sp, #48	; 0x30
   d5d62:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   d5d66:	f3c3 0316 	ubfx	r3, r3, #0, #23
   d5d6a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
   d5d6e:	e696      	b.n	d5a9e <__kernel_rem_pio2+0x39e>
   d5d70:	2100      	movs	r1, #0
   d5d72:	f06f 0317 	mvn.w	r3, #23
   d5d76:	9107      	str	r1, [sp, #28]
   d5d78:	e4e0      	b.n	d573c <__kernel_rem_pio2+0x3c>
   d5d7a:	bf00      	nop
   d5d7c:	f3af 8000 	nop.w
   d5d80:	00000000 	.word	0x00000000
   d5d84:	3ff00000 	.word	0x3ff00000
   d5d88:	40000000 	.word	0x40000000
   d5d8c:	3ff921fb 	.word	0x3ff921fb
   d5d90:	3ff00000 	.word	0x3ff00000
   d5d94:	3fe00000 	.word	0x3fe00000
   d5d98:	3e700000 	.word	0x3e700000
   d5d9c:	000d7050 	.word	0x000d7050
   d5da0:	9b01      	ldr	r3, [sp, #4]
   d5da2:	2b00      	cmp	r3, #0
   d5da4:	f108 0801 	add.w	r8, r8, #1
   d5da8:	bfc8      	it	gt
   d5daa:	2502      	movgt	r5, #2
   d5dac:	f73f ae3e 	bgt.w	d5a2c <__kernel_rem_pio2+0x32c>
   d5db0:	4632      	mov	r2, r6
   d5db2:	463b      	mov	r3, r7
   d5db4:	4963      	ldr	r1, [pc, #396]	; (d5f44 <__kernel_rem_pio2+0x844>)
   d5db6:	2000      	movs	r0, #0
   d5db8:	f000 faac 	bl	d6314 <__aeabi_dsub>
   d5dbc:	2502      	movs	r5, #2
   d5dbe:	4606      	mov	r6, r0
   d5dc0:	460f      	mov	r7, r1
   d5dc2:	e5a2      	b.n	d590a <__kernel_rem_pio2+0x20a>
   d5dc4:	2400      	movs	r4, #0
   d5dc6:	e658      	b.n	d5a7a <__kernel_rem_pio2+0x37a>
   d5dc8:	9b06      	ldr	r3, [sp, #24]
   d5dca:	9503      	str	r5, [sp, #12]
   d5dcc:	4258      	negs	r0, r3
   d5dce:	ec47 6b10 	vmov	d0, r6, r7
   d5dd2:	f8cd 801c 	str.w	r8, [sp, #28]
   d5dd6:	f000 fa07 	bl	d61e8 <scalbn>
   d5dda:	ec55 4b10 	vmov	r4, r5, d0
   d5dde:	4b5a      	ldr	r3, [pc, #360]	; (d5f48 <__kernel_rem_pio2+0x848>)
   d5de0:	ee10 0a10 	vmov	r0, s0
   d5de4:	2200      	movs	r2, #0
   d5de6:	4629      	mov	r1, r5
   d5de8:	f000 fed2 	bl	d6b90 <__aeabi_dcmpge>
   d5dec:	2800      	cmp	r0, #0
   d5dee:	d056      	beq.n	d5e9e <__kernel_rem_pio2+0x79e>
   d5df0:	4b56      	ldr	r3, [pc, #344]	; (d5f4c <__kernel_rem_pio2+0x84c>)
   d5df2:	2200      	movs	r2, #0
   d5df4:	4620      	mov	r0, r4
   d5df6:	4629      	mov	r1, r5
   d5df8:	f000 fc44 	bl	d6684 <__aeabi_dmul>
   d5dfc:	f000 fedc 	bl	d6bb8 <__aeabi_d2iz>
   d5e00:	4606      	mov	r6, r0
   d5e02:	f000 fbd5 	bl	d65b0 <__aeabi_i2d>
   d5e06:	4b50      	ldr	r3, [pc, #320]	; (d5f48 <__kernel_rem_pio2+0x848>)
   d5e08:	2200      	movs	r2, #0
   d5e0a:	f000 fc3b 	bl	d6684 <__aeabi_dmul>
   d5e0e:	460b      	mov	r3, r1
   d5e10:	4602      	mov	r2, r0
   d5e12:	4629      	mov	r1, r5
   d5e14:	4620      	mov	r0, r4
   d5e16:	f000 fa7d 	bl	d6314 <__aeabi_dsub>
   d5e1a:	f000 fecd 	bl	d6bb8 <__aeabi_d2iz>
   d5e1e:	9b06      	ldr	r3, [sp, #24]
   d5e20:	9c01      	ldr	r4, [sp, #4]
   d5e22:	3318      	adds	r3, #24
   d5e24:	f104 0a01 	add.w	sl, r4, #1
   d5e28:	9306      	str	r3, [sp, #24]
   d5e2a:	ab0c      	add	r3, sp, #48	; 0x30
   d5e2c:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
   d5e30:	f843 602a 	str.w	r6, [r3, sl, lsl #2]
   d5e34:	e67e      	b.n	d5b34 <__kernel_rem_pio2+0x434>
   d5e36:	9d01      	ldr	r5, [sp, #4]
   d5e38:	9a06      	ldr	r2, [sp, #24]
   d5e3a:	2000      	movs	r0, #0
   d5e3c:	eb05 04c2 	add.w	r4, r5, r2, lsl #3
   d5e40:	2100      	movs	r1, #0
   d5e42:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
   d5e46:	f000 fa67 	bl	d6318 <__adddf3>
   d5e4a:	42a5      	cmp	r5, r4
   d5e4c:	d1f9      	bne.n	d5e42 <__kernel_rem_pio2+0x742>
   d5e4e:	9b03      	ldr	r3, [sp, #12]
   d5e50:	2b00      	cmp	r3, #0
   d5e52:	d148      	bne.n	d5ee6 <__kernel_rem_pio2+0x7e6>
   d5e54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   d5e56:	e9c3 0100 	strd	r0, r1, [r3]
   d5e5a:	460b      	mov	r3, r1
   d5e5c:	9901      	ldr	r1, [sp, #4]
   d5e5e:	4602      	mov	r2, r0
   d5e60:	e9d1 0100 	ldrd	r0, r1, [r1]
   d5e64:	f000 fa56 	bl	d6314 <__aeabi_dsub>
   d5e68:	f1ba 0f00 	cmp.w	sl, #0
   d5e6c:	dd0d      	ble.n	d5e8a <__kernel_rem_pio2+0x78a>
   d5e6e:	ad4a      	add	r5, sp, #296	; 0x128
   d5e70:	2401      	movs	r4, #1
   d5e72:	e8f5 2302 	ldrd	r2, r3, [r5], #8
   d5e76:	3401      	adds	r4, #1
   d5e78:	f000 fa4e 	bl	d6318 <__adddf3>
   d5e7c:	45a2      	cmp	sl, r4
   d5e7e:	daf8      	bge.n	d5e72 <__kernel_rem_pio2+0x772>
   d5e80:	9b03      	ldr	r3, [sp, #12]
   d5e82:	b113      	cbz	r3, d5e8a <__kernel_rem_pio2+0x78a>
   d5e84:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   d5e88:	4619      	mov	r1, r3
   d5e8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   d5e8c:	e9c3 0102 	strd	r0, r1, [r3, #8]
   d5e90:	9b07      	ldr	r3, [sp, #28]
   d5e92:	f003 0007 	and.w	r0, r3, #7
   d5e96:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   d5e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d5e9e:	4620      	mov	r0, r4
   d5ea0:	4629      	mov	r1, r5
   d5ea2:	f000 fe89 	bl	d6bb8 <__aeabi_d2iz>
   d5ea6:	9b01      	ldr	r3, [sp, #4]
   d5ea8:	aa0c      	add	r2, sp, #48	; 0x30
   d5eaa:	469a      	mov	sl, r3
   d5eac:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
   d5eb0:	e640      	b.n	d5b34 <__kernel_rem_pio2+0x434>
   d5eb2:	9b01      	ldr	r3, [sp, #4]
   d5eb4:	4619      	mov	r1, r3
   d5eb6:	685a      	ldr	r2, [r3, #4]
   d5eb8:	68db      	ldr	r3, [r3, #12]
   d5eba:	680d      	ldr	r5, [r1, #0]
   d5ebc:	688c      	ldr	r4, [r1, #8]
   d5ebe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   d5ec0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
   d5ec4:	60cb      	str	r3, [r1, #12]
   d5ec6:	9b07      	ldr	r3, [sp, #28]
   d5ec8:	600d      	str	r5, [r1, #0]
   d5eca:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
   d5ece:	604a      	str	r2, [r1, #4]
   d5ed0:	f003 0007 	and.w	r0, r3, #7
   d5ed4:	f107 4200 	add.w	r2, r7, #2147483648	; 0x80000000
   d5ed8:	608c      	str	r4, [r1, #8]
   d5eda:	610e      	str	r6, [r1, #16]
   d5edc:	614a      	str	r2, [r1, #20]
   d5ede:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   d5ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d5ee6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   d5ee8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   d5eec:	e9c4 0300 	strd	r0, r3, [r4]
   d5ef0:	460b      	mov	r3, r1
   d5ef2:	9901      	ldr	r1, [sp, #4]
   d5ef4:	4602      	mov	r2, r0
   d5ef6:	e9d1 0100 	ldrd	r0, r1, [r1]
   d5efa:	f000 fa0b 	bl	d6314 <__aeabi_dsub>
   d5efe:	f1ba 0f00 	cmp.w	sl, #0
   d5f02:	dcb4      	bgt.n	d5e6e <__kernel_rem_pio2+0x76e>
   d5f04:	e7be      	b.n	d5e84 <__kernel_rem_pio2+0x784>
   d5f06:	9ba2      	ldr	r3, [sp, #648]	; 0x288
   d5f08:	2b02      	cmp	r3, #2
   d5f0a:	dc0a      	bgt.n	d5f22 <__kernel_rem_pio2+0x822>
   d5f0c:	2b00      	cmp	r3, #0
   d5f0e:	dc11      	bgt.n	d5f34 <__kernel_rem_pio2+0x834>
   d5f10:	f47f ae97 	bne.w	d5c42 <__kernel_rem_pio2+0x542>
   d5f14:	2000      	movs	r0, #0
   d5f16:	2100      	movs	r1, #0
   d5f18:	e68b      	b.n	d5c32 <__kernel_rem_pio2+0x532>
   d5f1a:	9b08      	ldr	r3, [sp, #32]
   d5f1c:	00db      	lsls	r3, r3, #3
   d5f1e:	9302      	str	r3, [sp, #8]
   d5f20:	e465      	b.n	d57ee <__kernel_rem_pio2+0xee>
   d5f22:	9ba2      	ldr	r3, [sp, #648]	; 0x288
   d5f24:	2b03      	cmp	r3, #3
   d5f26:	f47f ae8c 	bne.w	d5c42 <__kernel_rem_pio2+0x542>
   d5f2a:	ab48      	add	r3, sp, #288	; 0x120
   d5f2c:	2600      	movs	r6, #0
   d5f2e:	2700      	movs	r7, #0
   d5f30:	9301      	str	r3, [sp, #4]
   d5f32:	e6fb      	b.n	d5d2c <__kernel_rem_pio2+0x62c>
   d5f34:	ab48      	add	r3, sp, #288	; 0x120
   d5f36:	2000      	movs	r0, #0
   d5f38:	2100      	movs	r1, #0
   d5f3a:	9301      	str	r3, [sp, #4]
   d5f3c:	e787      	b.n	d5e4e <__kernel_rem_pio2+0x74e>
   d5f3e:	2600      	movs	r6, #0
   d5f40:	2700      	movs	r7, #0
   d5f42:	e6f3      	b.n	d5d2c <__kernel_rem_pio2+0x62c>
   d5f44:	3ff00000 	.word	0x3ff00000
   d5f48:	41700000 	.word	0x41700000
   d5f4c:	3e700000 	.word	0x3e700000

000d5f50 <__kernel_sin>:
   d5f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   d5f54:	ec55 4b10 	vmov	r4, r5, d0
   d5f58:	b085      	sub	sp, #20
   d5f5a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
   d5f5e:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
   d5f62:	ed8d 1b00 	vstr	d1, [sp]
   d5f66:	9003      	str	r0, [sp, #12]
   d5f68:	da07      	bge.n	d5f7a <__kernel_sin+0x2a>
   d5f6a:	ee10 0a10 	vmov	r0, s0
   d5f6e:	4629      	mov	r1, r5
   d5f70:	f000 fe22 	bl	d6bb8 <__aeabi_d2iz>
   d5f74:	2800      	cmp	r0, #0
   d5f76:	f000 8089 	beq.w	d608c <__kernel_sin+0x13c>
   d5f7a:	4622      	mov	r2, r4
   d5f7c:	462b      	mov	r3, r5
   d5f7e:	4620      	mov	r0, r4
   d5f80:	4629      	mov	r1, r5
   d5f82:	f000 fb7f 	bl	d6684 <__aeabi_dmul>
   d5f86:	4606      	mov	r6, r0
   d5f88:	460f      	mov	r7, r1
   d5f8a:	4632      	mov	r2, r6
   d5f8c:	463b      	mov	r3, r7
   d5f8e:	4620      	mov	r0, r4
   d5f90:	4629      	mov	r1, r5
   d5f92:	f000 fb77 	bl	d6684 <__aeabi_dmul>
   d5f96:	a343      	add	r3, pc, #268	; (adr r3, d60a4 <__kernel_sin+0x154>)
   d5f98:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5f9c:	4682      	mov	sl, r0
   d5f9e:	468b      	mov	fp, r1
   d5fa0:	4630      	mov	r0, r6
   d5fa2:	4639      	mov	r1, r7
   d5fa4:	f000 fb6e 	bl	d6684 <__aeabi_dmul>
   d5fa8:	a340      	add	r3, pc, #256	; (adr r3, d60ac <__kernel_sin+0x15c>)
   d5faa:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5fae:	f000 f9b1 	bl	d6314 <__aeabi_dsub>
   d5fb2:	4632      	mov	r2, r6
   d5fb4:	463b      	mov	r3, r7
   d5fb6:	f000 fb65 	bl	d6684 <__aeabi_dmul>
   d5fba:	a33e      	add	r3, pc, #248	; (adr r3, d60b4 <__kernel_sin+0x164>)
   d5fbc:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5fc0:	f000 f9aa 	bl	d6318 <__adddf3>
   d5fc4:	4632      	mov	r2, r6
   d5fc6:	463b      	mov	r3, r7
   d5fc8:	f000 fb5c 	bl	d6684 <__aeabi_dmul>
   d5fcc:	a33b      	add	r3, pc, #236	; (adr r3, d60bc <__kernel_sin+0x16c>)
   d5fce:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5fd2:	f000 f99f 	bl	d6314 <__aeabi_dsub>
   d5fd6:	4632      	mov	r2, r6
   d5fd8:	463b      	mov	r3, r7
   d5fda:	f000 fb53 	bl	d6684 <__aeabi_dmul>
   d5fde:	a339      	add	r3, pc, #228	; (adr r3, d60c4 <__kernel_sin+0x174>)
   d5fe0:	e9d3 2300 	ldrd	r2, r3, [r3]
   d5fe4:	f000 f998 	bl	d6318 <__adddf3>
   d5fe8:	9b03      	ldr	r3, [sp, #12]
   d5fea:	4680      	mov	r8, r0
   d5fec:	4689      	mov	r9, r1
   d5fee:	b3ab      	cbz	r3, d605c <__kernel_sin+0x10c>
   d5ff0:	e9dd 0100 	ldrd	r0, r1, [sp]
   d5ff4:	4b2a      	ldr	r3, [pc, #168]	; (d60a0 <__kernel_sin+0x150>)
   d5ff6:	2200      	movs	r2, #0
   d5ff8:	f000 fb44 	bl	d6684 <__aeabi_dmul>
   d5ffc:	4642      	mov	r2, r8
   d5ffe:	464b      	mov	r3, r9
   d6000:	4680      	mov	r8, r0
   d6002:	4689      	mov	r9, r1
   d6004:	4650      	mov	r0, sl
   d6006:	4659      	mov	r1, fp
   d6008:	f000 fb3c 	bl	d6684 <__aeabi_dmul>
   d600c:	4602      	mov	r2, r0
   d600e:	460b      	mov	r3, r1
   d6010:	4640      	mov	r0, r8
   d6012:	4649      	mov	r1, r9
   d6014:	f000 f97e 	bl	d6314 <__aeabi_dsub>
   d6018:	4632      	mov	r2, r6
   d601a:	463b      	mov	r3, r7
   d601c:	f000 fb32 	bl	d6684 <__aeabi_dmul>
   d6020:	e9dd 2300 	ldrd	r2, r3, [sp]
   d6024:	f000 f976 	bl	d6314 <__aeabi_dsub>
   d6028:	a31b      	add	r3, pc, #108	; (adr r3, d6098 <__kernel_sin+0x148>)
   d602a:	e9d3 2300 	ldrd	r2, r3, [r3]
   d602e:	4606      	mov	r6, r0
   d6030:	460f      	mov	r7, r1
   d6032:	4650      	mov	r0, sl
   d6034:	4659      	mov	r1, fp
   d6036:	f000 fb25 	bl	d6684 <__aeabi_dmul>
   d603a:	4602      	mov	r2, r0
   d603c:	460b      	mov	r3, r1
   d603e:	4630      	mov	r0, r6
   d6040:	4639      	mov	r1, r7
   d6042:	f000 f969 	bl	d6318 <__adddf3>
   d6046:	4602      	mov	r2, r0
   d6048:	460b      	mov	r3, r1
   d604a:	4620      	mov	r0, r4
   d604c:	4629      	mov	r1, r5
   d604e:	f000 f961 	bl	d6314 <__aeabi_dsub>
   d6052:	ec41 0b10 	vmov	d0, r0, r1
   d6056:	b005      	add	sp, #20
   d6058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d605c:	4602      	mov	r2, r0
   d605e:	460b      	mov	r3, r1
   d6060:	4630      	mov	r0, r6
   d6062:	4639      	mov	r1, r7
   d6064:	f000 fb0e 	bl	d6684 <__aeabi_dmul>
   d6068:	a30b      	add	r3, pc, #44	; (adr r3, d6098 <__kernel_sin+0x148>)
   d606a:	e9d3 2300 	ldrd	r2, r3, [r3]
   d606e:	f000 f951 	bl	d6314 <__aeabi_dsub>
   d6072:	4652      	mov	r2, sl
   d6074:	465b      	mov	r3, fp
   d6076:	f000 fb05 	bl	d6684 <__aeabi_dmul>
   d607a:	4622      	mov	r2, r4
   d607c:	462b      	mov	r3, r5
   d607e:	f000 f94b 	bl	d6318 <__adddf3>
   d6082:	ec41 0b10 	vmov	d0, r0, r1
   d6086:	b005      	add	sp, #20
   d6088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d608c:	ec45 4b10 	vmov	d0, r4, r5
   d6090:	b005      	add	sp, #20
   d6092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   d6096:	bf00      	nop
   d6098:	55555549 	.word	0x55555549
   d609c:	3fc55555 	.word	0x3fc55555
   d60a0:	3fe00000 	.word	0x3fe00000
   d60a4:	5acfd57c 	.word	0x5acfd57c
   d60a8:	3de5d93a 	.word	0x3de5d93a
   d60ac:	8a2b9ceb 	.word	0x8a2b9ceb
   d60b0:	3e5ae5e6 	.word	0x3e5ae5e6
   d60b4:	57b1fe7d 	.word	0x57b1fe7d
   d60b8:	3ec71de3 	.word	0x3ec71de3
   d60bc:	19c161d5 	.word	0x19c161d5
   d60c0:	3f2a01a0 	.word	0x3f2a01a0
   d60c4:	1110f8a6 	.word	0x1110f8a6
   d60c8:	3f811111 	.word	0x3f811111

000d60cc <fabs>:
   d60cc:	ec51 0b10 	vmov	r0, r1, d0
   d60d0:	ee10 2a10 	vmov	r2, s0
   d60d4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   d60d8:	ec43 2b10 	vmov	d0, r2, r3
   d60dc:	4770      	bx	lr
   d60de:	bf00      	nop

000d60e0 <floor>:
   d60e0:	ec51 0b10 	vmov	r0, r1, d0
   d60e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   d60e6:	f3c1 530a 	ubfx	r3, r1, #20, #11
   d60ea:	f2a3 35ff 	subw	r5, r3, #1023	; 0x3ff
   d60ee:	2d13      	cmp	r5, #19
   d60f0:	ee10 6a10 	vmov	r6, s0
   d60f4:	460c      	mov	r4, r1
   d60f6:	dc20      	bgt.n	d613a <floor+0x5a>
   d60f8:	2d00      	cmp	r5, #0
   d60fa:	db3d      	blt.n	d6178 <floor+0x98>
   d60fc:	4f38      	ldr	r7, [pc, #224]	; (d61e0 <floor+0x100>)
   d60fe:	412f      	asrs	r7, r5
   d6100:	ea01 0307 	and.w	r3, r1, r7
   d6104:	4303      	orrs	r3, r0
   d6106:	d01d      	beq.n	d6144 <floor+0x64>
   d6108:	a333      	add	r3, pc, #204	; (adr r3, d61d8 <floor+0xf8>)
   d610a:	e9d3 2300 	ldrd	r2, r3, [r3]
   d610e:	f000 f903 	bl	d6318 <__adddf3>
   d6112:	2200      	movs	r2, #0
   d6114:	2300      	movs	r3, #0
   d6116:	f000 fd45 	bl	d6ba4 <__aeabi_dcmpgt>
   d611a:	b148      	cbz	r0, d6130 <floor+0x50>
   d611c:	2c00      	cmp	r4, #0
   d611e:	da04      	bge.n	d612a <floor+0x4a>
   d6120:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
   d6124:	fa43 f505 	asr.w	r5, r3, r5
   d6128:	442c      	add	r4, r5
   d612a:	ea24 0407 	bic.w	r4, r4, r7
   d612e:	2600      	movs	r6, #0
   d6130:	4623      	mov	r3, r4
   d6132:	4632      	mov	r2, r6
   d6134:	ec43 2b10 	vmov	d0, r2, r3
   d6138:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   d613a:	2d33      	cmp	r5, #51	; 0x33
   d613c:	dd05      	ble.n	d614a <floor+0x6a>
   d613e:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
   d6142:	d029      	beq.n	d6198 <floor+0xb8>
   d6144:	ec41 0b10 	vmov	d0, r0, r1
   d6148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   d614a:	f2a3 4313 	subw	r3, r3, #1043	; 0x413
   d614e:	f04f 37ff 	mov.w	r7, #4294967295
   d6152:	40df      	lsrs	r7, r3
   d6154:	4207      	tst	r7, r0
   d6156:	d0f5      	beq.n	d6144 <floor+0x64>
   d6158:	a31f      	add	r3, pc, #124	; (adr r3, d61d8 <floor+0xf8>)
   d615a:	e9d3 2300 	ldrd	r2, r3, [r3]
   d615e:	f000 f8db 	bl	d6318 <__adddf3>
   d6162:	2200      	movs	r2, #0
   d6164:	2300      	movs	r3, #0
   d6166:	f000 fd1d 	bl	d6ba4 <__aeabi_dcmpgt>
   d616a:	2800      	cmp	r0, #0
   d616c:	d0e0      	beq.n	d6130 <floor+0x50>
   d616e:	2c00      	cmp	r4, #0
   d6170:	db23      	blt.n	d61ba <floor+0xda>
   d6172:	ea26 0607 	bic.w	r6, r6, r7
   d6176:	e7db      	b.n	d6130 <floor+0x50>
   d6178:	a317      	add	r3, pc, #92	; (adr r3, d61d8 <floor+0xf8>)
   d617a:	e9d3 2300 	ldrd	r2, r3, [r3]
   d617e:	f000 f8cb 	bl	d6318 <__adddf3>
   d6182:	2200      	movs	r2, #0
   d6184:	2300      	movs	r3, #0
   d6186:	f000 fd0d 	bl	d6ba4 <__aeabi_dcmpgt>
   d618a:	2800      	cmp	r0, #0
   d618c:	d0d0      	beq.n	d6130 <floor+0x50>
   d618e:	2c00      	cmp	r4, #0
   d6190:	db0a      	blt.n	d61a8 <floor+0xc8>
   d6192:	2600      	movs	r6, #0
   d6194:	4634      	mov	r4, r6
   d6196:	e7cb      	b.n	d6130 <floor+0x50>
   d6198:	ee10 2a10 	vmov	r2, s0
   d619c:	460b      	mov	r3, r1
   d619e:	f000 f8bb 	bl	d6318 <__adddf3>
   d61a2:	ec41 0b10 	vmov	d0, r0, r1
   d61a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   d61a8:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
   d61ac:	4a0d      	ldr	r2, [pc, #52]	; (d61e4 <floor+0x104>)
   d61ae:	431e      	orrs	r6, r3
   d61b0:	2e00      	cmp	r6, #0
   d61b2:	bf18      	it	ne
   d61b4:	4614      	movne	r4, r2
   d61b6:	2600      	movs	r6, #0
   d61b8:	e7ba      	b.n	d6130 <floor+0x50>
   d61ba:	2d14      	cmp	r5, #20
   d61bc:	d008      	beq.n	d61d0 <floor+0xf0>
   d61be:	2301      	movs	r3, #1
   d61c0:	f1c5 0534 	rsb	r5, r5, #52	; 0x34
   d61c4:	fa03 f505 	lsl.w	r5, r3, r5
   d61c8:	19ae      	adds	r6, r5, r6
   d61ca:	bf28      	it	cs
   d61cc:	18e4      	addcs	r4, r4, r3
   d61ce:	e7d0      	b.n	d6172 <floor+0x92>
   d61d0:	3401      	adds	r4, #1
   d61d2:	e7ce      	b.n	d6172 <floor+0x92>
   d61d4:	f3af 8000 	nop.w
   d61d8:	8800759c 	.word	0x8800759c
   d61dc:	7e37e43c 	.word	0x7e37e43c
   d61e0:	000fffff 	.word	0x000fffff
   d61e4:	bff00000 	.word	0xbff00000

000d61e8 <scalbn>:
   d61e8:	b538      	push	{r3, r4, r5, lr}
   d61ea:	ec53 2b10 	vmov	r2, r3, d0
   d61ee:	f3c3 510a 	ubfx	r1, r3, #20, #11
   d61f2:	461c      	mov	r4, r3
   d61f4:	4605      	mov	r5, r0
   d61f6:	bb81      	cbnz	r1, d625a <scalbn+0x72>
   d61f8:	ee10 1a10 	vmov	r1, s0
   d61fc:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   d6200:	4321      	orrs	r1, r4
   d6202:	d029      	beq.n	d6258 <scalbn+0x70>
   d6204:	4619      	mov	r1, r3
   d6206:	2200      	movs	r2, #0
   d6208:	4b3d      	ldr	r3, [pc, #244]	; (d6300 <scalbn+0x118>)
   d620a:	4c3e      	ldr	r4, [pc, #248]	; (d6304 <scalbn+0x11c>)
   d620c:	ee10 0a10 	vmov	r0, s0
   d6210:	f000 fa38 	bl	d6684 <__aeabi_dmul>
   d6214:	42a5      	cmp	r5, r4
   d6216:	4602      	mov	r2, r0
   d6218:	460b      	mov	r3, r1
   d621a:	db16      	blt.n	d624a <scalbn+0x62>
   d621c:	460c      	mov	r4, r1
   d621e:	f3c1 510a 	ubfx	r1, r1, #20, #11
   d6222:	3936      	subs	r1, #54	; 0x36
   d6224:	4429      	add	r1, r5
   d6226:	f240 70fe 	movw	r0, #2046	; 0x7fe
   d622a:	4281      	cmp	r1, r0
   d622c:	dc21      	bgt.n	d6272 <scalbn+0x8a>
   d622e:	2900      	cmp	r1, #0
   d6230:	dc47      	bgt.n	d62c2 <scalbn+0xda>
   d6232:	f111 0f35 	cmn.w	r1, #53	; 0x35
   d6236:	da34      	bge.n	d62a2 <scalbn+0xba>
   d6238:	f24c 3150 	movw	r1, #50000	; 0xc350
   d623c:	428d      	cmp	r5, r1
   d623e:	dc18      	bgt.n	d6272 <scalbn+0x8a>
   d6240:	2b00      	cmp	r3, #0
   d6242:	a127      	add	r1, pc, #156	; (adr r1, d62e0 <scalbn+0xf8>)
   d6244:	e9d1 0100 	ldrd	r0, r1, [r1]
   d6248:	db44      	blt.n	d62d4 <scalbn+0xec>
   d624a:	a325      	add	r3, pc, #148	; (adr r3, d62e0 <scalbn+0xf8>)
   d624c:	e9d3 2300 	ldrd	r2, r3, [r3]
   d6250:	f000 fa18 	bl	d6684 <__aeabi_dmul>
   d6254:	ec41 0b10 	vmov	d0, r0, r1
   d6258:	bd38      	pop	{r3, r4, r5, pc}
   d625a:	f240 70ff 	movw	r0, #2047	; 0x7ff
   d625e:	4281      	cmp	r1, r0
   d6260:	d1e0      	bne.n	d6224 <scalbn+0x3c>
   d6262:	ee10 0a10 	vmov	r0, s0
   d6266:	4619      	mov	r1, r3
   d6268:	f000 f856 	bl	d6318 <__adddf3>
   d626c:	ec41 0b10 	vmov	d0, r0, r1
   d6270:	bd38      	pop	{r3, r4, r5, pc}
   d6272:	2b00      	cmp	r3, #0
   d6274:	a11c      	add	r1, pc, #112	; (adr r1, d62e8 <scalbn+0x100>)
   d6276:	e9d1 0100 	ldrd	r0, r1, [r1]
   d627a:	db07      	blt.n	d628c <scalbn+0xa4>
   d627c:	a31a      	add	r3, pc, #104	; (adr r3, d62e8 <scalbn+0x100>)
   d627e:	e9d3 2300 	ldrd	r2, r3, [r3]
   d6282:	f000 f9ff 	bl	d6684 <__aeabi_dmul>
   d6286:	ec41 0b10 	vmov	d0, r0, r1
   d628a:	bd38      	pop	{r3, r4, r5, pc}
   d628c:	a118      	add	r1, pc, #96	; (adr r1, d62f0 <scalbn+0x108>)
   d628e:	e9d1 0100 	ldrd	r0, r1, [r1]
   d6292:	a315      	add	r3, pc, #84	; (adr r3, d62e8 <scalbn+0x100>)
   d6294:	e9d3 2300 	ldrd	r2, r3, [r3]
   d6298:	f000 f9f4 	bl	d6684 <__aeabi_dmul>
   d629c:	ec41 0b10 	vmov	d0, r0, r1
   d62a0:	e7f3      	b.n	d628a <scalbn+0xa2>
   d62a2:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
   d62a6:	f424 04e0 	bic.w	r4, r4, #7340032	; 0x700000
   d62aa:	3136      	adds	r1, #54	; 0x36
   d62ac:	ea44 5301 	orr.w	r3, r4, r1, lsl #20
   d62b0:	4610      	mov	r0, r2
   d62b2:	4619      	mov	r1, r3
   d62b4:	2200      	movs	r2, #0
   d62b6:	4b14      	ldr	r3, [pc, #80]	; (d6308 <scalbn+0x120>)
   d62b8:	f000 f9e4 	bl	d6684 <__aeabi_dmul>
   d62bc:	ec41 0b10 	vmov	d0, r0, r1
   d62c0:	bd38      	pop	{r3, r4, r5, pc}
   d62c2:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
   d62c6:	f424 04e0 	bic.w	r4, r4, #7340032	; 0x700000
   d62ca:	ea44 5301 	orr.w	r3, r4, r1, lsl #20
   d62ce:	ec43 2b10 	vmov	d0, r2, r3
   d62d2:	bd38      	pop	{r3, r4, r5, pc}
   d62d4:	a108      	add	r1, pc, #32	; (adr r1, d62f8 <scalbn+0x110>)
   d62d6:	e9d1 0100 	ldrd	r0, r1, [r1]
   d62da:	e7b6      	b.n	d624a <scalbn+0x62>
   d62dc:	f3af 8000 	nop.w
   d62e0:	c2f8f359 	.word	0xc2f8f359
   d62e4:	01a56e1f 	.word	0x01a56e1f
   d62e8:	8800759c 	.word	0x8800759c
   d62ec:	7e37e43c 	.word	0x7e37e43c
   d62f0:	8800759c 	.word	0x8800759c
   d62f4:	fe37e43c 	.word	0xfe37e43c
   d62f8:	c2f8f359 	.word	0xc2f8f359
   d62fc:	81a56e1f 	.word	0x81a56e1f
   d6300:	43500000 	.word	0x43500000
   d6304:	ffff3cb0 	.word	0xffff3cb0
   d6308:	3c900000 	.word	0x3c900000

000d630c <__aeabi_drsub>:
   d630c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   d6310:	e002      	b.n	d6318 <__adddf3>
   d6312:	bf00      	nop

000d6314 <__aeabi_dsub>:
   d6314:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000d6318 <__adddf3>:
   d6318:	b530      	push	{r4, r5, lr}
   d631a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   d631e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   d6322:	ea94 0f05 	teq	r4, r5
   d6326:	bf08      	it	eq
   d6328:	ea90 0f02 	teqeq	r0, r2
   d632c:	bf1f      	itttt	ne
   d632e:	ea54 0c00 	orrsne.w	ip, r4, r0
   d6332:	ea55 0c02 	orrsne.w	ip, r5, r2
   d6336:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   d633a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   d633e:	f000 80e2 	beq.w	d6506 <__adddf3+0x1ee>
   d6342:	ea4f 5454 	mov.w	r4, r4, lsr #21
   d6346:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   d634a:	bfb8      	it	lt
   d634c:	426d      	neglt	r5, r5
   d634e:	dd0c      	ble.n	d636a <__adddf3+0x52>
   d6350:	442c      	add	r4, r5
   d6352:	ea80 0202 	eor.w	r2, r0, r2
   d6356:	ea81 0303 	eor.w	r3, r1, r3
   d635a:	ea82 0000 	eor.w	r0, r2, r0
   d635e:	ea83 0101 	eor.w	r1, r3, r1
   d6362:	ea80 0202 	eor.w	r2, r0, r2
   d6366:	ea81 0303 	eor.w	r3, r1, r3
   d636a:	2d36      	cmp	r5, #54	; 0x36
   d636c:	bf88      	it	hi
   d636e:	bd30      	pophi	{r4, r5, pc}
   d6370:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   d6374:	ea4f 3101 	mov.w	r1, r1, lsl #12
   d6378:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   d637c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   d6380:	d002      	beq.n	d6388 <__adddf3+0x70>
   d6382:	4240      	negs	r0, r0
   d6384:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   d6388:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   d638c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   d6390:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   d6394:	d002      	beq.n	d639c <__adddf3+0x84>
   d6396:	4252      	negs	r2, r2
   d6398:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   d639c:	ea94 0f05 	teq	r4, r5
   d63a0:	f000 80a7 	beq.w	d64f2 <__adddf3+0x1da>
   d63a4:	f1a4 0401 	sub.w	r4, r4, #1
   d63a8:	f1d5 0e20 	rsbs	lr, r5, #32
   d63ac:	db0d      	blt.n	d63ca <__adddf3+0xb2>
   d63ae:	fa02 fc0e 	lsl.w	ip, r2, lr
   d63b2:	fa22 f205 	lsr.w	r2, r2, r5
   d63b6:	1880      	adds	r0, r0, r2
   d63b8:	f141 0100 	adc.w	r1, r1, #0
   d63bc:	fa03 f20e 	lsl.w	r2, r3, lr
   d63c0:	1880      	adds	r0, r0, r2
   d63c2:	fa43 f305 	asr.w	r3, r3, r5
   d63c6:	4159      	adcs	r1, r3
   d63c8:	e00e      	b.n	d63e8 <__adddf3+0xd0>
   d63ca:	f1a5 0520 	sub.w	r5, r5, #32
   d63ce:	f10e 0e20 	add.w	lr, lr, #32
   d63d2:	2a01      	cmp	r2, #1
   d63d4:	fa03 fc0e 	lsl.w	ip, r3, lr
   d63d8:	bf28      	it	cs
   d63da:	f04c 0c02 	orrcs.w	ip, ip, #2
   d63de:	fa43 f305 	asr.w	r3, r3, r5
   d63e2:	18c0      	adds	r0, r0, r3
   d63e4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   d63e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   d63ec:	d507      	bpl.n	d63fe <__adddf3+0xe6>
   d63ee:	f04f 0e00 	mov.w	lr, #0
   d63f2:	f1dc 0c00 	rsbs	ip, ip, #0
   d63f6:	eb7e 0000 	sbcs.w	r0, lr, r0
   d63fa:	eb6e 0101 	sbc.w	r1, lr, r1
   d63fe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   d6402:	d31b      	bcc.n	d643c <__adddf3+0x124>
   d6404:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   d6408:	d30c      	bcc.n	d6424 <__adddf3+0x10c>
   d640a:	0849      	lsrs	r1, r1, #1
   d640c:	ea5f 0030 	movs.w	r0, r0, rrx
   d6410:	ea4f 0c3c 	mov.w	ip, ip, rrx
   d6414:	f104 0401 	add.w	r4, r4, #1
   d6418:	ea4f 5244 	mov.w	r2, r4, lsl #21
   d641c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   d6420:	f080 809a 	bcs.w	d6558 <__adddf3+0x240>
   d6424:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   d6428:	bf08      	it	eq
   d642a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   d642e:	f150 0000 	adcs.w	r0, r0, #0
   d6432:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   d6436:	ea41 0105 	orr.w	r1, r1, r5
   d643a:	bd30      	pop	{r4, r5, pc}
   d643c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   d6440:	4140      	adcs	r0, r0
   d6442:	eb41 0101 	adc.w	r1, r1, r1
   d6446:	3c01      	subs	r4, #1
   d6448:	bf28      	it	cs
   d644a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
   d644e:	d2e9      	bcs.n	d6424 <__adddf3+0x10c>
   d6450:	f091 0f00 	teq	r1, #0
   d6454:	bf04      	itt	eq
   d6456:	4601      	moveq	r1, r0
   d6458:	2000      	moveq	r0, #0
   d645a:	fab1 f381 	clz	r3, r1
   d645e:	bf08      	it	eq
   d6460:	3320      	addeq	r3, #32
   d6462:	f1a3 030b 	sub.w	r3, r3, #11
   d6466:	f1b3 0220 	subs.w	r2, r3, #32
   d646a:	da0c      	bge.n	d6486 <__adddf3+0x16e>
   d646c:	320c      	adds	r2, #12
   d646e:	dd08      	ble.n	d6482 <__adddf3+0x16a>
   d6470:	f102 0c14 	add.w	ip, r2, #20
   d6474:	f1c2 020c 	rsb	r2, r2, #12
   d6478:	fa01 f00c 	lsl.w	r0, r1, ip
   d647c:	fa21 f102 	lsr.w	r1, r1, r2
   d6480:	e00c      	b.n	d649c <__adddf3+0x184>
   d6482:	f102 0214 	add.w	r2, r2, #20
   d6486:	bfd8      	it	le
   d6488:	f1c2 0c20 	rsble	ip, r2, #32
   d648c:	fa01 f102 	lsl.w	r1, r1, r2
   d6490:	fa20 fc0c 	lsr.w	ip, r0, ip
   d6494:	bfdc      	itt	le
   d6496:	ea41 010c 	orrle.w	r1, r1, ip
   d649a:	4090      	lslle	r0, r2
   d649c:	1ae4      	subs	r4, r4, r3
   d649e:	bfa2      	ittt	ge
   d64a0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   d64a4:	4329      	orrge	r1, r5
   d64a6:	bd30      	popge	{r4, r5, pc}
   d64a8:	ea6f 0404 	mvn.w	r4, r4
   d64ac:	3c1f      	subs	r4, #31
   d64ae:	da1c      	bge.n	d64ea <__adddf3+0x1d2>
   d64b0:	340c      	adds	r4, #12
   d64b2:	dc0e      	bgt.n	d64d2 <__adddf3+0x1ba>
   d64b4:	f104 0414 	add.w	r4, r4, #20
   d64b8:	f1c4 0220 	rsb	r2, r4, #32
   d64bc:	fa20 f004 	lsr.w	r0, r0, r4
   d64c0:	fa01 f302 	lsl.w	r3, r1, r2
   d64c4:	ea40 0003 	orr.w	r0, r0, r3
   d64c8:	fa21 f304 	lsr.w	r3, r1, r4
   d64cc:	ea45 0103 	orr.w	r1, r5, r3
   d64d0:	bd30      	pop	{r4, r5, pc}
   d64d2:	f1c4 040c 	rsb	r4, r4, #12
   d64d6:	f1c4 0220 	rsb	r2, r4, #32
   d64da:	fa20 f002 	lsr.w	r0, r0, r2
   d64de:	fa01 f304 	lsl.w	r3, r1, r4
   d64e2:	ea40 0003 	orr.w	r0, r0, r3
   d64e6:	4629      	mov	r1, r5
   d64e8:	bd30      	pop	{r4, r5, pc}
   d64ea:	fa21 f004 	lsr.w	r0, r1, r4
   d64ee:	4629      	mov	r1, r5
   d64f0:	bd30      	pop	{r4, r5, pc}
   d64f2:	f094 0f00 	teq	r4, #0
   d64f6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   d64fa:	bf06      	itte	eq
   d64fc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   d6500:	3401      	addeq	r4, #1
   d6502:	3d01      	subne	r5, #1
   d6504:	e74e      	b.n	d63a4 <__adddf3+0x8c>
   d6506:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   d650a:	bf18      	it	ne
   d650c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   d6510:	d029      	beq.n	d6566 <__adddf3+0x24e>
   d6512:	ea94 0f05 	teq	r4, r5
   d6516:	bf08      	it	eq
   d6518:	ea90 0f02 	teqeq	r0, r2
   d651c:	d005      	beq.n	d652a <__adddf3+0x212>
   d651e:	ea54 0c00 	orrs.w	ip, r4, r0
   d6522:	bf04      	itt	eq
   d6524:	4619      	moveq	r1, r3
   d6526:	4610      	moveq	r0, r2
   d6528:	bd30      	pop	{r4, r5, pc}
   d652a:	ea91 0f03 	teq	r1, r3
   d652e:	bf1e      	ittt	ne
   d6530:	2100      	movne	r1, #0
   d6532:	2000      	movne	r0, #0
   d6534:	bd30      	popne	{r4, r5, pc}
   d6536:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   d653a:	d105      	bne.n	d6548 <__adddf3+0x230>
   d653c:	0040      	lsls	r0, r0, #1
   d653e:	4149      	adcs	r1, r1
   d6540:	bf28      	it	cs
   d6542:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   d6546:	bd30      	pop	{r4, r5, pc}
   d6548:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   d654c:	bf3c      	itt	cc
   d654e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   d6552:	bd30      	popcc	{r4, r5, pc}
   d6554:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   d6558:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   d655c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   d6560:	f04f 0000 	mov.w	r0, #0
   d6564:	bd30      	pop	{r4, r5, pc}
   d6566:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   d656a:	bf1a      	itte	ne
   d656c:	4619      	movne	r1, r3
   d656e:	4610      	movne	r0, r2
   d6570:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   d6574:	bf1c      	itt	ne
   d6576:	460b      	movne	r3, r1
   d6578:	4602      	movne	r2, r0
   d657a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   d657e:	bf06      	itte	eq
   d6580:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   d6584:	ea91 0f03 	teqeq	r1, r3
   d6588:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   d658c:	bd30      	pop	{r4, r5, pc}
   d658e:	bf00      	nop

000d6590 <__aeabi_ui2d>:
   d6590:	f090 0f00 	teq	r0, #0
   d6594:	bf04      	itt	eq
   d6596:	2100      	moveq	r1, #0
   d6598:	4770      	bxeq	lr
   d659a:	b530      	push	{r4, r5, lr}
   d659c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   d65a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   d65a4:	f04f 0500 	mov.w	r5, #0
   d65a8:	f04f 0100 	mov.w	r1, #0
   d65ac:	e750      	b.n	d6450 <__adddf3+0x138>
   d65ae:	bf00      	nop

000d65b0 <__aeabi_i2d>:
   d65b0:	f090 0f00 	teq	r0, #0
   d65b4:	bf04      	itt	eq
   d65b6:	2100      	moveq	r1, #0
   d65b8:	4770      	bxeq	lr
   d65ba:	b530      	push	{r4, r5, lr}
   d65bc:	f44f 6480 	mov.w	r4, #1024	; 0x400
   d65c0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   d65c4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   d65c8:	bf48      	it	mi
   d65ca:	4240      	negmi	r0, r0
   d65cc:	f04f 0100 	mov.w	r1, #0
   d65d0:	e73e      	b.n	d6450 <__adddf3+0x138>
   d65d2:	bf00      	nop

000d65d4 <__aeabi_f2d>:
   d65d4:	0042      	lsls	r2, r0, #1
   d65d6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   d65da:	ea4f 0131 	mov.w	r1, r1, rrx
   d65de:	ea4f 7002 	mov.w	r0, r2, lsl #28
   d65e2:	bf1f      	itttt	ne
   d65e4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   d65e8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   d65ec:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   d65f0:	4770      	bxne	lr
   d65f2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   d65f6:	bf08      	it	eq
   d65f8:	4770      	bxeq	lr
   d65fa:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   d65fe:	bf04      	itt	eq
   d6600:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   d6604:	4770      	bxeq	lr
   d6606:	b530      	push	{r4, r5, lr}
   d6608:	f44f 7460 	mov.w	r4, #896	; 0x380
   d660c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   d6610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   d6614:	e71c      	b.n	d6450 <__adddf3+0x138>
   d6616:	bf00      	nop

000d6618 <__aeabi_ul2d>:
   d6618:	ea50 0201 	orrs.w	r2, r0, r1
   d661c:	bf08      	it	eq
   d661e:	4770      	bxeq	lr
   d6620:	b530      	push	{r4, r5, lr}
   d6622:	f04f 0500 	mov.w	r5, #0
   d6626:	e00a      	b.n	d663e <__aeabi_l2d+0x16>

000d6628 <__aeabi_l2d>:
   d6628:	ea50 0201 	orrs.w	r2, r0, r1
   d662c:	bf08      	it	eq
   d662e:	4770      	bxeq	lr
   d6630:	b530      	push	{r4, r5, lr}
   d6632:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   d6636:	d502      	bpl.n	d663e <__aeabi_l2d+0x16>
   d6638:	4240      	negs	r0, r0
   d663a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   d663e:	f44f 6480 	mov.w	r4, #1024	; 0x400
   d6642:	f104 0432 	add.w	r4, r4, #50	; 0x32
   d6646:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   d664a:	f43f aed8 	beq.w	d63fe <__adddf3+0xe6>
   d664e:	f04f 0203 	mov.w	r2, #3
   d6652:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   d6656:	bf18      	it	ne
   d6658:	3203      	addne	r2, #3
   d665a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   d665e:	bf18      	it	ne
   d6660:	3203      	addne	r2, #3
   d6662:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   d6666:	f1c2 0320 	rsb	r3, r2, #32
   d666a:	fa00 fc03 	lsl.w	ip, r0, r3
   d666e:	fa20 f002 	lsr.w	r0, r0, r2
   d6672:	fa01 fe03 	lsl.w	lr, r1, r3
   d6676:	ea40 000e 	orr.w	r0, r0, lr
   d667a:	fa21 f102 	lsr.w	r1, r1, r2
   d667e:	4414      	add	r4, r2
   d6680:	e6bd      	b.n	d63fe <__adddf3+0xe6>
   d6682:	bf00      	nop

000d6684 <__aeabi_dmul>:
   d6684:	b570      	push	{r4, r5, r6, lr}
   d6686:	f04f 0cff 	mov.w	ip, #255	; 0xff
   d668a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   d668e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   d6692:	bf1d      	ittte	ne
   d6694:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   d6698:	ea94 0f0c 	teqne	r4, ip
   d669c:	ea95 0f0c 	teqne	r5, ip
   d66a0:	f000 f8de 	bleq	d6860 <__aeabi_dmul+0x1dc>
   d66a4:	442c      	add	r4, r5
   d66a6:	ea81 0603 	eor.w	r6, r1, r3
   d66aa:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   d66ae:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   d66b2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   d66b6:	bf18      	it	ne
   d66b8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   d66bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   d66c0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   d66c4:	d038      	beq.n	d6738 <__aeabi_dmul+0xb4>
   d66c6:	fba0 ce02 	umull	ip, lr, r0, r2
   d66ca:	f04f 0500 	mov.w	r5, #0
   d66ce:	fbe1 e502 	umlal	lr, r5, r1, r2
   d66d2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   d66d6:	fbe0 e503 	umlal	lr, r5, r0, r3
   d66da:	f04f 0600 	mov.w	r6, #0
   d66de:	fbe1 5603 	umlal	r5, r6, r1, r3
   d66e2:	f09c 0f00 	teq	ip, #0
   d66e6:	bf18      	it	ne
   d66e8:	f04e 0e01 	orrne.w	lr, lr, #1
   d66ec:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   d66f0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   d66f4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   d66f8:	d204      	bcs.n	d6704 <__aeabi_dmul+0x80>
   d66fa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   d66fe:	416d      	adcs	r5, r5
   d6700:	eb46 0606 	adc.w	r6, r6, r6
   d6704:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   d6708:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   d670c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   d6710:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   d6714:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   d6718:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   d671c:	bf88      	it	hi
   d671e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   d6722:	d81e      	bhi.n	d6762 <__aeabi_dmul+0xde>
   d6724:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   d6728:	bf08      	it	eq
   d672a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   d672e:	f150 0000 	adcs.w	r0, r0, #0
   d6732:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   d6736:	bd70      	pop	{r4, r5, r6, pc}
   d6738:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   d673c:	ea46 0101 	orr.w	r1, r6, r1
   d6740:	ea40 0002 	orr.w	r0, r0, r2
   d6744:	ea81 0103 	eor.w	r1, r1, r3
   d6748:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   d674c:	bfc2      	ittt	gt
   d674e:	ebd4 050c 	rsbsgt	r5, r4, ip
   d6752:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   d6756:	bd70      	popgt	{r4, r5, r6, pc}
   d6758:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   d675c:	f04f 0e00 	mov.w	lr, #0
   d6760:	3c01      	subs	r4, #1
   d6762:	f300 80ab 	bgt.w	d68bc <__aeabi_dmul+0x238>
   d6766:	f114 0f36 	cmn.w	r4, #54	; 0x36
   d676a:	bfde      	ittt	le
   d676c:	2000      	movle	r0, #0
   d676e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   d6772:	bd70      	pople	{r4, r5, r6, pc}
   d6774:	f1c4 0400 	rsb	r4, r4, #0
   d6778:	3c20      	subs	r4, #32
   d677a:	da35      	bge.n	d67e8 <__aeabi_dmul+0x164>
   d677c:	340c      	adds	r4, #12
   d677e:	dc1b      	bgt.n	d67b8 <__aeabi_dmul+0x134>
   d6780:	f104 0414 	add.w	r4, r4, #20
   d6784:	f1c4 0520 	rsb	r5, r4, #32
   d6788:	fa00 f305 	lsl.w	r3, r0, r5
   d678c:	fa20 f004 	lsr.w	r0, r0, r4
   d6790:	fa01 f205 	lsl.w	r2, r1, r5
   d6794:	ea40 0002 	orr.w	r0, r0, r2
   d6798:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   d679c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   d67a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   d67a4:	fa21 f604 	lsr.w	r6, r1, r4
   d67a8:	eb42 0106 	adc.w	r1, r2, r6
   d67ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   d67b0:	bf08      	it	eq
   d67b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   d67b6:	bd70      	pop	{r4, r5, r6, pc}
   d67b8:	f1c4 040c 	rsb	r4, r4, #12
   d67bc:	f1c4 0520 	rsb	r5, r4, #32
   d67c0:	fa00 f304 	lsl.w	r3, r0, r4
   d67c4:	fa20 f005 	lsr.w	r0, r0, r5
   d67c8:	fa01 f204 	lsl.w	r2, r1, r4
   d67cc:	ea40 0002 	orr.w	r0, r0, r2
   d67d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   d67d4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   d67d8:	f141 0100 	adc.w	r1, r1, #0
   d67dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   d67e0:	bf08      	it	eq
   d67e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   d67e6:	bd70      	pop	{r4, r5, r6, pc}
   d67e8:	f1c4 0520 	rsb	r5, r4, #32
   d67ec:	fa00 f205 	lsl.w	r2, r0, r5
   d67f0:	ea4e 0e02 	orr.w	lr, lr, r2
   d67f4:	fa20 f304 	lsr.w	r3, r0, r4
   d67f8:	fa01 f205 	lsl.w	r2, r1, r5
   d67fc:	ea43 0302 	orr.w	r3, r3, r2
   d6800:	fa21 f004 	lsr.w	r0, r1, r4
   d6804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   d6808:	fa21 f204 	lsr.w	r2, r1, r4
   d680c:	ea20 0002 	bic.w	r0, r0, r2
   d6810:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   d6814:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   d6818:	bf08      	it	eq
   d681a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   d681e:	bd70      	pop	{r4, r5, r6, pc}
   d6820:	f094 0f00 	teq	r4, #0
   d6824:	d10f      	bne.n	d6846 <__aeabi_dmul+0x1c2>
   d6826:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   d682a:	0040      	lsls	r0, r0, #1
   d682c:	eb41 0101 	adc.w	r1, r1, r1
   d6830:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   d6834:	bf08      	it	eq
   d6836:	3c01      	subeq	r4, #1
   d6838:	d0f7      	beq.n	d682a <__aeabi_dmul+0x1a6>
   d683a:	ea41 0106 	orr.w	r1, r1, r6
   d683e:	f095 0f00 	teq	r5, #0
   d6842:	bf18      	it	ne
   d6844:	4770      	bxne	lr
   d6846:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   d684a:	0052      	lsls	r2, r2, #1
   d684c:	eb43 0303 	adc.w	r3, r3, r3
   d6850:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   d6854:	bf08      	it	eq
   d6856:	3d01      	subeq	r5, #1
   d6858:	d0f7      	beq.n	d684a <__aeabi_dmul+0x1c6>
   d685a:	ea43 0306 	orr.w	r3, r3, r6
   d685e:	4770      	bx	lr
   d6860:	ea94 0f0c 	teq	r4, ip
   d6864:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   d6868:	bf18      	it	ne
   d686a:	ea95 0f0c 	teqne	r5, ip
   d686e:	d00c      	beq.n	d688a <__aeabi_dmul+0x206>
   d6870:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   d6874:	bf18      	it	ne
   d6876:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   d687a:	d1d1      	bne.n	d6820 <__aeabi_dmul+0x19c>
   d687c:	ea81 0103 	eor.w	r1, r1, r3
   d6880:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   d6884:	f04f 0000 	mov.w	r0, #0
   d6888:	bd70      	pop	{r4, r5, r6, pc}
   d688a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   d688e:	bf06      	itte	eq
   d6890:	4610      	moveq	r0, r2
   d6892:	4619      	moveq	r1, r3
   d6894:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   d6898:	d019      	beq.n	d68ce <__aeabi_dmul+0x24a>
   d689a:	ea94 0f0c 	teq	r4, ip
   d689e:	d102      	bne.n	d68a6 <__aeabi_dmul+0x222>
   d68a0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   d68a4:	d113      	bne.n	d68ce <__aeabi_dmul+0x24a>
   d68a6:	ea95 0f0c 	teq	r5, ip
   d68aa:	d105      	bne.n	d68b8 <__aeabi_dmul+0x234>
   d68ac:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   d68b0:	bf1c      	itt	ne
   d68b2:	4610      	movne	r0, r2
   d68b4:	4619      	movne	r1, r3
   d68b6:	d10a      	bne.n	d68ce <__aeabi_dmul+0x24a>
   d68b8:	ea81 0103 	eor.w	r1, r1, r3
   d68bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   d68c0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   d68c4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   d68c8:	f04f 0000 	mov.w	r0, #0
   d68cc:	bd70      	pop	{r4, r5, r6, pc}
   d68ce:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   d68d2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   d68d6:	bd70      	pop	{r4, r5, r6, pc}

000d68d8 <__aeabi_ddiv>:
   d68d8:	b570      	push	{r4, r5, r6, lr}
   d68da:	f04f 0cff 	mov.w	ip, #255	; 0xff
   d68de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   d68e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   d68e6:	bf1d      	ittte	ne
   d68e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   d68ec:	ea94 0f0c 	teqne	r4, ip
   d68f0:	ea95 0f0c 	teqne	r5, ip
   d68f4:	f000 f8a7 	bleq	d6a46 <__aeabi_ddiv+0x16e>
   d68f8:	eba4 0405 	sub.w	r4, r4, r5
   d68fc:	ea81 0e03 	eor.w	lr, r1, r3
   d6900:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   d6904:	ea4f 3101 	mov.w	r1, r1, lsl #12
   d6908:	f000 8088 	beq.w	d6a1c <__aeabi_ddiv+0x144>
   d690c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   d6910:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   d6914:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   d6918:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   d691c:	ea4f 2202 	mov.w	r2, r2, lsl #8
   d6920:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   d6924:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   d6928:	ea4f 2600 	mov.w	r6, r0, lsl #8
   d692c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   d6930:	429d      	cmp	r5, r3
   d6932:	bf08      	it	eq
   d6934:	4296      	cmpeq	r6, r2
   d6936:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   d693a:	f504 7440 	add.w	r4, r4, #768	; 0x300
   d693e:	d202      	bcs.n	d6946 <__aeabi_ddiv+0x6e>
   d6940:	085b      	lsrs	r3, r3, #1
   d6942:	ea4f 0232 	mov.w	r2, r2, rrx
   d6946:	1ab6      	subs	r6, r6, r2
   d6948:	eb65 0503 	sbc.w	r5, r5, r3
   d694c:	085b      	lsrs	r3, r3, #1
   d694e:	ea4f 0232 	mov.w	r2, r2, rrx
   d6952:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   d6956:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   d695a:	ebb6 0e02 	subs.w	lr, r6, r2
   d695e:	eb75 0e03 	sbcs.w	lr, r5, r3
   d6962:	bf22      	ittt	cs
   d6964:	1ab6      	subcs	r6, r6, r2
   d6966:	4675      	movcs	r5, lr
   d6968:	ea40 000c 	orrcs.w	r0, r0, ip
   d696c:	085b      	lsrs	r3, r3, #1
   d696e:	ea4f 0232 	mov.w	r2, r2, rrx
   d6972:	ebb6 0e02 	subs.w	lr, r6, r2
   d6976:	eb75 0e03 	sbcs.w	lr, r5, r3
   d697a:	bf22      	ittt	cs
   d697c:	1ab6      	subcs	r6, r6, r2
   d697e:	4675      	movcs	r5, lr
   d6980:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   d6984:	085b      	lsrs	r3, r3, #1
   d6986:	ea4f 0232 	mov.w	r2, r2, rrx
   d698a:	ebb6 0e02 	subs.w	lr, r6, r2
   d698e:	eb75 0e03 	sbcs.w	lr, r5, r3
   d6992:	bf22      	ittt	cs
   d6994:	1ab6      	subcs	r6, r6, r2
   d6996:	4675      	movcs	r5, lr
   d6998:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   d699c:	085b      	lsrs	r3, r3, #1
   d699e:	ea4f 0232 	mov.w	r2, r2, rrx
   d69a2:	ebb6 0e02 	subs.w	lr, r6, r2
   d69a6:	eb75 0e03 	sbcs.w	lr, r5, r3
   d69aa:	bf22      	ittt	cs
   d69ac:	1ab6      	subcs	r6, r6, r2
   d69ae:	4675      	movcs	r5, lr
   d69b0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   d69b4:	ea55 0e06 	orrs.w	lr, r5, r6
   d69b8:	d018      	beq.n	d69ec <__aeabi_ddiv+0x114>
   d69ba:	ea4f 1505 	mov.w	r5, r5, lsl #4
   d69be:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   d69c2:	ea4f 1606 	mov.w	r6, r6, lsl #4
   d69c6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   d69ca:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   d69ce:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   d69d2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   d69d6:	d1c0      	bne.n	d695a <__aeabi_ddiv+0x82>
   d69d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   d69dc:	d10b      	bne.n	d69f6 <__aeabi_ddiv+0x11e>
   d69de:	ea41 0100 	orr.w	r1, r1, r0
   d69e2:	f04f 0000 	mov.w	r0, #0
   d69e6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   d69ea:	e7b6      	b.n	d695a <__aeabi_ddiv+0x82>
   d69ec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   d69f0:	bf04      	itt	eq
   d69f2:	4301      	orreq	r1, r0
   d69f4:	2000      	moveq	r0, #0
   d69f6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   d69fa:	bf88      	it	hi
   d69fc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   d6a00:	f63f aeaf 	bhi.w	d6762 <__aeabi_dmul+0xde>
   d6a04:	ebb5 0c03 	subs.w	ip, r5, r3
   d6a08:	bf04      	itt	eq
   d6a0a:	ebb6 0c02 	subseq.w	ip, r6, r2
   d6a0e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   d6a12:	f150 0000 	adcs.w	r0, r0, #0
   d6a16:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   d6a1a:	bd70      	pop	{r4, r5, r6, pc}
   d6a1c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   d6a20:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   d6a24:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   d6a28:	bfc2      	ittt	gt
   d6a2a:	ebd4 050c 	rsbsgt	r5, r4, ip
   d6a2e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   d6a32:	bd70      	popgt	{r4, r5, r6, pc}
   d6a34:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   d6a38:	f04f 0e00 	mov.w	lr, #0
   d6a3c:	3c01      	subs	r4, #1
   d6a3e:	e690      	b.n	d6762 <__aeabi_dmul+0xde>
   d6a40:	ea45 0e06 	orr.w	lr, r5, r6
   d6a44:	e68d      	b.n	d6762 <__aeabi_dmul+0xde>
   d6a46:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   d6a4a:	ea94 0f0c 	teq	r4, ip
   d6a4e:	bf08      	it	eq
   d6a50:	ea95 0f0c 	teqeq	r5, ip
   d6a54:	f43f af3b 	beq.w	d68ce <__aeabi_dmul+0x24a>
   d6a58:	ea94 0f0c 	teq	r4, ip
   d6a5c:	d10a      	bne.n	d6a74 <__aeabi_ddiv+0x19c>
   d6a5e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   d6a62:	f47f af34 	bne.w	d68ce <__aeabi_dmul+0x24a>
   d6a66:	ea95 0f0c 	teq	r5, ip
   d6a6a:	f47f af25 	bne.w	d68b8 <__aeabi_dmul+0x234>
   d6a6e:	4610      	mov	r0, r2
   d6a70:	4619      	mov	r1, r3
   d6a72:	e72c      	b.n	d68ce <__aeabi_dmul+0x24a>
   d6a74:	ea95 0f0c 	teq	r5, ip
   d6a78:	d106      	bne.n	d6a88 <__aeabi_ddiv+0x1b0>
   d6a7a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   d6a7e:	f43f aefd 	beq.w	d687c <__aeabi_dmul+0x1f8>
   d6a82:	4610      	mov	r0, r2
   d6a84:	4619      	mov	r1, r3
   d6a86:	e722      	b.n	d68ce <__aeabi_dmul+0x24a>
   d6a88:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   d6a8c:	bf18      	it	ne
   d6a8e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   d6a92:	f47f aec5 	bne.w	d6820 <__aeabi_dmul+0x19c>
   d6a96:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   d6a9a:	f47f af0d 	bne.w	d68b8 <__aeabi_dmul+0x234>
   d6a9e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   d6aa2:	f47f aeeb 	bne.w	d687c <__aeabi_dmul+0x1f8>
   d6aa6:	e712      	b.n	d68ce <__aeabi_dmul+0x24a>

000d6aa8 <__gedf2>:
   d6aa8:	f04f 3cff 	mov.w	ip, #4294967295
   d6aac:	e006      	b.n	d6abc <__cmpdf2+0x4>
   d6aae:	bf00      	nop

000d6ab0 <__ledf2>:
   d6ab0:	f04f 0c01 	mov.w	ip, #1
   d6ab4:	e002      	b.n	d6abc <__cmpdf2+0x4>
   d6ab6:	bf00      	nop

000d6ab8 <__cmpdf2>:
   d6ab8:	f04f 0c01 	mov.w	ip, #1
   d6abc:	f84d cd04 	str.w	ip, [sp, #-4]!
   d6ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   d6ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   d6ac8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   d6acc:	bf18      	it	ne
   d6ace:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   d6ad2:	d01b      	beq.n	d6b0c <__cmpdf2+0x54>
   d6ad4:	b001      	add	sp, #4
   d6ad6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   d6ada:	bf0c      	ite	eq
   d6adc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   d6ae0:	ea91 0f03 	teqne	r1, r3
   d6ae4:	bf02      	ittt	eq
   d6ae6:	ea90 0f02 	teqeq	r0, r2
   d6aea:	2000      	moveq	r0, #0
   d6aec:	4770      	bxeq	lr
   d6aee:	f110 0f00 	cmn.w	r0, #0
   d6af2:	ea91 0f03 	teq	r1, r3
   d6af6:	bf58      	it	pl
   d6af8:	4299      	cmppl	r1, r3
   d6afa:	bf08      	it	eq
   d6afc:	4290      	cmpeq	r0, r2
   d6afe:	bf2c      	ite	cs
   d6b00:	17d8      	asrcs	r0, r3, #31
   d6b02:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   d6b06:	f040 0001 	orr.w	r0, r0, #1
   d6b0a:	4770      	bx	lr
   d6b0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   d6b10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   d6b14:	d102      	bne.n	d6b1c <__cmpdf2+0x64>
   d6b16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   d6b1a:	d107      	bne.n	d6b2c <__cmpdf2+0x74>
   d6b1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   d6b20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   d6b24:	d1d6      	bne.n	d6ad4 <__cmpdf2+0x1c>
   d6b26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   d6b2a:	d0d3      	beq.n	d6ad4 <__cmpdf2+0x1c>
   d6b2c:	f85d 0b04 	ldr.w	r0, [sp], #4
   d6b30:	4770      	bx	lr
   d6b32:	bf00      	nop

000d6b34 <__aeabi_cdrcmple>:
   d6b34:	4684      	mov	ip, r0
   d6b36:	4610      	mov	r0, r2
   d6b38:	4662      	mov	r2, ip
   d6b3a:	468c      	mov	ip, r1
   d6b3c:	4619      	mov	r1, r3
   d6b3e:	4663      	mov	r3, ip
   d6b40:	e000      	b.n	d6b44 <__aeabi_cdcmpeq>
   d6b42:	bf00      	nop

000d6b44 <__aeabi_cdcmpeq>:
   d6b44:	b501      	push	{r0, lr}
   d6b46:	f7ff ffb7 	bl	d6ab8 <__cmpdf2>
   d6b4a:	2800      	cmp	r0, #0
   d6b4c:	bf48      	it	mi
   d6b4e:	f110 0f00 	cmnmi.w	r0, #0
   d6b52:	bd01      	pop	{r0, pc}

000d6b54 <__aeabi_dcmpeq>:
   d6b54:	f84d ed08 	str.w	lr, [sp, #-8]!
   d6b58:	f7ff fff4 	bl	d6b44 <__aeabi_cdcmpeq>
   d6b5c:	bf0c      	ite	eq
   d6b5e:	2001      	moveq	r0, #1
   d6b60:	2000      	movne	r0, #0
   d6b62:	f85d fb08 	ldr.w	pc, [sp], #8
   d6b66:	bf00      	nop

000d6b68 <__aeabi_dcmplt>:
   d6b68:	f84d ed08 	str.w	lr, [sp, #-8]!
   d6b6c:	f7ff ffea 	bl	d6b44 <__aeabi_cdcmpeq>
   d6b70:	bf34      	ite	cc
   d6b72:	2001      	movcc	r0, #1
   d6b74:	2000      	movcs	r0, #0
   d6b76:	f85d fb08 	ldr.w	pc, [sp], #8
   d6b7a:	bf00      	nop

000d6b7c <__aeabi_dcmple>:
   d6b7c:	f84d ed08 	str.w	lr, [sp, #-8]!
   d6b80:	f7ff ffe0 	bl	d6b44 <__aeabi_cdcmpeq>
   d6b84:	bf94      	ite	ls
   d6b86:	2001      	movls	r0, #1
   d6b88:	2000      	movhi	r0, #0
   d6b8a:	f85d fb08 	ldr.w	pc, [sp], #8
   d6b8e:	bf00      	nop

000d6b90 <__aeabi_dcmpge>:
   d6b90:	f84d ed08 	str.w	lr, [sp, #-8]!
   d6b94:	f7ff ffce 	bl	d6b34 <__aeabi_cdrcmple>
   d6b98:	bf94      	ite	ls
   d6b9a:	2001      	movls	r0, #1
   d6b9c:	2000      	movhi	r0, #0
   d6b9e:	f85d fb08 	ldr.w	pc, [sp], #8
   d6ba2:	bf00      	nop

000d6ba4 <__aeabi_dcmpgt>:
   d6ba4:	f84d ed08 	str.w	lr, [sp, #-8]!
   d6ba8:	f7ff ffc4 	bl	d6b34 <__aeabi_cdrcmple>
   d6bac:	bf34      	ite	cc
   d6bae:	2001      	movcc	r0, #1
   d6bb0:	2000      	movcs	r0, #0
   d6bb2:	f85d fb08 	ldr.w	pc, [sp], #8
   d6bb6:	bf00      	nop

000d6bb8 <__aeabi_d2iz>:
   d6bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
   d6bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   d6bc0:	d215      	bcs.n	d6bee <__aeabi_d2iz+0x36>
   d6bc2:	d511      	bpl.n	d6be8 <__aeabi_d2iz+0x30>
   d6bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   d6bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   d6bcc:	d912      	bls.n	d6bf4 <__aeabi_d2iz+0x3c>
   d6bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   d6bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   d6bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   d6bda:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   d6bde:	fa23 f002 	lsr.w	r0, r3, r2
   d6be2:	bf18      	it	ne
   d6be4:	4240      	negne	r0, r0
   d6be6:	4770      	bx	lr
   d6be8:	f04f 0000 	mov.w	r0, #0
   d6bec:	4770      	bx	lr
   d6bee:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   d6bf2:	d105      	bne.n	d6c00 <__aeabi_d2iz+0x48>
   d6bf4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   d6bf8:	bf08      	it	eq
   d6bfa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   d6bfe:	4770      	bx	lr
   d6c00:	f04f 0000 	mov.w	r0, #0
   d6c04:	4770      	bx	lr
   d6c06:	bf00      	nop

000d6c08 <__aeabi_d2f>:
   d6c08:	ea4f 0241 	mov.w	r2, r1, lsl #1
   d6c0c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   d6c10:	bf24      	itt	cs
   d6c12:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   d6c16:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   d6c1a:	d90d      	bls.n	d6c38 <__aeabi_d2f+0x30>
   d6c1c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   d6c20:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   d6c24:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   d6c28:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   d6c2c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   d6c30:	bf08      	it	eq
   d6c32:	f020 0001 	biceq.w	r0, r0, #1
   d6c36:	4770      	bx	lr
   d6c38:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   d6c3c:	d121      	bne.n	d6c82 <__aeabi_d2f+0x7a>
   d6c3e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   d6c42:	bfbc      	itt	lt
   d6c44:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   d6c48:	4770      	bxlt	lr
   d6c4a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   d6c4e:	ea4f 5252 	mov.w	r2, r2, lsr #21
   d6c52:	f1c2 0218 	rsb	r2, r2, #24
   d6c56:	f1c2 0c20 	rsb	ip, r2, #32
   d6c5a:	fa10 f30c 	lsls.w	r3, r0, ip
   d6c5e:	fa20 f002 	lsr.w	r0, r0, r2
   d6c62:	bf18      	it	ne
   d6c64:	f040 0001 	orrne.w	r0, r0, #1
   d6c68:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   d6c6c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   d6c70:	fa03 fc0c 	lsl.w	ip, r3, ip
   d6c74:	ea40 000c 	orr.w	r0, r0, ip
   d6c78:	fa23 f302 	lsr.w	r3, r3, r2
   d6c7c:	ea4f 0343 	mov.w	r3, r3, lsl #1
   d6c80:	e7cc      	b.n	d6c1c <__aeabi_d2f+0x14>
   d6c82:	ea7f 5362 	mvns.w	r3, r2, asr #21
   d6c86:	d107      	bne.n	d6c98 <__aeabi_d2f+0x90>
   d6c88:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   d6c8c:	bf1e      	ittt	ne
   d6c8e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   d6c92:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   d6c96:	4770      	bxne	lr
   d6c98:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   d6c9c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   d6ca0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   d6ca4:	4770      	bx	lr
   d6ca6:	bf00      	nop

000d6ca8 <__cxa_atexit>:
   d6ca8:	b510      	push	{r4, lr}
   d6caa:	4c05      	ldr	r4, [pc, #20]	; (d6cc0 <__cxa_atexit+0x18>)
   d6cac:	4613      	mov	r3, r2
   d6cae:	b12c      	cbz	r4, d6cbc <__cxa_atexit+0x14>
   d6cb0:	460a      	mov	r2, r1
   d6cb2:	4601      	mov	r1, r0
   d6cb4:	2002      	movs	r0, #2
   d6cb6:	f3af 8000 	nop.w
   d6cba:	bd10      	pop	{r4, pc}
   d6cbc:	4620      	mov	r0, r4
   d6cbe:	e7fc      	b.n	d6cba <__cxa_atexit+0x12>
   d6cc0:	00000000 	.word	0x00000000

000d6cc4 <memcpy>:
   d6cc4:	440a      	add	r2, r1
   d6cc6:	4291      	cmp	r1, r2
   d6cc8:	f100 33ff 	add.w	r3, r0, #4294967295
   d6ccc:	d100      	bne.n	d6cd0 <memcpy+0xc>
   d6cce:	4770      	bx	lr
   d6cd0:	b510      	push	{r4, lr}
   d6cd2:	f811 4b01 	ldrb.w	r4, [r1], #1
   d6cd6:	f803 4f01 	strb.w	r4, [r3, #1]!
   d6cda:	4291      	cmp	r1, r2
   d6cdc:	d1f9      	bne.n	d6cd2 <memcpy+0xe>
   d6cde:	bd10      	pop	{r4, pc}

000d6ce0 <memset>:
   d6ce0:	4402      	add	r2, r0
   d6ce2:	4603      	mov	r3, r0
   d6ce4:	4293      	cmp	r3, r2
   d6ce6:	d100      	bne.n	d6cea <memset+0xa>
   d6ce8:	4770      	bx	lr
   d6cea:	f803 1b01 	strb.w	r1, [r3], #1
   d6cee:	e7f9      	b.n	d6ce4 <memset+0x4>

000d6cf0 <srand>:
   d6cf0:	b538      	push	{r3, r4, r5, lr}
   d6cf2:	4b0d      	ldr	r3, [pc, #52]	; (d6d28 <srand+0x38>)
   d6cf4:	681d      	ldr	r5, [r3, #0]
   d6cf6:	6bab      	ldr	r3, [r5, #56]	; 0x38
   d6cf8:	4604      	mov	r4, r0
   d6cfa:	b97b      	cbnz	r3, d6d1c <srand+0x2c>
   d6cfc:	2018      	movs	r0, #24
   d6cfe:	f7fd fbe3 	bl	d44c8 <malloc>
   d6d02:	4a0a      	ldr	r2, [pc, #40]	; (d6d2c <srand+0x3c>)
   d6d04:	4b0a      	ldr	r3, [pc, #40]	; (d6d30 <srand+0x40>)
   d6d06:	63a8      	str	r0, [r5, #56]	; 0x38
   d6d08:	e9c0 2300 	strd	r2, r3, [r0]
   d6d0c:	4b09      	ldr	r3, [pc, #36]	; (d6d34 <srand+0x44>)
   d6d0e:	6083      	str	r3, [r0, #8]
   d6d10:	230b      	movs	r3, #11
   d6d12:	8183      	strh	r3, [r0, #12]
   d6d14:	2201      	movs	r2, #1
   d6d16:	2300      	movs	r3, #0
   d6d18:	e9c0 2304 	strd	r2, r3, [r0, #16]
   d6d1c:	6bab      	ldr	r3, [r5, #56]	; 0x38
   d6d1e:	2200      	movs	r2, #0
   d6d20:	611c      	str	r4, [r3, #16]
   d6d22:	615a      	str	r2, [r3, #20]
   d6d24:	bd38      	pop	{r3, r4, r5, pc}
   d6d26:	bf00      	nop
   d6d28:	2003e5d4 	.word	0x2003e5d4
   d6d2c:	abcd330e 	.word	0xabcd330e
   d6d30:	e66d1234 	.word	0xe66d1234
   d6d34:	0005deec 	.word	0x0005deec

000d6d38 <strlen>:
   d6d38:	4603      	mov	r3, r0
   d6d3a:	f813 2b01 	ldrb.w	r2, [r3], #1
   d6d3e:	2a00      	cmp	r2, #0
   d6d40:	d1fb      	bne.n	d6d3a <strlen+0x2>
   d6d42:	1a18      	subs	r0, r3, r0
   d6d44:	3801      	subs	r0, #1
   d6d46:	4770      	bx	lr

000d6d48 <dynalib_user>:
   d6d48:	4021 000d 405d 000d 4085 000d 4089 000d     !@..]@...@...@..
   d6d58:	0000 0000 3025 322e 0a66 0000               ....%0.2f...

000d6d64 <_ZTVN5spark13EthernetClassE>:
	...
   d6d6c:	4567 000d 455d 000d 4553 000d 4549 000d     gE..]E..SE..IE..
   d6d7c:	453d 000d 4531 000d 4525 000d 451d 000d     =E..1E..%E...E..
   d6d8c:	4513 000d 4509 000d 4d09 000d 7061 0070     .E...E...M..app.
   d6d9c:	5925 252d 2d6d 6425 2554 3a48 4d25 253a     %Y-%m-%dT%H:%M:%
   d6dac:	2553 007a 7361 7463 6d69 0065               S%z.asctime.

000d6db8 <_ZTV9IPAddress>:
	...
   d6dc0:	48cd 000d 48bd 000d 48bf 000d               .H...H...H..

000d6dcc <_ZTV9USBSerial>:
	...
   d6dd4:	49a3 000d 4a0b 000d 49e1 000d 462d 000d     .I...J...I..-F..
   d6de4:	49d3 000d 49a5 000d 49b5 000d 4a05 000d     .I...I...I...J..
   d6df4:	49c5 000d 499f 000d                         .I...I..

000d6dfc <_ZTV11USARTSerial>:
	...
   d6e04:	4aad 000d 4b19 000d 4af1 000d 462d 000d     .J...K...J..-F..
   d6e14:	4ac1 000d 4add 000d 4acf 000d 4aeb 000d     .J...J...J...J..
   d6e24:	4aaf 000d 4ab3 000d                         .J...J..

000d6e2c <_ZTV7TwoWire>:
	...
   d6e34:	4ba9 000d 4bf3 000d 4bcb 000d 4bab 000d     .K...K...K...K..
   d6e44:	4bd3 000d 4bdb 000d 4be3 000d 4beb 000d     .K...K...K...K..

000d6e54 <_ZTVN5spark9WiFiClassE>:
	...
   d6e5c:	4c83 000d 4c79 000d 4c6f 000d 4c25 000d     .L..yL..oL..%L..
   d6e6c:	4c63 000d 4c57 000d 4c4b 000d 4c43 000d     cL..WL..KL..CL..
   d6e7c:	4c39 000d 4c2f 000d 4d09 000d               9L../L...M..

000d6e88 <_ZTVN5spark12NetworkClassE>:
	...
   d6e90:	4ca1 000d 4cab 000d 4cb5 000d 4cbf 000d     .L...L...L...L..
   d6ea0:	4cc9 000d 4cd5 000d 4ce1 000d 4ced 000d     .L...L...L...L..
   d6eb0:	4cf5 000d 4cff 000d 4d09 000d               .L...L...M..

000d6ebc <_ZSt7nothrow>:
   d6ebc:	0000 0000                                   ....

000d6ec0 <npio2_hw>:
   d6ec0:	21fb 3ff9 21fb 4009 d97c 4012 21fb 4019     .!.?.!.@|..@.!.@
   d6ed0:	6a7a 401f d97c 4022 fdbb 4025 21fb 4029     zj.@|."@..%@.!)@
   d6ee0:	463a 402c 6a7a 402f 475c 4031 d97c 4032     :F,@zj/@\G1@|.2@
   d6ef0:	6b9c 4034 fdbb 4035 8fdb 4037 21fb 4039     .k4@..5@..7@.!9@
   d6f00:	b41b 403a 463a 403c d85a 403d 6a7a 403f     ..:@:F<@Z.=@zj?@
   d6f10:	7e4c 4040 475c 4041 106c 4042 d97c 4042     L~@@\GA@l.B@|.B@
   d6f20:	a28c 4043 6b9c 4044 34ac 4045 fdbb 4045     ..C@.kD@.4E@..E@
   d6f30:	c6cb 4046 8fdb 4047 58eb 4048 21fb 4049     ..F@..G@.XH@.!I@

000d6f40 <two_over_pi>:
   d6f40:	f983 00a2 4e44 006e 29fc 0015 57d1 0027     ....DNn..)...W'.
   d6f50:	34dd 00f5 db62 00c0 993c 0095 9041 0043     .4..b...<...A.C.
   d6f60:	5163 00fe debb 00ab 61b7 00c5 6e3a 0024     cQ.......a..:n$.
   d6f70:	4dd2 0042 0649 00e0 ea09 002e 921c 00d1     .MB.I...........
   d6f80:	1deb 00fe b129 001c 3ee8 00a7 35f5 0082     ....)....>...5..
   d6f90:	bb44 002e e99c 0084 26b4 0070 7e41 005f     D........&p.A~_.
   d6fa0:	91d6 0039 8353 0039 f49c 0039 5f8b 0084     ..9.S.9...9.._..
   d6fb0:	f928 00bd 1ff8 003b ffde 0097 980f 0005     (.....;.........
   d6fc0:	2f11 00ef 5a0a 008b 1f6d 006d 7ecf 0036     ./...Z..m.m..~6.
   d6fd0:	cb09 0027 4f46 00b7 669e 003f ea2d 005f     ..'.FO...f?.-._.
   d6fe0:	27ba 0075 ebe5 00c7 7b3d 00f1 39f7 0007     .'u.....={...9..
   d6ff0:	5292 008a 6bfb 00ea b11f 005f 5d08 008d     .R...k...._..]..
   d7000:	0330 0056 fc7b 0046 abf0 006b bc20 00cf     0.V.{.F...k. ...
   d7010:	f436 009a a9e3 001d 615e 0091 1b08 00e6     6.......^a......
   d7020:	9985 0065 14a0 005f 408d 0068 d880 00ff     ..e..._..@h.....
   d7030:	7327 004d 0606 0031 56ca 0015 a8c9 0073     'sM...1..V....s.
   d7040:	e27b 0060 8c6b 00c0                         {.`.k...

000d7048 <PIo2>:
   d7048:	0000 4000 21fb 3ff9 0000 0000 442d 3e74     ...@.!.?....-Dt>
   d7058:	0000 8000 4698 3cf8 0000 6000 cc51 3b78     .....F.<...`Q.x;
   d7068:	0000 8000 1b83 39f0 0000 4000 2520 387a     .......9...@ %z8
   d7078:	0000 8000 8222 36e3 0000 0000 f31d 3569     ...."..6......i5

000d7088 <init_jk>:
   d7088:	0002 0000 0003 0000 0004 0000 0006 0000     ................

000d7098 <link_const_variable_data_end>:
   d7098:	000d4571 	.word	0x000d4571
   d709c:	000d45b9 	.word	0x000d45b9
   d70a0:	000d4605 	.word	0x000d4605
   d70a4:	000d4739 	.word	0x000d4739
   d70a8:	000d4749 	.word	0x000d4749
   d70ac:	000d477d 	.word	0x000d477d
   d70b0:	000d4c8d 	.word	0x000d4c8d
   d70b4:	000d4ddd 	.word	0x000d4ddd

000d70b8 <link_constructors_end>:
	...
